diff --git a/classes/article/ArticleGalleyDAO.inc.php b/classes/article/ArticleGalleyDAO.inc.php
index b312b93..0ee2e4f 100644
--- a/classes/article/ArticleGalleyDAO.inc.php
+++ b/classes/article/ArticleGalleyDAO.inc.php
@@ -42,7 +42,7 @@ class ArticleGalleyDAO extends DAO {
 		if ($articleId !== null) $params[] = (int) $articleId;
 		$result = &$this->retrieve(
 			'SELECT	g.*,
-				a.file_name, a.original_file_name, a.file_type, a.file_size, a.status, a.date_uploaded, a.date_modified
+				a.file_name, a.original_file_name, a.type, a.file_type, a.file_size, a.status, a.date_uploaded, a.date_modified
 			FROM	article_galleys g
 				LEFT JOIN article_files a ON (g.file_id = a.file_id)
 			WHERE	g.galley_id = ?' .
@@ -68,17 +68,11 @@ class ArticleGalleyDAO extends DAO {
 	 * galley ID, which is treated as an exception)
 	 * @param $publicGalleyId string
 	 * @param $galleyId int
-	 * @param $articleId int
 	 * @return boolean
 	 */
-	function publicGalleyIdExists($publicGalleyId, $galleyId, $articleId) {
+	function publicGalleyIdExists($publicGalleyId, $galleyId) {
 		$result = &$this->retrieve(
-			'SELECT COUNT(*) FROM article_galleys WHERE public_galley_id = ? AND galley_id <> ? AND article_id = ?',
-			array(
-				$publicGalleyId,
-				(int) $galleyId,
-				(int) $articleId
-			)
+			'SELECT COUNT(*) FROM article_galleys WHERE public_galley_id = ? AND galley_id <> ?', array($publicGalleyId, $galleyId)
 		);
 		$returner = $result->fields[0] ? true : false;
 
@@ -97,7 +91,7 @@ class ArticleGalleyDAO extends DAO {
 	function &getGalleyByPublicGalleyId($publicGalleyId, $articleId) {
 		$result = &$this->retrieve(
 			'SELECT	g.*,
-				a.file_name, a.original_file_name, a.file_type, a.file_size, a.status, a.date_uploaded, a.date_modified
+				a.file_name, a.original_file_name, a.type, a.file_type, a.file_size, a.status, a.date_uploaded, a.date_modified
 			FROM	article_galleys g
 				LEFT JOIN article_files a ON (g.file_id = a.file_id)
 			WHERE	g.public_galley_id = ? AND
@@ -128,7 +122,7 @@ class ArticleGalleyDAO extends DAO {
 
 		$result = &$this->retrieve(
 			'SELECT g.*,
-			a.file_name, a.original_file_name, a.file_type, a.file_size, a.status, a.date_uploaded, a.date_modified
+			a.file_name, a.original_file_name, a.type, a.file_type, a.file_size, a.status, a.date_uploaded, a.date_modified
 			FROM article_galleys g
 			LEFT JOIN article_files a ON (g.file_id = a.file_id)
 			WHERE g.article_id = ? ORDER BY g.seq',
@@ -189,6 +183,7 @@ class ArticleGalleyDAO extends DAO {
 		$galley->setLocale($row['locale']);
 		$galley->setFileId($row['file_id']);
 		$galley->setLabel($row['label']);
+		$galley->setType($row['type']);
 		$galley->setSequence($row['seq']);
 		$galley->setViews($row['views']);
 
diff --git a/classes/article/PublishedArticleDAO.inc.php b/classes/article/PublishedArticleDAO.inc.php
index 01a0c11..4928c32 100644
--- a/classes/article/PublishedArticleDAO.inc.php
+++ b/classes/article/PublishedArticleDAO.inc.php
@@ -227,6 +227,73 @@ class PublishedArticleDAO extends DAO {
 		return $publishedArticles;
 	}
 
+	function &getallPublishedArticlesInSections($simple = false) {
+		$primaryLocale = Locale::getPrimaryLocale();
+		$locale = Locale::getLocale();
+		$func = $simple?'_returnSimplePublishedArticleFromRow':'_returnPublishedArticleFromRow';
+		$publishedArticles = array();
+
+		$result = &$this->retrieve(
+			'SELECT DISTINCT
+				pa.*,
+				a.*,
+				COALESCE(stl.setting_value, stpl.setting_value) AS section_title,
+				COALESCE(sal.setting_value, sapl.setting_value) AS section_abbrev,
+				s.abstracts_not_required AS abstracts_not_required,
+				s.hide_title AS section_hide_title,
+				s.hide_author AS section_hide_author,
+				COALESCE(o.seq, s.seq) AS section_seq,
+				pa.seq
+			FROM	published_articles pa,
+				articles a
+				LEFT JOIN sections s ON s.section_id = a.section_id
+				LEFT JOIN custom_section_orders o ON (a.section_id = o.section_id)
+				LEFT JOIN section_settings stpl ON (s.section_id = stpl.section_id AND stpl.setting_name = ? AND stpl.locale = ?)
+				LEFT JOIN section_settings stl ON (s.section_id = stl.section_id AND stl.setting_name = ? AND stl.locale = ?)
+				LEFT JOIN section_settings sapl ON (s.section_id = sapl.section_id AND sapl.setting_name = ? AND sapl.locale = ?)
+				LEFT JOIN section_settings sal ON (s.section_id = sal.section_id AND sal.setting_name = ? AND sal.locale = ?)
+			WHERE	pa.article_id = a.article_id
+				AND a.status <> ' . STATUS_ARCHIVED . '
+			ORDER BY section_seq ASC, pa.date_published DESC',
+			array(
+				'title',
+				$primaryLocale,
+				'title',
+				$locale,
+				'abbrev',
+				$primaryLocale,
+				'abbrev',
+				$locale
+			)
+		);
+
+		$currSectionId = 0;
+		while (!$result->EOF) {
+			$row = &$result->GetRowAssoc(false);
+			$publishedArticle = &$this->$func($row);
+			if ($publishedArticle->getSectionId() != $currSectionId) {
+				$currSectionId = $publishedArticle->getSectionId();
+				$publishedArticles[$currSectionId] = array(
+					'articles'=> array(),
+					'title' => '',
+					'abstractsNotRequired' => $row['abstracts_not_required'],
+					'hideAuthor' => $row['section_hide_author']
+				);
+
+				if (!$row['section_hide_title']) {
+					$publishedArticles[$currSectionId]['title'] = $publishedArticle->getSectionTitle();
+				}
+			}
+			$publishedArticles[$currSectionId]['articles'][] = $publishedArticle;
+			$result->moveNext();
+		}
+
+		$result->Close();
+		unset($result);
+
+		return $publishedArticles;
+	}
+
 	/**
 	 * Retrieve Published Articles by section id
 	 * @param $sectionId int
@@ -285,6 +352,104 @@ class PublishedArticleDAO extends DAO {
 		return $publishedArticles;
 	}
 
+	function &getRecentPublishedArticles($simple = false) {
+		$primaryLocale = Locale::getPrimaryLocale();
+		$locale = Locale::getLocale();
+		$func = $simple?'_returnSimplePublishedArticleFromRow':'_returnPublishedArticleFromRow';
+		$publishedArticles = array();
+
+		$result = &$this->retrieve(
+			'SELECT	pa.*,
+				a.*,
+				COALESCE(stl.setting_value, stpl.setting_value) AS section_title,
+				COALESCE(sal.setting_value, sapl.setting_value) AS section_abbrev
+			FROM	published_articles pa,
+				articles a,
+				sections s
+				LEFT JOIN section_settings stpl ON (s.section_id = stpl.section_id AND stpl.setting_name = ? AND stpl.locale = ?)
+				LEFT JOIN section_settings stl ON (s.section_id = stl.section_id AND stl.setting_name = ? AND stl.locale = ?)
+				LEFT JOIN section_settings sapl ON (s.section_id = sapl.section_id AND sapl.setting_name = ? AND sapl.locale = ?)
+				LEFT JOIN section_settings sal ON (s.section_id = sal.section_id AND sal.setting_name = ? AND sal.locale = ?)
+			WHERE	a.section_id = s.section_id
+				AND pa.article_id = a.article_id
+				AND a.status <> ' . STATUS_ARCHIVED . '
+			ORDER BY pa.date_published DESC
+			LIMIT 3',
+			array(
+				'title',
+				$primaryLocale,
+				'title',
+				$locale,
+				'abbrev',
+				$primaryLocale,
+				'abbrev',
+				$locale
+			)
+		);
+
+		$currSectionId = 0;
+		while (!$result->EOF) {
+			$publishedArticle = &$this->$func($result->GetRowAssoc(false));
+			$publishedArticles[] = $publishedArticle;
+			$result->moveNext();
+		}
+
+		$result->Close();
+		unset($result);
+
+		return $publishedArticles;
+	}
+
+	function &getallPublishedArticlesBySectionId($sectionId, $simple = false) {
+		$primaryLocale = Locale::getPrimaryLocale();
+		$locale = Locale::getLocale();
+		$func = $simple?'_returnSimplePublishedArticleFromRow':'_returnPublishedArticleFromRow';
+		$publishedArticles = array();
+
+		$result = &$this->retrieve(
+			'SELECT	pa.*,
+				a.*,
+				COALESCE(stl.setting_value, stpl.setting_value) AS section_title,
+				COALESCE(sal.setting_value, sapl.setting_value) AS section_abbrev
+			FROM	published_articles pa,
+				articles a,
+				sections s
+				LEFT JOIN section_settings stpl ON (s.section_id = stpl.section_id AND stpl.setting_name = ? AND stpl.locale = ?)
+				LEFT JOIN section_settings stl ON (s.section_id = stl.section_id AND stl.setting_name = ? AND stl.locale = ?)
+				LEFT JOIN section_settings sapl ON (s.section_id = sapl.section_id AND sapl.setting_name = ? AND sapl.locale = ?)
+				LEFT JOIN section_settings sal ON (s.section_id = sal.section_id AND sal.setting_name = ? AND sal.locale = ?)
+			WHERE	a.section_id = s.section_id
+				AND pa.article_id = a.article_id
+				AND a.section_id = ?
+				AND a.status <> ' . STATUS_ARCHIVED . '
+			ORDER BY pa.date_published DESC',
+			array(
+				'title',
+				$primaryLocale,
+				'title',
+				$locale,
+				'abbrev',
+				$primaryLocale,
+				'abbrev',
+				$locale,
+				$sectionId,
+			)
+		);
+
+		$currSectionId = 0;
+		while (!$result->EOF) {
+			$publishedArticle = &$this->$func($result->GetRowAssoc(false));
+			$publishedArticles[] = $publishedArticle;
+			$result->moveNext();
+		}
+
+		$result->Close();
+		unset($result);
+
+		return $publishedArticles;
+	}
+
+
 	/**
 	 * Retrieve Published Article by pub id
 	 * @param $pubId int
@@ -301,7 +466,6 @@ class PublishedArticleDAO extends DAO {
 		$publishedArticle->setPubId($row['pub_id']);
 		$publishedArticle->setArticleId($row['article_id']);
 		$publishedArticle->setIssueId($row['issue_id']);
-		$publishedArticle->setPublicArticleId($row['public_article_id']);
 		$publishedArticle->setDatePublished($this->datetimeFromDB($row['date_published']));
 		$publishedArticle->setSeq($row['seq']);
 		$publishedArticle->setViews($row['views']);
diff --git a/classes/comment/CommentDAO.inc.php b/classes/comment/CommentDAO.inc.php
index fd806aa..78f9598 100644
--- a/classes/comment/CommentDAO.inc.php
+++ b/classes/comment/CommentDAO.inc.php
@@ -103,6 +103,18 @@ class CommentDAO extends DAO {
 	}
 
 	/**
+	 * Check how many comments each article has.
+	 * @param $articleId int The ID of the article to check
+	 * @return boolean
+	 */
+	function attributedCommentsExistForArticle($articleId) {
+		$result =& $this->retrieve('SELECT count(*) FROM comments WHERE article_id = ?', (int) $articleId);
+		$returner = $result->fields[0];
+		$result->Close();
+		return $returner;
+	}
+
+	/**
 	 * Retrieve Comment by comment id
 	 * @param $commentId int
 	 * @return Comment object
diff --git a/pages/index/IndexHandler.inc.php b/pages/index/IndexHandler.inc.php
index 5485365..b45bf23 100644
--- a/pages/index/IndexHandler.inc.php
+++ b/pages/index/IndexHandler.inc.php
@@ -61,7 +61,9 @@ class IndexHandler extends Handler {
 					$templateMgr->assign('announcements', $announcements);
 					$templateMgr->assign('enableAnnouncementsHomepage', $enableAnnouncementsHomepage);
 				}
-			} 
+			}
+			$CommentDAO =& DAORegistry::getDAO('CommentDAO');
+			$templateMgr->assign('CommentDAO', $CommentDAO);
 			$templateMgr->display('index/journal.tpl');
 		} else {
 			$siteDao = &DAORegistry::getDAO('SiteDAO');
diff --git a/pages/issue/IssueHandler.inc.php b/pages/issue/IssueHandler.inc.php
index 6803773..623c58a 100644
--- a/pages/issue/IssueHandler.inc.php
+++ b/pages/issue/IssueHandler.inc.php
@@ -73,11 +73,16 @@ class IssueHandler extends Handler {
 			} else {
 				$publishedArticleDao = &DAORegistry::getDAO('PublishedArticleDAO');
 				$publishedArticles = &$publishedArticleDao->getPublishedArticlesInSections($issue->getIssueId(), true);
+				$allpublishedArticles = &$publishedArticleDao->getallPublishedArticlesInSections($issue->getIssueId(), true);
 				$templateMgr->assign_by_ref('publishedArticles', $publishedArticles);
+				$templateMgr->assign_by_ref('allpublishedArticles', $allpublishedArticles);
 				$showToc = true;
 			}
 
 			$templateMgr->assign_by_ref('issue', $issue);
+
+			$issueDao = &DAORegistry::getDAO('IssueDAO');
+			$templateMgr->assign('issueDao', $issueDao);
 			$templateMgr->assign('showToc', $showToc);
 
 			// Subscription Access
@@ -153,6 +158,9 @@ class IssueHandler extends Handler {
 		$templateMgr = &TemplateManager::getManager();
 		IssueHandler::setupIssueTemplate($issue, ($showToc == 'showToc') ? true : false);
 
+		$CommentDAO =& DAORegistry::getDAO('CommentDAO');
+		$templateMgr->assign('CommentDAO', $CommentDAO);
+
 		// Display creative commons logo/licence if enabled
 		$templateMgr->assign('displayCreativeCommons', $journal->getSetting('includeCreativeCommons'));
 		$templateMgr->assign('pageHierarchy', array(array(Request::url(null, 'issue', 'archive'), 'archive.archives')));
@@ -199,13 +207,20 @@ class IssueHandler extends Handler {
 			} else {
 				$publishedArticleDao = &DAORegistry::getDAO('PublishedArticleDAO');
 				$publishedArticles = &$publishedArticleDao->getPublishedArticlesInSections($issue->getIssueId(), true);
+				$allpublishedArticles = &$publishedArticleDao->getallPublishedArticlesInSections(true);
+				$recentpublishedArticles = &$publishedArticleDao->getRecentPublishedArticles();
 
 				$publicFileManager = &new PublicFileManager();
 				$templateMgr->assign('publishedArticles', $publishedArticles);
+				$templateMgr->assign('allpublishedArticles', $allpublishedArticles);
+				$templateMgr->assign('recentpublishedArticles', $recentpublishedArticles);
 				$showToc = true;
 			}
 			$templateMgr->assign('showToc', $showToc);
 			$templateMgr->assign('issueId', $issue->getBestIssueId());
+
+			$issueDao = &DAORegistry::getDAO('IssueDAO');
+			$templateMgr->assign('issueDao', $issueDao);
 			$templateMgr->assign('issue', $issue);
 
 			// Subscription Access
@@ -285,6 +296,30 @@ class IssueHandler extends Handler {
 		$templateMgr->display('issue/archive.tpl');
 	}
 
+	function section($args) {
+		parent::validate(true);
+		$sectionId = isset($args[0]) ? $args[0] : 0;
+
+		$journal = &Request::getJournal();
+		$publishedArticleDao = &DAORegistry::getDAO('PublishedArticleDAO');
+		$publishedArticles = &$publishedArticleDao->getallPublishedArticlesBySectionId($sectionId, false);
+		$SectionDao = &DAORegistry::getDAO('SectionDAO');
+		$Section = &$SectionDao->getSection($sectionId);
+		$SectionTitle = $Section->getTitle(Locale::getLocale());
+		$CommentDAO =& DAORegistry::getDAO('CommentDAO');
+ 		$templateMgr = &TemplateManager::getManager();
+
+			$issueDao = &DAORegistry::getDAO('IssueDAO');
+			$templateMgr->assign('issueDao', $issueDao);
+
+		$templateMgr->assign('CommentDAO', $CommentDAO);
+		$templateMgr->assign('locale', Locale::getLocale());
+		$templateMgr->assign_by_ref('issues', $publishedIssuesIterator);
+		$templateMgr->assign('SectionTitle', $SectionTitle);
+		$templateMgr->assign('publishedArticles', $publishedArticles);
+		$templateMgr->display('issue/section.tpl');
+	}
+
 }
 
 ?>
diff --git a/plugins/blocks/developedBy/block.tpl b/plugins/blocks/developedBy/block.tpl
index 1ce7e47..c7c6317 100644
--- a/plugins/blocks/developedBy/block.tpl
+++ b/plugins/blocks/developedBy/block.tpl
@@ -1,13 +1,17 @@
-{**
- * block.tpl
- *
- * Copyright (c) 2003-2010 John Willinsky
- * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
- *
- * Common site sidebar menu -- "Developed By" block.
- *
- * $Id$
- *}
-<div class="block" id="sidebarDevelopedBy">
-	<a class="blockTitle" href="http://pkp.sfu.ca/ojs/" id="developedBy">{translate key="common.openJournalSystems"}</a>
-</div>	
+<div class="block" style="clear: both; padding-top: 15px;">
+<span class="blockTitle">Quick Links</span>
+<ul>
+ <li><a href="{url page="cms" op="view" path="whypublishinopenmedicine%253F"}">Why publish with OM?</a></li>
+ <li><a href="{url page="cms" op="view" path="openaccess"}">What is Open Access?</a></li>
+ <li><a href="{url page="cms" op="view" path="submitamanuscript"}">Submit a Manuscript or Revision</a></li>
+</ul>
+</div>
+
+
+<div class="block">
+<a href="http://identi.ca/openmedicine"><img src="/images/icons/identica.png" style="float: left;" alt="Identi.ca"/></a>
+<a href="http://twitter.com/openmedicine"><img src="/images/icons/twitter.png" style="float: left;" alt="Twitter" /></a>
+<a href="http://www.facebook.com/group.php?gid=6117690964"><img src="/images/icons/facebook.png" style="float: left;" alt="Facebook"/></a>
+<a href="http://www.openmedicine.ca/gateway/plugin/WebFeedGatewayPlugin/rss2"><img src="/images/icons/rss.png" style="float: left;" alt="Article RSS feed"/></a>
+</div>
+
diff --git a/plugins/blocks/navigation/index.php b/plugins/blocks/navigation/index.php
index bd1cac5..0240f96 100644
--- a/plugins/blocks/navigation/index.php
+++ b/plugins/blocks/navigation/index.php
@@ -7,7 +7,7 @@
 /**
  * @file plugins/blocks/navigation/index.php
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2009 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * @ingroup plugins_blocks_navigation
@@ -15,7 +15,7 @@
  *
  */
 
-// $Id$
+// $Id: index.php,v 1.5.2.1 2009/04/08 19:43:10 asmecher Exp $
 
 
 require_once('NavigationBlockPlugin.inc.php');
diff --git a/plugins/generic/externalFeed/block.tpl b/plugins/generic/externalFeed/block.tpl
index 04f6bc6..23afe96 100644
--- a/plugins/generic/externalFeed/block.tpl
+++ b/plugins/generic/externalFeed/block.tpl
@@ -1,22 +1,34 @@
 {**
  * block.tpl
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2009 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * External feed plugin navigation sidebar.
- *
- * $Id$
+ * <div class="FeedTitle"><a href="{$feedItem->get_permalink()}">{$feedItem->get_title()|truncate:40:"..."}</a></div>
+ * $Id: block.tpl,v 1.1.2.1 2009/10/14 03:46:24 michael Exp $
  *}
 <div class="block" id="sidebarExternalFeed">
 	{foreach from=$externalFeeds item=externalFeed}
-		<span class="blockTitle">{$externalFeed.title|truncate:20:"..."}</span>
-		<ul>
+		<span class="blockTitleFeed">{$externalFeed.title|truncate:20:"..."}</span>
 		{foreach from=$externalFeed.items item=feedItem}
-			<li>
-				<a href="{$feedItem->get_permalink()}" target="_blank">{$feedItem->get_title()|truncate:40:"..."}</a>
-			</li>
+			<div>
+				<div class="FeedTitle"><a href="{$feedItem->get_permalink()}">{$feedItem->get_title()}</a></div>
+				<div class="FeedAuthor">
+				{if $feedItem->get_author()}
+					{assign var=author value=$feedItem->get_author()}
+					{$author->get_name()}
+					{if $feedItem->get_date()}
+						| {$feedItem->get_date()}
+					{/if}
+				{else}
+					{if $feedItem->get_date()}
+						{$feedItem->get_date()}
+					{/if}
+				{/if}
+				</div>
+				<div class="FeedDescription">{$feedItem->get_description()|strip_tags|truncate:100:" »"}</div>
+			</div>
 		{/foreach}
-		</ul>
 	{/foreach}
 </div>
diff --git a/plugins/generic/xmlGalley/transform/nlm/functions.inc.xsl b/plugins/generic/xmlGalley/transform/nlm/functions.inc.xsl
index d56197c..b73c559 100644
--- a/plugins/generic/xmlGalley/transform/nlm/functions.inc.xsl
+++ b/plugins/generic/xmlGalley/transform/nlm/functions.inc.xsl
@@ -3,12 +3,12 @@
 <!--
   * functions.inc.xsl
   *
-  * Copyright (c) 2006-2009 MJ Suhonos
+  * Copyright (c) 2006 MJ Suhonos
   * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
   *
   * External XSL functions to support XSL within the XML Galleys plugin.
   *
-  * $Id$
+  * $Id: functions.inc.xsl,v 1.1 2007/01/17 04:47:50 mj Exp $
   -->
 
 <xsl:transform version="1.0"
@@ -324,4 +324,4 @@ document.write(String.fromCharCode(60,97,32,104,114,101,102,61,34,109,97,105,108
 	    </xsl:if>
 	  </xsl:template>
 
-</xsl:transform>
+</xsl:transform>
\ No newline at end of file
diff --git a/plugins/generic/xmlGalley/transform/nlm/nlm-xhtml.xsl b/plugins/generic/xmlGalley/transform/nlm/nlm-xhtml.xsl
index 6b0cd4b..245785c 100644
--- a/plugins/generic/xmlGalley/transform/nlm/nlm-xhtml.xsl
+++ b/plugins/generic/xmlGalley/transform/nlm/nlm-xhtml.xsl
@@ -1,886 +1,4705 @@
-<?xml version="1.0" encoding="UTF-8"?>
-	<!-- ============================================================= -->
-	<!--  MODULE:    XSLT transform for NLM Journal Article            -->
-	<!--             to OJS 2.x XHTML Article                          -->
-	<!--  VERSION:   1.0                                               -->
-	<!--  DATE:      August 2006                                       -->
-	<!--                                                               -->
-	<!--  Copyright 2006-2009 MJ Suhonos <mj@robotninja.com>           -->
-	<!--  Contributions by Alf Eaton <alf@hubmed.org>                  -->
-	<!--                                                               -->
- 	<!-- Distributed under the GNU GPL v2.                             -->
-	<!-- For full terms see the file docs/COPYING.                     -->
-	<!--                                                               -->
-	<!-- ============================================================= -->
+<?xml version="1.0"?>
+<!-- ============================================================= -->
+<!--  MODULE:    HTML View of NLM Journal Article                  -->
+<!--  VERSION:   2.30                                           -->
+<!--  DATE:      June 2007                                      -->
+<!--                                                               -->
+<!-- ============================================================= -->
+
+<!-- ============================================================= -->
+<!--  SYSTEM:    NCBI Archiving and Interchange Journal Articles   -->
+<!--                                                               -->
+<!--  PURPOSE:   Provide an HTML preview of a journal article,     -->
+<!--             in a form suitable for reading.                   -->
+<!--                                                               -->
+<!--  CONTAINS:  Documentation:                                    -->
+<!--               D1) Change history                              -->
+<!--               D2) Structure of this transform                 -->
+<!--               D3) Design of the output                        -->
+<!--               D4) Constraints on the input                    -->
+<!--                                                               -->
+<!--             Infrastructure:                                   -->
+<!--               1) Transform element and top-level settings     -->
+<!--                  including parameters, variables, keys, and   -->
+<!--                  look-up tables                               -->
+<!--               2) Root template                                -->
+<!--               3) Document template (and make-a-piece)         -->
+<!--               4) Utility templates                            -->
+<!--               5) Formatting elements                          -->
+<!--               6) Suppressed elements                          -->
+<!--             Called templates for article parts:               -->
+<!--               7) make-html-header                             -->
+<!--               8) make-front                                   -->
+<!--               9) make-body                                    -->
+<!--              10) make-back                                    -->
+<!--              11) make-post-publication                        -->
+<!--              12) make-end-metadata                            -->
+<!--             Narrative content and common structures:          -->
+<!--              13) paragraph                                    -->
+<!--              14) section                                      -->
+<!--              15) list                                         -->
+<!--              16) display-quote                                -->
+<!--              17) speech                                       -->
+<!--              18) statement                                    -->
+<!--              19) verse-group                                  -->
+<!--              20) boxed-text                                   -->
+<!--              21) preformat                                    -->
+<!--              22) supplementary-material                       -->
+<!--              23) display-formula and chem-struct-wrapper      -->
+<!--             Inline Elements:                                  -->
+<!--              24) formatting elements                          -->
+<!--              25) semantic elements                            -->
+<!--              26) break and horizontal rule                    -->
+<!--             Display Objects:                                  -->
+<!--              27) chem-struct                                  -->
+<!--              28) tex-math and math                            -->
+<!--              29) graphic and media                            -->
+<!--              30) array                                        -->
+<!--              31) captioning                                   -->
+<!--              32) figure (mode put-at-end)                     -->
+<!--              33) table-wrap (mode put-at-end)                 -->
+<!--             Front mode:                                       -->
+<!--              34) journal-meta                                 -->
+<!--              35) article-meta                                 -->
+<!--              36) title-group                                  -->
+<!--              37) the parts of contrib element                 -->
+<!--             Back (no mode):                                   -->
+<!--              38) Acknowledgements                             -->
+<!--              39) Appendix                                     -->
+<!--              40) Footnote-group and fn                        -->
+<!--              41) Notes                                        -->
+<!--              42) Glossary                                     -->
+<!--             Links:                                            -->
+<!--              43) Target of a reference                        -->
+<!--              44) xref                                         -->
+<!--              45) external links                               -->
+<!--             Titles:                                           -->
+<!--              46) Main article divisions                       -->
+<!--              47) First-level subdivisions and default         -->
+<!--              48) make-abstract-title                          -->
+<!--             Unmoded data elements:                            -->
+<!--              49) Miscellaneous (epage, series, etc.)          -->
+<!--              50) Parts of a date                              -->
+<!--              51) Parts of a name                              -->
+<!--             Citation and nlm-citation (NLM templates):        -->
+<!--              52) ref-list                                     -->
+<!--              53) ref                                          -->
+<!--              54) citation                                     -->
+<!--              55) nlm-citation                                 -->
+<!--              56) citation sub-parts                           -->
+<!--              57) citation-tag-ends                            -->
+<!--                                                               -->
+<!--  PROCESSOR DEPENDENCIES:                                      -->
+<!--             None: standard XSLT 1.0                           -->
+<!--             Tested under Apache Xalan 2.5.1                   -->
+<!--                                                               -->
+<!--  COMPONENTS REQUIRED:                                         -->
+<!--             1) This stylesheet                                -->
+<!--             2) CSS styles defined in ViewNLM.css              -->
+<!--                                                               -->
+<!--  INPUT:     An XML document valid with the NLM                -->
+<!--             Publishing or Archive and Interchange DTD.          -->
+<!--                                                               -->
+<!--  OUTPUT:    An HTML preview of the article.                   -->
+<!--                                                               -->
+<!--  ORIGINAL CREATION DATE:                                      -->
+<!--             October 2003                                      -->
+<!--                                                               -->
+<!-- ============================================================= -->
+
+<!-- ============================================================= -->
+<!--  D1) STYLESHEET VERSION / CHANGE HISTORY                      -->
+<!-- =============================================================
+
+ No.  CHANGE (reason for / description)  	     VERSION 	DATE
+
+  6.  Added user-requested improvements	v2.30		2007-06-01
+  	- Added custom-meta-wrap
+  	- Corrected behavior of ext-link, uri, xref, label, list, table, def-list
+  	- Defined missing classes: monospace, overline, take-note
+  	- Mode nscitation to not write out any punctuation beyond name list
+  	- Named-content now highlighted in flow of text
+
+  5.  Changed documentation style from comments
+      to (example) doc:documentation/doc:p      v02.04 2005-08-10
+
+  4.  Revised to produce XHTML.                 v02.03 2005-08-10
+
+  3.  Revised to accommodate DTD changes        v02.02 2005-08-22
+
+      - Added mml namespace declaration for MathML
+      - Changed the namespace prefix for the utilities
+        internal to this transform, from "m" to "util",
+        [to avoid confusion with the MathML use of "m",
+        which the NLM DTD overrides to "mml" for the sake
+        of backwards compatibility].
+
+  2.  Revised to fix typos and infelicities.    v02.01 2005-08-08
+
+      - Reorganized transform for easier reading
+          e.g., consolidated mode="none" templates (applied to loose
+        bibref models when XML source doesn't provide punctuation).
+
+      - Replaced xsl:text making newlines with a call-template,
+        for easier reading and so these can be suppressed
+        (conditionally or unconditionally) if desired. Also, now
+        a search on xsl:text will find only (real) generated text.
+
+      - Diagnosed issue with display of title-in-left-column,
+        content-in-right-column in IE, Firefox.
+      - Corrected behavior of many small parts, e.g.,
+        self-uri, product/contrib and product/collab, etc.
+      - Regularized the mode names and usage for front and back.
+      - Set up structure anticipating sub-article and response
+        (both of which have same top-level parts as article,
+        and are themselves -within- article).
+      - Improved punctuation and display of xrefs
+        (fn, table-fn, bibr)
+      - Corrected behavior of generated text on abstract types.
+      - In templates for author-notes and descendents, made
+        provision for the presence of a title/label.
+      - In template for author name, corrected "pref" to "prefix"
+      - In template for speech, corrected logic on excluding speaker
+      - Tightened up the test for mode="none" on citation/ref.
+
+      - Changed xsl:output indent to yes (was no)
+      - Changed xsl:strip-space element list (was *)
+      - Added xsl:preserve-space element list
+
+      - Added doctype calls for Strict HTML DTD (in prep for
+        producing XHTML).
+
+  1.  v0.1.                                     v01 2003-11-03
+
+      Based on transform downloaded from NCBI website 10/23/03.
+
+      This version (v0.1) produces readable output
+      for a sample set of publishing and archiving articles.
+      There is more to do with respect to scope (e.g., the
+      permissible variations in content allowed by the
+      Archiving DTD).
+
+                                                                   -->
+<!-- ============================================================= -->
+
+<!-- ============================================================= -->
+<!--  D2) STRUCTURE OF THIS TRANSFORM                              -->
+<!-- ============================================================= -->
+
+<!--  The main transform is organized into sections as enumerated
+      above.
 
-	<!-- ============================================================= -->
-	<!--  TRANSFORM ELEMENT AND TOP-LEVEL SETTINGS                     -->
-	<!-- ============================================================= -->
+      It is sometimes preferable to separate element templates,
+      named templates, and moded templates. In this case, however,
+      that would reduce rather than increase legibility. It is
+      easier to follow what the front-matter template is doing
+      when the named templates and modes it uses are ready to hand;
+      similarly for the back matter and, especially, the references.
 
-	<xsl:transform version="1.0"
-                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
-                xmlns:xlink="http://www.w3.org/1999/xlink"
-                xmlns:util="http://dtd.nlm.nih.gov/xsl/util"
-                xmlns:mml="http://www.w3.org/1998/Math/MathML"
-                exclude-result-prefixes="util xsl xlink mml">
+      The design gives considerable importance to clarity and
+      maintainability, resulting in conventions such as generally
+      giving each element type its own template, in preference to
+      more concise alternatives.
 
-	<!-- ============================================================= -->
-	<!-- INCLUDE THE NLM XHTML STYLESHEET                              -->
-	<!-- ============================================================= -->
+      In addition, the transform produces explicit new-lines
+      to improve legibility of the serialized output. (These are
+      in the form <xsl:call-template name="nl-2"/>. )
 
-	<xsl:include href="viewnlm-v2.xsl"/>
+      This transform is commented to explain the mappings used,
+      and (intermittently) the content combinations being handled.
+                                                                   -->
 
-	<xsl:output method="html"
-	    		indent="yes"
-	    		omit-xml-declaration="yes"
-	    		standalone="no"
-	    		encoding="utf-8" />
+<!-- ============================================================= -->
+<!--  D3) DESIGN OF THE OUTPUT                                     -->
+<!-- ============================================================= -->
 
+<!-- Purpose: An HTML preview of an article, to assist the
+              author or editor in finalizing and approving
+              the tagging.
 
-	<!-- ============================================================= -->
+     Characteristics arising from purpose:
 
-	<xsl:include href="functions.inc.xsl"/>
+              - link/target pairs display the ID as a label,
+                rather than generating an explicit number.
+              - the running-head text, if any, is displayed
+                below the title
 
-    <xsl:template match="/article">
-		<!-- set javascript target so xref links open in same window -->
-		<xsl:call-template name="window_name">
-			<xsl:with-param name="name" select="'xrefwindow'"/>
-		</xsl:call-template>
 
-		<xsl:apply-templates select="front"/>
-		<xsl:call-template name="make-body"/>
-		<xsl:apply-templates select="back"/>
-    </xsl:template>
+     Organization of Display:
 
+     A. HTML setup
+       1. HTML Metadata
 
-	<!--============================================
-		FRONT-MATTER ELEMENTS
-	==============================================-->
+     B. Article
 
-	<xsl:template match="front">
-		<div id="article-front" class="fm">
+       1. Front: Publication metadata (journal and article)
 
-			<!-- article type -->
-			<xsl:apply-templates select="article-meta/article-categories/subj-group"/>
+       2. Content metadata:
+                 Title
+                 Contributor(s)
+                 Abstract(s)
 
-			<h3 class="article-title">
-				<xsl:value-of select="article-meta/title-group/article-title"/>
-			</h3>
+       3. Body:  Sections &c.
 
-			<p class="author-list">
-				<xsl:apply-templates select="article-meta/contrib-group/contrib[@contrib-type='author']">
-					<xsl:sort select="@id"/>
-				</xsl:apply-templates>						
-	        </p>
+       4. Back:  a) From XML "back": acknowledgements,
+                   glossary, references, and back-matter notes.
 
-			<p class="affiliations">
-            	<xsl:apply-templates select="article-meta/aff">
-                	<xsl:sort select="@id"/>
-            	</xsl:apply-templates>
-			</p>
-			
-			<div class="author-notes">
-				<xsl:apply-templates select="article-meta/author-notes" mode="front"/>
-			</div>
+                 b) Figs-and-tables. These are collected from
+                    throughout the front, body, and back.
 
-			<!-- corresponding author -->
-			<!-- TODO: multiple corresp are supported in the DTD, we need to handle this -->
-			<xsl:apply-templates select="article-meta/contrib-group/contrib[@contrib-type='author' and @corresp='yes' and (address or email)][1]" mode="corresp"/>
+                 c) Content metadata for retrieval - keywords,
+                    subject categories. &c.
 
-			<xsl:if test="article-meta/related-article">
-		        <p id="related-articles">
-					<div class="tl-main-part">Related articles:</div>
-					<xsl:apply-templates select="article-meta/related-article"/>
-				</p>
-			</xsl:if>
+     C. Sub-article or response, if any
 
-			<xsl:apply-templates select="article-meta/abstract"/>
+        Has the same 5-part structure as "B. Article".
 
-			<p class="reviewers">
-				<xsl:apply-templates select="article-meta/contrib-group/contrib[@contrib-type='reviewer']"/>
-	        </p>
 
-			<p class="history">
-				<xsl:apply-templates select="article-meta/history | ../pub-date[@pub-type='epub']" mode="front"/>
-			</p>
+     Typographic notes:
 
-			<!-- article citation info -->
-			<xsl:call-template name="self-citation"/>
+     A red rule separates the four document divisions listed
+     above for article. The major divisions -within- those parts
+     are separated by a black rule.
 
-			<xsl:if test="article-meta/copyright-statement or article-meta/permissions/copyright-statement">
-				<span id="copyright" class="tl-main-part">Copyright</span>
-				<p>	
-					<xsl:apply-templates select="article-meta/copyright-statement | article-meta/permissions/copyright-statement" mode="front"/>
-				</p>
-			</xsl:if>
+     Content that is composed of repeated alternations of
+     minor heading and text - such as the contributor section,
+     the figures section, and the references section - is
+     displayed as a two-column table, with the title/heading/label
+     in the left column and the substance in the right column.
 
-			<xsl:apply-templates select="article-meta/kwd-group"/>
+     Generated text is displayed in gray, to distinguish it
+     from text derived from the source XML.
 
-		</div>
-	</xsl:template>
+-->
 
-    <xsl:template name="self-citation">
-        <div class="self-citation">
+<!-- ============================================================= -->
+<!--  D4) CONSTRAINTS ON THE INPUT                                 -->
+<!-- ============================================================= -->
 
-			<!-- one-line citation -->
-            <abbr class="title" title="{journal-meta/journal-title}">
-<!--                <xsl:value-of select="journal-meta/journal-id[@journal-id-type='nlm-ta' or @journal-id-type='pubmed'][1]"/> 	-->
-				<xsl:value-of select="journal-meta/journal-id"/>
-            </abbr>
-            <xsl:text>. </xsl:text>
+<!--
 
-			<xsl:choose>
-				<xsl:when test="article-meta/pub-date[@pub-type='epub']">
-					<xsl:call-template name="date-format">
-						<xsl:with-param name="date">
-							<xsl:value-of select="format-number(article-meta/pub-date[@pub-type='epub']/year,'0000')"/>
-							<xsl:value-of select="format-number(article-meta/pub-date[@pub-type='epub']/month,'00')"/>
-							<xsl:value-of select="format-number(article-meta/pub-date[@pub-type='epub']/day,'00')"/>
-						</xsl:with-param>
-						<xsl:with-param name="type" select="'short'"/>
-					</xsl:call-template>
-				</xsl:when>
-				<xsl:otherwise>
-					<xsl:call-template name="date-format">
-						<xsl:with-param name="date">
-							<xsl:value-of select="format-number(article-meta/pub-date/year,'0000')"/>
-							<xsl:value-of select="format-number(article-meta/pub-date/month,'00')"/>
-							<xsl:value-of select="format-number(article-meta/pub-date/day,'00')"/>
-						</xsl:with-param>
-						<xsl:with-param name="type" select="'short'"/>
-					</xsl:call-template>
-				</xsl:otherwise>
-            </xsl:choose>
-            <xsl:text>; </xsl:text>
+1. The present transform doesn't handle:
+     - sub-article or response
+     - a full-featured narrative in supplementary-material
+     - the attributes and elements pertaining to -groups-
+       of figures or tables (fig-group, table-wrap-group).
+       Their contained fig/table-wrap -are- handled.
+     - col, colgroup
 
-            <xsl:if test="article-meta/volume">
-				<xsl:value-of select="article-meta/volume"/>
-            </xsl:if>
+2. Article-meta that is not displayed at the top or end
+   of the article:
 
-            <xsl:if test="article-meta/issue">
-                <xsl:text>(</xsl:text><xsl:value-of select="article-meta/issue"/><xsl:text>)</xsl:text>
-            </xsl:if>
+                volume-id
+                issue-id
+                issue-title
+                supplement
+                page-range
+                conference/conf-num
+                conference/conf-sponsor
+                conference/conf-theme
 
-            <xsl:if test="article-meta/elocation-id">
-                <xsl:text>: </xsl:text><xsl:value-of select="article-meta/elocation-id"/>
-            </xsl:if>
+3. xlink attributes are suppressed *except for* xlink:href,
+   which becomes an href or src attribute as follows:
 
-			<xsl:if test="article-meta/article-id[@pub-id-type='doi']">
-				<div id="doi">
-		        	<abbr title="Digital Object Identifier">doi</abbr>
-		        	<xsl:text>: </xsl:text><xsl:value-of select="article-meta/article-id[@pub-id-type='doi']"/>
-				</div>
-			</xsl:if>
-        </div>
-	  	<br/>
+      a) For inline-graphic, graphic, media:
 
-    </xsl:template>
+           <img src="..."> & apply-templates
 
+      b) For phrase-level elements
 
-	<!--============================================
-		BACK-MATTER ELEMENTS
-	==============================================-->
+          <a href="..."> & apply-templates
 
-	<!-- force output of back matter into preferred order -->
-    <xsl:template match="back">
+      c) For block containers and grouping elements:
 
-		<hr class="part-rule"/>		
+          <a href="..."> around whatever is being displayed
+          as the object identifier, e.g.,
 
-        <div id="article-back" class="bm">
+           - label or caption (for a graphic),
+           - title (for a bio),
+          or, if none such is available,
+           - around the generated string "[link]"
 
-			<!-- back matter title if there is one -->
-		    <xsl:apply-templates select="title"/>
+4. Attributes and child elements displayed for graphic:
 
-			<!-- supporting information -->
-		    <xsl:apply-templates select="notes"/>
+    The id and xlink:href attributes are displayed.
+    The label, caption, and alt-text child elements are displayed.
 
-			<!-- footnotes -->
-            <xsl:apply-templates select="fn-group"/>
+5. Location of media files
 
-			<!-- acknowledgements -->
-            <xsl:apply-templates select="ack"/>
+   Transform assumes the @xlink:href value is an absolute
+   path, not a relative one. To change this assumption:
 
-	<!-- Biography <bio>? only matches in mode=front -->
+   a) In the transform, create a variable which records
+      the location of the graphics, e.g.,
 
-			<!-- appendices -->
-            <xsl:apply-templates select="app-group"/>
+      <xsl:variable name="graphics-dir"
+                    select="'file:///c:/books/mybook/pix'"/>
 
-			<!-- abbreviations -->
-		    <xsl:apply-templates select="glossary"/>
+   b) In the XML, use relative paths:
 
-			<!-- references -->
-            <xsl:apply-templates select="ref-list"/>
-        </div>
-    </xsl:template>
+      <graphic xlink:href="poodle.jpg"/>
 
+   c) Edit the appropriate template(s) in the transform
+      to combine these two values:
 
-	<!-- ============================================================= -->
-	<!-- TEMPLATES THAT OVERLOAD THE NLM XHTML STYLESHEET              -->
-	<!-- ============================================================= -->
+      <img src="{concat($graphics-dir}, '/', {@xlink:href})"/>
 
-	<xsl:template match="abbrev">
-	  <xsl:choose>
-	    <xsl:when test="@xlink:href">
-	      <a>
-	        <xsl:call-template name="make-href"/>
-	        <xsl:call-template name="make-id"/>
-	        <xsl:apply-templates/>
-	      </a>
-	    </xsl:when>
-	    <xsl:otherwise>
-	      <abbr class="capture-id">
-	        <xsl:call-template name="make-id"/>
-	        <xsl:apply-templates/>
-	      </abbr>
-	    </xsl:otherwise>
-	  </xsl:choose>
-	</xsl:template>
-
-    <xsl:template match="abstract | trans-abstract">
-	  	<br/>
-		<hr class="part-rule"/>
-
-		<h3 id="abstract">
-			<!-- if there's no title, create one -->
-			<xsl:call-template name="words-for-abstract-title"/>
-		</h3>
-
-		<xsl:call-template name="nl-1"/>
-
-		<xsl:apply-templates select="*[not(self::title)]"/>
-    </xsl:template>
-
-	<!-- suppress TOC version of abstract if it exists -->
-    <xsl:template match="abstract[@abstract-type='toc']"/>
-
-	<xsl:template match="address">
-		<address>
-		    <xsl:call-template name="make-id"/>
-			<xsl:apply-templates/>
-		</address>
-	</xsl:template>
+5. Supplementary-material
 
-    <xsl:template match="addr-line | country | institution | phone | fax">
-		<xsl:if test="local-name() = 'phone'">
-			<xsl:text>Phone: </xsl:text>
-		</xsl:if>
-		<xsl:if test="local-name() = 'fax'">
-			<xsl:text>Fax: </xsl:text>
-		</xsl:if>
+   Transform assumes that the purpose & scope
+   when tagging supplementary-material are:
 
-		<xsl:apply-templates/>
+     - point to an external file, such as a PDF or map
+     - perhaps providing a paragraph or two of description
+     - not using any of the much-manipulated elements,
+       i.e., footnotes, tables, figures, and references.
+-->
 
-        <xsl:if test="position() != last() and following-sibling::*[.!='']">
-            <xsl:text>, </xsl:text> 		<!-- separator: typically , or <br /> -->
-        </xsl:if>
-	</xsl:template>
 
-	<xsl:template match="aff">
-        <span id="#{@id}" class="aff">
-			<xsl:apply-templates select="./text() | *[.!='']"/>
+<!-- ============================================================= -->
+<!--  1. TRANSFORM ELEMENT AND TOP-LEVEL SETTINGS                  -->
+<!-- ============================================================= -->
 
-	        <xsl:if test="position() != last()">
-	            <xsl:text>, </xsl:text> 	<!-- separator: typically , or <br /> -->
-	        </xsl:if>
-		</span>
-	</xsl:template>
+<xsl:transform version="1.0" id="ViewNLM-v2-04.xsl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+	xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:util="http://dtd.nlm.nih.gov/xsl/util"
+	xmlns:mml="http://www.w3.org/1998/Math/MathML" exclude-result-prefixes="util xsl xlink mml">
 
-	<!-- TODO: pluralize appendices if there are multiple app-group/app -->
-	<xsl:template match="app-group">
-		<xsl:if test="position() = 1 and not(app/title)">
-			<div class="tl-main-part" id="appendix">Appendix</div>
-		</xsl:if>
+	<xsl:output method="html"
+		indent="yes"
+		encoding="UTF-8"
+		omit-xml-declaration="yes"
+    		standalone="no"/>
 
-		<xsl:apply-templates/>
-	</xsl:template>
+	<xsl:strip-space elements="*"/>
 
-    <xsl:template match="bold">
-        <strong>
-            <xsl:apply-templates/>
-        </strong>
-    </xsl:template>
+	<xsl:preserve-space elements="preformat"/>
 
-	<!-- XHTML table model elements -->
-    <xsl:template match="col | colgroup | tbody">
-        <xsl:copy>
-			<!-- XHTML table model attributes -->
-			<xsl:copy-of select="@abbr | @align | @axis | @border | @cellpadding | @cellspacing | @char | @charoff | @colspan | @frame | @headers | @rowspan | @rules | @scope | @span | @summary | @valign | @width"/>
-            <xsl:apply-templates/>
-        </xsl:copy>
-    </xsl:template>
 
-    <xsl:template match="contrib[@contrib-type='author']">
-        <span class="author" id="author-{position()}">
-			<xsl:apply-templates select="name | collab" mode="front"/>
+	<!--  Run-time parameters -->
 
-            <xsl:if test="position() != last()">
-                <xsl:text>; </xsl:text>
-            </xsl:if>
-        </span>
-    </xsl:template>
+	<!--  This stylesheet accepts no run-time parameters.              -->
 
-    <xsl:template match="contrib[@contrib-type='author' and @corresp='yes' and (address or email)]" mode="corresp">
-        <div class="tl-main-part">Corresponding author:</div>
 
-		<div class="name">
-			<xsl:apply-templates select="name" mode="corresp"/>
-		</div>
+	<!-- Keys -->
 
-		<xsl:apply-templates select="address"/>
-		<xsl:apply-templates select="email"/>
-    </xsl:template>
+	<!-- To reduce dependency on a DTD for processing, we declare
+     a key to use in lieu of the id() function. -->
+	<xsl:key name="element-by-id" match="*[@id]" use="@id"/>
 
-    <xsl:template match="contrib[@contrib-type='reviewer']">
+	<!-- Conversely, we can retrieve referencing elements
+     from the node they reference. -->
+	<xsl:key name="element-by-rid" match="*[@rid]" use="@rid"/>
 
-		<xsl:if test="position() = 1">
-			<xsl:text>Peer-reviewed by: </xsl:text>
-		</xsl:if>
 
-        <span class="author" id="author-{position()}">
-			<xsl:apply-templates select="name" mode="corresp"/>
+	<!-- Lookup table for person-type strings
+     used in nlm-citations -->
+	<xsl:variable name="person-strings" select="document('')/*/util:map[@id='person-strings']/item"/>
 
-			<xsl:choose>
-				<xsl:when test="position() = last() - 1">
-                    <xsl:text> and </xsl:text>
-				</xsl:when>
-				<xsl:when test="position() != last()">
-                    <xsl:text>, </xsl:text>
-				</xsl:when>
-			</xsl:choose>
+	<util:map id="person-strings">
+		<item source="editor" singular="editor" plural="editors"/>
+		<item source="assignee" singular="assignee" plural="assignees"/>
+		<item source="translator" singular="translator" plural="translators"/>
+		<item source="transed" singular="translator and editor" plural="translators and editors"/>
+		<item source="guest-editor" singular="guest editor" plural="guest editors"/>
+		<item source="compiler" singular="compiler" plural="compilers"/>
+		<item source="inventor" singular="inventor" plural="inventors"/>
+		<!-- value 'allauthors' puts no string out -->
+	</util:map>
 
-		</span>
-	</xsl:template>
 
-	<!-- render proper XHTML for definition/glossary lists -->
-    <xsl:template match="def">
-        <dd>
-            <xsl:apply-templates mode="def"/>
-        </dd>
-    </xsl:template>
+	<!-- ============================================================= -->
+	<!--  2. ROOT TEMPLATE - HANDLES HTML FRAMEWORK                    -->
+	<!-- ============================================================= -->
 
-    <xsl:template match="def-head"/> 	<!-- suppress def-head until we know what it does -->
+	<xsl:template match="/">
 
-    <xsl:template match="def-item">
-        <xsl:apply-templates/>
-    </xsl:template>
+		<xsl:call-template name="nl-1"/>
+		<xsl:apply-templates/>
+	</xsl:template>
 
-    <xsl:template match="def-list">
-		<xsl:apply-templates select="def-head"/>
-        <dl>
-            <xsl:apply-templates select="def-item"/>
-        </dl>
-    </xsl:template>
+	<!-- ============================================================= -->
+	<!--  3. DOCUMENT ELEMENT                                          -->
+	<!-- ============================================================= -->
 
-    <xsl:template match="disp-quote">
-		<xsl:call-template name="nl-1"/>
-        <blockquote class="disp-quote">
-			<xsl:call-template name="make-id"/>
-			<q>
-            	<xsl:apply-templates select="*[local-name() != 'attrib']"/>
-			</q>
-	        <xsl:apply-templates select="attrib"/>
-        </blockquote>
-		<xsl:call-template name="nl-1"/>
-    </xsl:template>
+	<!-- Can add sub-article and response to this match:
+      - "make-a-piece" as required;
+      - adapt the selection of elements that get managed as a set:
+        footnotes, cross-references, tables, and figures. -->
 
-	<xsl:template match="email">
-		<strong>E-mail: </strong>
-	  	<xsl:call-template name="nl-1"/>
-		<!-- this requires the functions.inc.xsl to be included to obfuscate the email address -->
-		<xsl:call-template name="scramble_email">
-			<xsl:with-param name="email" select="."/>
-		</xsl:call-template>
+	<xsl:template match="article">
+		<xsl:call-template name="make-a-piece"/>
 	</xsl:template>
 
-	<xsl:template match="ext-link | uri">
-		<xsl:variable name="link-content">
-			<xsl:choose>
-				<xsl:when test=".=''">
-					<xsl:call-template name="spaceURLs">
-						<xsl:with-param name="string">
-							<xsl:value-of select="@xlink:href"/>
-						</xsl:with-param>
-					</xsl:call-template>
-				</xsl:when>
-				<xsl:otherwise>
-					<xsl:value-of select="."/>
-				</xsl:otherwise>
-			</xsl:choose>
-		</xsl:variable>
 
-		<xsl:choose>
-			<xsl:when test="@xlink:href">
-				<!-- NB: target is deprecated in XHTML 1.0S -->
-				<a target="_blank">
-					<xsl:call-template name="make-href"/>
-					<xsl:call-template name="make-id"/>
-					<xsl:value-of select="$link-content"/>
-				</a>
-			</xsl:when>
-			<xsl:otherwise>
-				<span class="capture-id">
-					<xsl:call-template name="make-id"/>
-					<xsl:value-of select="$link-content"/>
-				</span>
-			</xsl:otherwise>
-		</xsl:choose>
+	<!-- ============================================================= -->
+	<!--  3. "make-a-piece"                                            -->
+	<!-- ============================================================= -->
 
-	</xsl:template>
+	<!--  Generalized management of front, body, back, and trailing
+      content, presently oeprates for sub-article and response
+      exactly as for article. -->
 
-	<xsl:template match="fig | fig-group | table-wrap | table-wrap-group">
-        <div class="{local-name()}">
-			<xsl:call-template name="make-id"/>
+	<!--  Organization of output:
+         make-front
+         make-body
+         make-back
+         make-figs-and-tables
+         make-end-metadata
+         ...then...
+         do the same for any contained sub-article/response
+-->
+
+	<!-- initial context node is article -->
+
+	<xsl:template name="make-a-piece">
+
+		<!-- variable to be used in div id's to keep them unique -->
+		<xsl:variable name="which-piece">
+			<xsl:value-of select="concat(local-name(), '-level-', count(ancestor::*))"/>
+		</xsl:variable>
 
-			<xsl:if test="@id">
-				<a class="{local-name()}">
-				<xsl:attribute name="name">
-					<xsl:value-of select="@id"/>
-				</xsl:attribute>
-				</a>
-			</xsl:if>
 
-			<xsl:apply-templates select="." mode="put-at-end"/>
+		<!-- front matter, in table -->
+		<xsl:call-template name="nl-2"/>
+		<div id="{$which-piece}-front" class="fm">
+			<!-- class is repeated on contained table elements -->
+			<xsl:call-template name="nl-1"/>
+			<xsl:call-template name="make-front"/>
+			<xsl:call-template name="nl-1"/>
 		</div>
-	</xsl:template>
 
-	<xsl:template match="fn">
-	    <div class="fn">
-			<xsl:call-template name="make-id"/>
-	        <xsl:apply-templates/>
-	    </div>
-	</xsl:template>
+		<!-- body -->
+		<xsl:call-template name="nl-2"/>
+		<div id="{$which-piece}-body" class="body">
+			<xsl:call-template name="nl-1"/>
+			<xsl:call-template name="make-body"/>
+			<xsl:call-template name="nl-1"/>
+		</div>
 
-    <xsl:template match="fn[@fn-type='conflict']">
-	    <div class="fn">
-			<xsl:call-template name="make-id"/>
-			<span id="conflicts" class="tl-main-part">Conflicts</span>
-		    <xsl:apply-templates/>
+		<xsl:call-template name="nl-2"/>
+		<div id="{$which-piece}-back" class="bm">
+			<!-- class is repeated on contained table elements -->
+			<xsl:call-template name="nl-1"/>
+			<xsl:call-template name="make-back"/>
+			<xsl:call-template name="nl-1"/>
 		</div>
-    </xsl:template>
 
-    <xsl:template match="fn[@fn-type='con']">
-	    <div class="fn">
-			<xsl:call-template name="make-id"/>
-			<span class="tl-main-part">Contributions</span>
-		    <xsl:apply-templates/>
+		<!-- retrieval metadata, at end -->
+		<xsl:call-template name="nl-2"/>
+		<div id="{$which-piece}-end-metadata" class="fm">
+			<!-- class is repeated on contained table element -->
+			<xsl:call-template name="nl-1"/>
+			<xsl:call-template name="make-end-metadata"/>
+			<xsl:call-template name="nl-1"/>
 		</div>
-    </xsl:template>
 
-	<xsl:template match="glyph-ref">
-		<xsl:apply-templates/>
+		<!-- sub-article or response: calls this very template -->
+		<!-- change context node -->
+		<!--
+  <xsl:for-each select="sub-article | response">
+    <xsl:call-template name="make-a-piece"/>
+  </xsl:for-each>
+
+  <hr class="part-rule"/>
+  <xsl:call-template name="nl-1"/>
+  -->
+
 	</xsl:template>
 
-	<!-- improved history / date block for front -->
-	<xsl:template match="history/date | pub-date[@pub-type='epub']" mode="front">
 
-		<xsl:variable name="the-type">
-			<xsl:choose>
-				<xsl:when test="@date-type='accepted'">Accepted</xsl:when>
-				<xsl:when test="@date-type='received'">Received</xsl:when>
-				<xsl:when test="@date-type='rev-request'">Revision Requested</xsl:when>
-				<xsl:when test="@date-type='rev-recd'">Revision Received</xsl:when>
-				<xsl:when test="@pub-type='epub'">Published</xsl:when>
-			</xsl:choose>
-		</xsl:variable>
+	<!-- ============================================================= -->
+	<!-- 4. UTILITIES                                                  -->
+	<!-- ============================================================= -->
 
-		<xsl:if test="$the-type">
-			<span class="tl-default">
-				<xsl:value-of select="$the-type"/>
-				<xsl:text>: </xsl:text>
-			</span>
-		</xsl:if>
 
-		<xsl:call-template name="date-format">
-			<xsl:with-param name="date">
-				<xsl:value-of select="format-number(./year,'0000')"/>
-				<xsl:value-of select="format-number(./month,'00')"/>
-				<xsl:value-of select="format-number(./day,'00')"/>
-			</xsl:with-param>
-			<xsl:with-param name="type" select="'long'"/>
-		</xsl:call-template>
 
-		<xsl:if test="position()!=last()">
-			<!-- separator: typically , or ; -->
-			<xsl:text>; </xsl:text>
-		</xsl:if>
+	<!-- ============================================================= -->
+	<!--  "capitalize" Capitalize a string                             -->
+	<!-- ============================================================= -->
 
-		<xsl:call-template name="nl-1"/>
+	<xsl:template name="capitalize">
+		<xsl:param name="str"/>
+		<xsl:value-of
+			select="translate($str,
+                          'abcdefghjiklmnopqrstuvwxyz',
+                          'ABCDEFGHJIKLMNOPQRSTUVWXYZ')"
+		/>
 	</xsl:template>
 
-	<xsl:template match="label">
-	    <span class="label">
-		<!-- auto-generate figure numbers -->
-		<!-- <xsl:text>Figure </xsl:text><xsl:number level="any" count="fig" format="1. "/> -->
-		<!-- auto-generate table numbers -->
-		<!-- <xsl:text>Table </xsl:text><xsl:number level="any" count="table-wrap/label" format="1. "/> -->
-	        <xsl:apply-templates/>
-			<xsl:text>. </xsl:text>
-	    </span>
-	</xsl:template>
+	<!-- ============================================================= -->
+	<!--  "language"                                                   -->
+	<!-- ============================================================= -->
 
-	<xsl:template match="inline-formula//mml:math">
-	  <xsl:choose>
-	    <xsl:when test="@xlink:href">
-	      <a>
-	        <xsl:call-template name="make-href"/>
-	        <xsl:call-template name="make-id"/>
-	        <xsl:copy-of select="."/>
-	      </a>
-	    </xsl:when>
-	    <xsl:otherwise>
-	      <span class="capture-id">
-	        <xsl:call-template name="make-id"/>
-	        <xsl:copy-of select="."/>
-	      </span>
-	    </xsl:otherwise>
-	  </xsl:choose>
-	</xsl:template>
-
-    <xsl:template match="monospace">
-        <tt>
-            <xsl:apply-templates/>
-        </tt>
-    </xsl:template>
-
-	<xsl:template match="name" mode="corresp">
-	    <xsl:apply-templates select="prefix"      mode="contrib"/>
-	    <xsl:apply-templates select="given-names" mode="contrib"/>
-	    <xsl:apply-templates select="surname"     mode="contrib"/>
-	    <xsl:apply-templates select="suffix"      mode="contrib"/>
-	</xsl:template>
-
-	<!-- make p a little smarter; generate its own ids -->
-	<xsl:template match="p">
-	  <p>
+	<xsl:template name="language">
+		<xsl:param name="lang"/>
 		<xsl:choose>
-            <xsl:when test="ancestor::body">
-                <xsl:attribute name="id">
-                    <xsl:text>para-</xsl:text>
-                    <xsl:number level="any" count="/article/body//p"/>
-                </xsl:attribute>
-            </xsl:when>
-
-			<xsl:otherwise>
-				<xsl:call-template name="make-id"/>
-			</xsl:otherwise>
+			<xsl:when test="$lang='fr' or $lang='FR'"> (Fre).</xsl:when>
+			<xsl:when test="$lang='jp' or $lang='JP'"> (Jpn).</xsl:when>
+			<xsl:when test="$lang='ru' or $lang='RU'"> (Rus).</xsl:when>
+			<xsl:when test="$lang='de' or $lang='DE'"> (Ger).</xsl:when>
+			<xsl:when test="$lang='se' or $lang='SE'"> (Swe).</xsl:when>
+			<xsl:when test="$lang='it' or $lang='IT'"> (Ita).</xsl:when>
+			<xsl:when test="$lang='he' or $lang='HE'"> (Heb).</xsl:when>
+			<xsl:when test="$lang='sp' or $lang='SP'"> (Spa).</xsl:when>
 		</xsl:choose>
-	    <xsl:apply-templates/>
-	  </p>
-	  <xsl:call-template name="nl-1"/>
 	</xsl:template>
 
-    <!--	<xsl:template match="p[ancestor::abstract | ancestor::list | ancestor::fn | ancestor::fig | ancestor::caption | ancestor::speech | ancestor::disp-quote]" 	-->
-	<xsl:template match="p[ancestor::list | ancestor::caption | ancestor::speech | ancestor::disp-quote]">
-        <xsl:apply-templates/>
-    </xsl:template>
+	<!-- ============================================================= -->
+	<!--  "cleantitle"                                                 -->
+	<!-- ============================================================= -->
 
-	<xsl:template match="private-char">
-		<xsl:apply-templates/>
+	<xsl:template name="cleantitle">
+		<xsl:param name="str"/>
+		<xsl:value-of select="translate($str,'. ,-_','')"/>
 	</xsl:template>
 
-	<xsl:template match="preformat">
-	    <xsl:choose>
-	        <xsl:when test="@preformat-type='code'">
-	            <code>
-					<xsl:call-template name="make-id"/>
-					<xsl:apply-templates/>
-				</code>
-	        </xsl:when>
-	        <xsl:otherwise>
-	            <pre>
-					<xsl:call-template name="make-id"/>
-					<xsl:apply-templates/>
-				</pre>
-	        </xsl:otherwise>
-	    </xsl:choose>
-	</xsl:template>
+	<!-- ============================================================= -->
+	<!--  "newlines"                                                   -->
+	<!-- ============================================================= -->
 
-	<!-- improved related-article block based on JMIR and journal citation -->
-	<xsl:template match="related-article">
+	<!-- produces newlines in output, to increase legibility of XML    -->
 
-		<xsl:variable name="the-type">
-            <xsl:choose>
-                <xsl:when test="@related-article-type='correction-forward'">Corrected version</xsl:when>
-                <xsl:when test="@related-article-type='correction-statement'">Correction statement</xsl:when>
-                <xsl:when test="@related-article-type='corrected-article'">Original version</xsl:when>
-                <xsl:when test="@related-article-type='commentary-article'">Comment on</xsl:when>
-                <xsl:when test="@related-article-type='commentary'">Comment in</xsl:when>
-                <xsl:when test="@related-article-type='companion'">Companion</xsl:when>
-            </xsl:choose>
-		</xsl:variable>
+	<xsl:template name="nl-1">
+		<xsl:text>&#xA;</xsl:text>
+	</xsl:template>
 
-		<div class="gen">
-			<xsl:if test="$the-type">
-				<xsl:value-of select="$the-type"/>
-				<xsl:text>: </xsl:text>
-			</xsl:if>
-			<xsl:call-template name="journal-citation"/>
+	<xsl:template name="nl-2">
+		<xsl:text>&#xA;</xsl:text>
+		<xsl:text>&#xA;</xsl:text>
+	</xsl:template>
 
-            <xsl:if test="boolean(@xlink:href)">
-				<xsl:text> </xsl:text>
-				<a target="_blank" href="{@xlink:href}">
-					<xsl:call-template name="make-id"/>
-					<xsl:value-of select="@xlink:href"/>
-				</a>
-			</xsl:if>
-		</div>
+	<!-- ============================================================= -->
+	<!--  make-id, make-src, make-href, make-email, make-anchor                     -->
+	<!-- ============================================================= -->
 
+	<xsl:template name="make-id">
+		<xsl:if test="@id">
+			<xsl:attribute name="id">
+				<xsl:value-of select="@id"/>
+			</xsl:attribute>
+		</xsl:if>
 	</xsl:template>
 
-    <xsl:template match="sec[ancestor::body]">
-		<div class="sec">
-			<!-- auto-gen body section IDs -->
-            <xsl:attribute name="id">
-                <xsl:choose>
-                    <xsl:when test="@sec-type">
-                        <xsl:value-of select="@sec-type"/>
-                    </xsl:when>
-                    <xsl:when test="@id">
-                        <xsl:value-of select="@id"/>
-                    </xsl:when>
-                    <xsl:otherwise>
-                        <xsl:text>section-</xsl:text>
-                        <xsl:number level="multiple" count="body//sec"/>
-                    </xsl:otherwise>
-                </xsl:choose>
-            </xsl:attribute>
+	<xsl:template name="make-src">
+		<xsl:if test="@xlink:href">
+			<xsl:attribute name="src">
+				<xsl:value-of select="@xlink:href"/>
+			</xsl:attribute>
+		</xsl:if>
+	</xsl:template>
 
-			<xsl:apply-templates/>
-		</div>
-		<xsl:call-template name="nl-1"/>
+	<xsl:template name="make-href">
+		<xsl:if test="@xlink:href">
+			<xsl:attribute name="href">
+				<xsl:value-of select="@xlink:href"/>
+			</xsl:attribute>
+		</xsl:if>
 	</xsl:template>
 
-	<xsl:template match="speaker">
-        <strong class="speaker">
-			<xsl:call-template name="make-id"/>
-			<xsl:text> [</xsl:text><xsl:apply-templates/><xsl:text>] </xsl:text>
-        </strong>
-    </xsl:template>
-
-    <xsl:template match="speech">
-        <blockquote class="speech">
-		    <xsl:call-template name="make-id"/>
-		    <xsl:call-template name="nl-1"/>
-	        <xsl:apply-templates select="speaker"/>
-			<q>
-            	<xsl:apply-templates select="*[local-name() != 'speaker']"/>
-			</q>
-		    <xsl:call-template name="nl-1"/>
-        </blockquote>
-    </xsl:template>
-
-    <xsl:template match="strike">
-        <del>
-            <xsl:apply-templates/>
-        </del>
-    </xsl:template>
+	<xsl:template match="email">
+		<a>
+			<xsl:attribute name="href">
+				<xsl:value-of select="concat('mailto:', .)"/>
+			</xsl:attribute>
+			<xsl:value-of select="."/>
+		</a>
+	</xsl:template>
 
-	<xsl:template match="subj-group">
-		<xsl:if test="contains(translate(@subj-group-type, 'QWERTYUIOPASDFGHJKLZXCVBNM ', 'qwertyuiopasdfghjklzxcvbnm-'), 'article-type')">
-			<div class="article-type">
-				<xsl:value-of select="subject"/>
-			</div>
+	<xsl:template name="make-email">
+		<xsl:if test="@xlink:href">
+			<xsl:attribute name="href">
+				<xsl:value-of select="concat('mailto:', @xlink:href)"/>
+			</xsl:attribute>
+		</xsl:if>
+	</xsl:template>
+	
+	<xsl:template name="make-anchor">
+		<xsl:if test="@id">
+			<a name="{@id}"/>
 		</xsl:if>
 	</xsl:template>
 
-	<!-- suppress table-wrap ID -->
-	<xsl:template match="table-wrap/@id"/>
 
-    <xsl:template match="term">
-        <dt>
-            <xsl:apply-templates/>
-        </dt>
-    </xsl:template>
+	<!-- ============================================================= -->
+	<!--  display-id                                                   -->
+	<!-- ============================================================= -->
+
+	<xsl:template name="display-id">
 
-    <xsl:template match="title[ancestor::body and ancestor::sec]">
-		<xsl:variable name="level">
+		<xsl:variable name="display-phrase">
 			<xsl:choose>
-				<xsl:when test="count(ancestor::sec) &gt; 4">6</xsl:when>
-				<xsl:otherwise><xsl:value-of select="count(ancestor::sec)+2"/></xsl:otherwise>
+				<xsl:when test="self::disp-formula">
+					<xsl:text>Formula ID</xsl:text>
+				</xsl:when>
+				<xsl:when test="self::chem-struct-wrapper">
+					<xsl:text>Chemical Structure Wrapper ID</xsl:text>
+				</xsl:when>
+				<xsl:when test="self::chem-struct">
+					<xsl:text>Chemical Structure ID</xsl:text>
+				</xsl:when>
+				<xsl:otherwise>
+					<xsl:text>ID</xsl:text>
+				</xsl:otherwise>
 			</xsl:choose>
 		</xsl:variable>
 
-        <xsl:element name="h{$level}">
-			<xsl:attribute name="class">sec-title</xsl:attribute>
-            <xsl:apply-templates/>
-        </xsl:element>
-    </xsl:template>
-
-<!-- 	<xsl:template match="title[ancestor::fig or ancestor::table-wrap or ancestor::abstract or ancestor::app or ancestor::boxed-text]">	 -->
-	<xsl:template match="title[ancestor::gloss-group]">
-		<div class="tl-main-part"><xsl:apply-templates/></div>
-	</xsl:template>
-
-	<!-- these improve the NLM xref templates (both contrib and not) -->
-	<xsl:template match="xref[@ref-type!='']" mode="contrib">
-		<xsl:apply-templates select="."/>
+		<xsl:if test="@id">
+			<span class="gen">
+				<xsl:text>[</xsl:text>
+				<xsl:value-of select="$display-phrase"/>
+				<xsl:text>: </xsl:text>
+			</span>
+			<xsl:value-of select="@id"/>
+			<span class="gen">
+				<xsl:text>]</xsl:text>
+			</span>
+		</xsl:if>
 	</xsl:template>
 
-	<xsl:template match="xref[@ref-type='aff'] 
-						| xref[@ref-type='fn'] 
-						| xref[@ref-type='author-notes'] 
-						| xref[@ref-type='table-fn']">
-		<span class="xref">
-			<xsl:call-template name="make-id"/>
 
-			<sup><em>
-				<!-- if immediately-preceding sibling was an xref, punctuate
-					(otherwise assume desired punctuation is in the source).-->
-				<xsl:if test="local-name(preceding-sibling::node()[1])='xref'">
-					<span class="gen"><xsl:text>, </xsl:text></span>
-				</xsl:if>
-				<a target="xrefwindow" href="#{@rid}">
-					<xsl:value-of select="normalize-space(.)"/>
-				</a>
-			</em></sup>
-		</span>
-    </xsl:template>
+	<!-- ============================================================= -->
+	<!--  "table-setup": left column wide or narrow                    -->
+	<!-- ============================================================= -->
 
-	<xsl:template match="xref[@ref-type='bibr']">
-		<cite class="xref">
-			<xsl:call-template name="make-id"/>
-			<!-- if immediately-preceding sibling was an xref, punctuate
-				(otherwise assume desired punctuation is in the source).-->
-			<xsl:if test="local-name(preceding-sibling::node()[1])='xref'">
-				<span class="gen"><xsl:text>, </xsl:text></span>
-			</xsl:if>
-			<a target="xrefwindow" href="#{@rid}">
-				<!-- <xsl:value-of select="/article/back/ref-list/ref[@id=$ref-id]/label"/> -->
-				<xsl:apply-templates/>
-			</a>
-		</cite>
+	<xsl:template name="table-setup-l-wide">
+		<xsl:call-template name="nl-1"/>
+		<tr>
+			<td width="30%"/>
+			<td/>
+		</tr>
+		<xsl:call-template name="nl-1"/>
 	</xsl:template>
 
-	<!-- override to display the content of fig/table refs rather than ID -->
-	<xsl:template match="xref[@ref-type='fig'] | xref[@ref-type='table']">
-	  <span class="xref">
-	    <xsl:call-template name="make-id"/>
-	    <a target="xrefwindow" href="#{@rid}">
-	      <xsl:value-of select="."/>
-	    </a>
-	  </span>
+	<xsl:template name="table-setup-l-narrow">
+		<xsl:call-template name="nl-1"/>
+		<tr>
+			<td width="10%"/>
+			<td/>
+		</tr>
+		<xsl:call-template name="nl-1"/>
 	</xsl:template>
 
-	<!-- suppress superscipting hyphen between xrefs (at least for bibr) -->
-	<xsl:template match="text()[normalize-space(.)='-']">
-		<xsl:text>-</xsl:text>
+	<xsl:template name="table-setup-even">
+		<xsl:call-template name="nl-1"/>
+		<tr>
+			<td width="50%"/>
+			<td/>
+		</tr>
+		<xsl:call-template name="nl-1"/>
 	</xsl:template>
 
 
-	<!--============================================
-		NLM-CITATION MODEL ELEMENTS
-	==============================================-->
+	<!-- ============================================================= -->
+	<!-- "make-figs-and-tables"                                        -->
+	<!-- ============================================================= -->
+
+	<!-- initial context node is article -->
 
-	<xsl:template match="collab">
-		<xsl:apply-templates select="." mode="book"/>		
-	</xsl:template>
+	<xsl:template name="make-figs-and-tables">
 
-	<!-- special handling for citation links -->
-	<xsl:template match="comment/ext-link" mode="none">
-		<xsl:apply-templates select="."/>
-	</xsl:template>
+		<xsl:if test="body//fig[not(parent::fig-group)] | back//fig[not(parent::fig-group)]">
+			<xsl:call-template name="nl-1"/>
 
-	<xsl:template match="comment/ext-link" mode="nscitation">
-		<xsl:apply-templates select="."/>
-	</xsl:template>
+			<div class="Title1">Figures</div>
+			<xsl:call-template name="nl-1"/>
+
+				<xsl:apply-templates select="body//fig | back//fig" mode="put-at-end"/>
+		</xsl:if>
+
+		<xsl:if test="body//table-wrap | back//table-wrap">
+			<xsl:call-template name="nl-1"/>
+
+			<div class="Title1">Tables</div>
+			<xsl:call-template name="nl-1"/>
+
+			<xsl:apply-templates select="body//table-wrap | back//table-wrap" mode="put-at-end"/>
+			<xsl:call-template name="nl-1"/>
+		</xsl:if>
 
-	<xsl:template match="comment/ext-link" mode="citation">
-		<xsl:apply-templates select="."/>
 	</xsl:template>
 
-	<xsl:template match="comment/ext-link">
 
-		<xsl:variable name="href">
-			<xsl:choose>
-				<xsl:when test="ancestor::nlm-citation[@citation-type!='journal'] and not(contains(., 'www.webcitation.org'))">
-					<xsl:text>http://www.webcitation.org/query?url=</xsl:text>
-					<xsl:call-template name="url-encode">
-						<xsl:with-param name="str" select="@xlink:href"/>
-					</xsl:call-template>
-					<!-- TODO: webcite link should include formatted access-date -->
-					<!--
-					<xsl:text>&amp;refdoi=</xsl:text>
-					<xsl:value-of select="/article/front/article-meta/article-id[@pub-id-type='doi']"/>
-					-->
-				</xsl:when>
-				<xsl:otherwise>
-					<xsl:value-of select="@xlink:href"/>
-				</xsl:otherwise>
-			</xsl:choose>
-		</xsl:variable>
 
-		<xsl:text> [</xsl:text>
-		<!-- NB: target is deprecated in XHTML 1.0S -->
-		<a target="_blank">
-			<xsl:call-template name="make-id"/>
-			<xsl:attribute name="href">
-				<xsl:value-of select="$href"/>
-			</xsl:attribute>
+	<!-- ============================================================= -->
+	<!-- 6. SUPPRESSED ELEMENTS                                        -->
+	<!-- ============================================================= -->
+
+	<!-- suppressed in no-mode (processed in mode "front") -->
+
+	<xsl:template match="journal-meta | article-meta"/>
+
+
+	<!-- not handled by this transform -->
+
+	<xsl:template match="sub-article | response"/>
+
+
+	<!-- xlink attributes are generally suppressed; note however that
+     @xlink:href is used in some element templates. -->
+
+	<xsl:template match="@xlink:*"/>
+
+
+	<!-- Tables and figures are displayed at the end of the document,
+     using mode "put-at-end".
+     So, in no-mode, we suppress them: -->
+
+	<xsl:template match="fig | fig-group | table-wrap | table-wrap-group"/>
+
+
+
+	<!-- ============================================================= -->
+	<!-- CALLED TEMPLATES FOR ARTICLE PARTS                            -->
+	<!-- ============================================================= -->
+
+	<!-- ============================================================= -->
+	<!--  7. MAKE-HTML-HEADER                                          -->
+	<!-- ============================================================= -->
+
+	<xsl:template name="make-html-header">
+
+		<head>
+			<xsl:call-template name="nl-1"/>
+			<title>
+				<xsl:choose>
+
+					<xsl:when test="/article/front/journal-meta/journal-id
+                        [@journal-id-type='pubmed']">
+						<xsl:value-of
+							select="/article/front/journal-meta/journal-id
+                                [@journal-id-type='pubmed']"/>
+						<xsl:text>: </xsl:text>
+					</xsl:when>
+
+					<xsl:when test="/article/front/journal-meta/journal-id
+                       [@journal-id-type='publisher']">
+						<xsl:value-of
+							select="/article/front/journal-meta/journal-id
+                                [@journal-id-type='publisher']"/>
+						<xsl:text>: </xsl:text>
+					</xsl:when>
+
+					<xsl:when test="/article/front/journal-meta/journal-id">
+						<xsl:value-of
+							select="/article/front/journal-meta/journal-id
+                                [1][@journal-id-type]"/>
+						<xsl:text>: </xsl:text>
+					</xsl:when>
+
+					<xsl:otherwise/>
+				</xsl:choose>
+
+				<xsl:for-each select="/article/front/article-meta/volume">
+					<xsl:text>Vol. </xsl:text>
+					<xsl:apply-templates/>
+					<xsl:text> </xsl:text>
+				</xsl:for-each>
+
+				<xsl:for-each select="/article/front/article-meta/issue">
+					<xsl:text>Issue </xsl:text>
+					<xsl:apply-templates/>
+					<xsl:text>: </xsl:text>
+				</xsl:for-each>
+
+				<xsl:if test="/article/front/article-meta/fpage">
+					<xsl:choose>
+						<xsl:when test="../lpage">
+							<xsl:text>pp. </xsl:text>
+							<xsl:value-of select="/article/front/article-meta/fpage"/>
+							<xsl:text>–</xsl:text>
+							<xsl:value-of select="/article/front/article-meta/lpage"/>
+						</xsl:when>
+						<xsl:otherwise>
+							<xsl:text>p. </xsl:text>
+							<xsl:value-of select="/article/front/article-meta/fpage"/>
+							<xsl:text> </xsl:text>
+						</xsl:otherwise>
+					</xsl:choose>
+				</xsl:if>
+
+			</title>
+			<xsl:call-template name="nl-1"/>
+			<link rel="stylesheet" href="http://www.openmedicine.ca/styles/common.css" type="text/css" />
+			<link rel="stylesheet" title="Medium" href="http://www.openmedicine.ca/styles/medium.css" type="text/css" />
+			<link rel="stylesheet" href="http://www.openmedicine.ca/styles/articleView.css" type="text/css" />
+			<link rel="stylesheet" href="http://www.openmedicine.ca/styles/header-default.css" type="text/css" />
+			<xsl:call-template name="nl-1"/>
+		</head>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  8. MAKE-FRONT                                                -->
+	<!-- ============================================================= -->
+
+	<!-- initial context node is /article -->
+
+	<xsl:template name="make-front">
+
+		<xsl:call-template name="nl-1"/>
+
+		<!-- Titles and author group -->
+		<!-- All data comes from front/article-meta -->
+			<!-- change context to front/article-meta (again) -->
+			<xsl:for-each select="front/article-meta">
+				<xsl:apply-templates select="article-categories"/>
+				<xsl:apply-templates select="title-group" mode="front"/>
+				<xsl:call-template name="nl-1"/>
+
+				<!-- each contrib makes a row: name at left, details at right -->
+			<div id="Byline">
+				<xsl:for-each select="contrib-group/contrib">
+							<xsl:choose>
+								<xsl:when test="@xlink:href">
+									<a>
+										<xsl:call-template name="make-href"/>
+										<xsl:call-template name="make-id"/>
+										<xsl:apply-templates select="name | collab" mode="front"/>
+									</a>
+								</xsl:when>
+								<xsl:otherwise>
+										<xsl:apply-templates select="name | collab" mode="front"/>
+										<xsl:variable name="nodetotal" select="count(../*)"/>
+										<xsl:variable name="position" select="position()"/>
+										<xsl:choose>
+											<xsl:when test="$nodetotal=$position"/>
+											<xsl:when test="following-sibling::contrib[1]/collab">
+												<xsl:text>; </xsl:text>
+											</xsl:when>
+											<xsl:otherwise>, </xsl:otherwise>
+										</xsl:choose>
+								</xsl:otherwise>
+							</xsl:choose>
+
+							<!-- the name element handles any contrib/xref and contrib/degrees -->
+							<xsl:apply-templates
+								select="*[not(self::name) and not(self::collab) and not(self::xref) and not(self::degrees) and not(self::bio)]" mode="front"/>
+
+							<xsl:call-template name="nl-1"/>
+
+					<xsl:call-template name="nl-1"/>
+				</xsl:for-each>
+			</div>
+
+				<!-- end of contrib -->
+
+				<!-- abstract(s) -->
+
+				<xsl:if test="abstract | trans-abstract and not(contains(/article/front/article-meta/article-categories/subj-group/subject, 'Analysis and Comment')) and not(contains(/article/front/article-meta/article-categories/subj-group/subject, 'Editorial')) and not(contains(/article/front/article-meta/article-categories/subj-group/subject, 'Clinical Practice')) and not(contains(/article/front/article-meta/article-categories/subj-group/subject, 'Case Report'))">
+
+					<xsl:for-each select="abstract | trans-abstract">
+						<div class="Title1 Abstract">ABSTRACT</div>
+						<xsl:apply-templates select="*[not(self::title)]"/>
+						<xsl:call-template name="nl-1"/>
+					</xsl:for-each>
+					<!-- end of abstract or trans-abstract -->
+
+				</xsl:if>
+				<!-- end of dealing with abstracts -->
+
+			<div id="authors">
+				<xsl:for-each select="contrib-group/contrib">
+					<xsl:apply-templates
+						select="bio" mode="front"/>
+					<xsl:text> </xsl:text>
+				</xsl:for-each>
+			</div>
+
+<!-- Insert Competing Interests -->
+<xsl:for-each select="/article/back/fn-group/fn[@fn-type='conflict']">
+	<div id="CompetingInterests">
+		<xsl:call-template name="make-id"/>
+		<span class="subTitle2">Competing interests: </span>
+		<xsl:choose>
+			<xsl:when test="contains(., 'Competing interests: ')">
+				<xsl:value-of select="substring-after(.,': ')"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</div>
+</xsl:for-each>
+
+<!-- Insert Contributors -->
+<xsl:for-each select="/article/back/fn-group/fn[@fn-type='con']">
+	<div id="Funding">
+		<xsl:call-template name="make-id"/>
+		<span class="subTitle2">Contributors: </span>
+		<xsl:choose>
+			<xsl:when test="contains(., 'Contributors: ')">
+				<xsl:value-of select="substring-after(.,': ')"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</div>
+	<br/>
+</xsl:for-each>
+
+<!-- Insert Funding -->
+<xsl:for-each select="/article/back/fn-group/fn[@fn-type='financial-disclosure']">
+	<div id="Funding">
+		<xsl:call-template name="make-id"/>
+		<span class="subTitle2">Funding: </span>
+		<xsl:choose>
+			<xsl:when test="contains(., 'Funding source: ')">
+				<xsl:value-of select="substring-after(.,': ')"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</div>
+</xsl:for-each>
+
+				<!-- author notes -->
+				<xsl:if test="author-notes">
+					<xsl:apply-templates select="author-notes" mode="front"/>
+				</xsl:if>
+
+				<!-- Related articles -->
+				<xsl:if test="related-article">
+					<hr class="part-rule"/>
+					<table width="100%" class="fm">
+						<xsl:call-template name="table-setup-l-wide"/>
+						<xsl:call-template name="nl-1"/>
+						<tr>
+							<xsl:call-template name="nl-1"/>
+							<td colspan="2" valign="top">
+								<!-- related article -->
+								<xsl:apply-templates select="related-article"/>
+							</td>
+							<xsl:call-template name="nl-1"/>
+						</tr>
+						<xsl:call-template name="nl-1"/>
+					</table>
+					<xsl:call-template name="nl-1"/>
+				</xsl:if>
+
+
+				<!-- end of the titles-and-authors context; return to previous context -->
+			</xsl:for-each>
+
+
+
+
+
+<!-- Insert other bits of Author info -->
+
+		<xsl:call-template name="nl-2"/>
+
+		<!-- end of big front-matter pull -->
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  9. MAKE-BODY                                                 -->
+	<!-- ============================================================= -->
+
+	<!-- initial context node is article -->
+
+	<xsl:template name="make-body">
+		<!-- change context node -->
+		<xsl:for-each select="body">
+			<xsl:call-template name="nl-1"/>
+
+			<xsl:apply-templates/>
+			<xsl:call-template name="nl-1"/>
+		</xsl:for-each>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  10. MAKE-BACK                                                -->
+	<!-- ============================================================= -->
+
+	<!-- initial context node is article -->
+
+	<xsl:template name="make-back">
+
+		<xsl:call-template name="nl-1"/>
+
+		<!-- change context node to back -->
+		<xsl:for-each select="back">
+			<xsl:apply-templates select="title"/>
+			<xsl:if test=".//fn-group[(self::fn-group/fn[@fn-type='other'])]">
+				<div class="Title1">Footnotes</div>
+				<xsl:apply-templates select=".//fn-group/fn[@fn-type='other']"/>
+				<xsl:call-template name="nl-1"/>
+			</xsl:if>
+
+			<xsl:apply-templates select="*[not(self::title) and not(self::fn-group)]"/>
+			<xsl:call-template name="nl-1"/>
+		</xsl:for-each>
+
+	</xsl:template>
+
+
+
+	<!-- ============================================================= -->
+	<!--  11. MAKE-POST-PUBLICATION                                    -->
+	<!-- ============================================================= -->
+
+
+	<!-- At present the transform does not support
+     subarticles and responses. To include that
+     support in the present structure, fill out
+     this template, call the "make-a-piece"
+     template to ensure the details are handled
+     in the same way and by the same templates
+     as for the main article body. -->
+
+
+
+	<!-- ============================================================= -->
+	<!--  12. MAKE-END-METADATA                                        -->
+	<!-- ============================================================= -->
+
+	<!-- This metadata is displayed after the back and figs-and-tables
+     because (when it it exists) it will be too long to display
+     with the other metadata that is displayed before the body.    -->
+
+	<!-- It is metadata for retrieval: categories, keywords, etc.      -->
+
+	<!-- The context node when this template is called is the article
+     or, when supported, the sub-article or response.              -->
+
+	<xsl:template name="make-end-metadata">
+
+		<!-- change context node -->
+		<xsl:for-each select="front/article-meta">
+
+			<xsl:if
+				test="kwd-group
+                | conference">
+
+				<hr class="part-rule"/>
+
+				<table width="100%" class="fm">
+
+					<xsl:call-template name="table-setup-l-wide"/>
+
+					<xsl:call-template name="nl-1"/>
+					<tr>
+
+						<xsl:call-template name="nl-1"/>
+						<td colspan="2" valign="top">
+
+							<!-- keyword group -->
+							<xsl:apply-templates select="kwd-group"/>
+
+							<!-- conference information -->
+							<xsl:apply-templates select="conference"/>
+
+						</td>
+						<xsl:call-template name="nl-1"/>
+
+					</tr>
+					<xsl:call-template name="nl-1"/>
+
+				</table>
+				<xsl:call-template name="nl-1"/>
+
+			</xsl:if>
+		</xsl:for-each>
+
+	</xsl:template>
+
+
+
+	<!-- ============================================================= -->
+	<!--  Article Categories                                           -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="article-categories">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="subj-group">
+		<xsl:if test="not(parent::subj-group)">
+			<div id="Category">
+				<xsl:apply-templates/>
+			</div>
+		</xsl:if>
+	</xsl:template>
+
+	<xsl:template match="subject">
+			<xsl:apply-templates/>
+	</xsl:template>
+
+	<!-- There may be many series-title elements; there
+     may be one series-text (description) element. -->
+	<xsl:template match="series-title">
+		<xsl:if test="not(preceding-sibling::series-title)">
+			<span class="gen">
+				<xsl:text>Series: </xsl:text>
+			</span>
+		</xsl:if>
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+		<xsl:if test="not(following-sibling::*)">
+			<br/>
+		</xsl:if>
+	</xsl:template>
+
+	<xsl:template match="series-text">
+		<xsl:apply-templates/>
+		<br/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  Keywords                                                     -->
+	<!-- ============================================================= -->
+
+	<!-- kwd-group and its kwd occur only in article-meta -->
+	<xsl:template match="kwd-group">
+		<span class="gen">
+			<xsl:call-template name="make-id"/>
+			<xsl:text>Keywords: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+	</xsl:template>
+
+	<xsl:template match="kwd">
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</span>
+
+		<xsl:call-template name="make-keyword-punct"/>
+	</xsl:template>
+
+	<xsl:template name="make-keyword-punct">
+
+		<xsl:choose>
+			<xsl:when test="following-sibling::kwd">
+				<xsl:text>, </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:text>.</xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  Related article                                              -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="related-article">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<span class="gen">
+						<xsl:text>Related Article: </xsl:text>
+					</span>
+					<xsl:apply-templates mode="none"/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="gen">
+					<xsl:call-template name="make-id"/>
+					<xsl:text>Related Article: </xsl:text>
+				</span>
+				<xsl:apply-templates mode="none"/>
+			</xsl:otherwise>
+		</xsl:choose>
+		<br/>
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  Conference                                                   -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="conference">
+		<span class="gen">
+			<xsl:text>Conference: </xsl:text>
+		</span>
+		<xsl:call-template name="make-conference"/>
+		<br/>
+	</xsl:template>
+
+	<!-- doesn't use conf-num, conf-sponsor, conf-theme -->
+	<xsl:template name="make-conference">
+
+		<xsl:apply-templates select="conf-acronym" mode="add-period"/>
+		<xsl:apply-templates select="conf-name" mode="add-period"/>
+		<xsl:apply-templates select="conf-loc" mode="add-period"/>
+		<xsl:apply-templates select="conf-date" mode="add-period"/>
+
+	</xsl:template>
+
+	<xsl:template match="*" mode="add-period">
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  NARRATIVE CONTENT AND COMMON STRUCTURES                      -->
+	<!-- ============================================================= -->
+
+	<!-- ============================================================= -->
+	<!--  13. PARAGRAPH WITH ITS SUBTLETIES                            -->
+	<!-- ============================================================= -->
+
+
+	<!-- Make the different gradiations of subtitles -->
+
+	<xsl:template match="body/sec/sec/p">
+		<xsl:choose>
+			<xsl:when test="local-name(preceding-sibling::node()[1])='title'">
+				<p>
+					<span class="subTitle1">
+						<xsl:value-of select="../title"/>
+						<xsl:text>. </xsl:text>
+					</span>
+					<xsl:call-template name="nl-1"/>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:when>
+			<xsl:otherwise>
+				<p>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="body/sec/sec/sec/p">
+		<xsl:choose>
+			<xsl:when test="local-name(preceding-sibling::node()[1])='title'">
+				<p>
+					<em>
+						<xsl:value-of select="../title"/>
+					</em>
+					<xsl:text>. </xsl:text>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:when>
+			<xsl:otherwise>
+				<p>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="body/sec/sec/sec/sec/p">
+		<xsl:choose>
+			<xsl:when test="local-name(preceding-sibling::node()[1])='title'">
+				<p>
+					<xsl:value-of select="../title"/>
+					<xsl:text>. </xsl:text>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:when>
+			<xsl:otherwise>
+				<p>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="p">
+		<xsl:choose>
+			<xsl:when test="parent::list-item">
+				<xsl:apply-templates/>
+				<xsl:if test="following-sibling::p">
+					<br/>
+				</xsl:if>
+			</xsl:when>
+			<xsl:otherwise>
+				<p>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</p>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- The first p in a footnote displays the fn symbol or,
+     if no symbol, the fn ID -->
+	<xsl:template match="fn/p[1]">
+		<p>
+			<xsl:call-template name="make-id"/>
+			<xsl:choose>
+				<xsl:when test="preceding-sibling::label">
+					<span class="fn-label">
+						<xsl:value-of select="preceding-sibling::label"/>
+					</span>
+				</xsl:when>
+				<xsl:when test="../@symbol">
+					<span class="fn-label">
+						<xsl:value-of select="../@symbol"/>
+					</span>
+				</xsl:when>
+				<xsl:when test="../@label">
+					<span class="fn-label">
+						<xsl:value-of select="../@label"/>
+					</span>
+				</xsl:when>
+				<xsl:when test="../@id">
+					<span class="fn-label">
+						<xsl:value-of select="../@id"/>
+					</span>
+				</xsl:when>
+			</xsl:choose>
+			<xsl:apply-templates/>
+		</p>
+	</xsl:template>
+
+	<xsl:template match="speech/p[1]">
+		<p>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates select="preceding-sibling::speaker" mode="show-it-here"/>
+			<xsl:text> </xsl:text>
+			<xsl:apply-templates/>
+		</p>
+	</xsl:template>
+
+	<!-- prevent the first def/p from causing a p tag
+     which would display an unwanted break -->
+	<xsl:template match="def/p[1]">
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  14. SECTION                                                  -->
+	<!-- ============================================================= -->
+
+	<!-- the first body/sec puts out no rule at its top,
+     because body already puts out a part-rule at its top;
+     subsequent body/secs do put out a section-rule -->
+	<xsl:template match="body/sec">
+		<xsl:call-template name="nl-1"/>
+
+		<div>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</div>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- no other level of sec puts out a rule -->
+	<xsl:template match="sec">
+		<xsl:choose>
+			<xsl:when test="@sec-type='display-objects'"/>
+			<xsl:otherwise>
+				<div>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</div>
+				<xsl:call-template name="nl-1"/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  15. LIST and its Internals                                   -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="list">
+		<xsl:call-template name="nl-1"/>
+		<xsl:call-template name="make-anchor"/>
+		<xsl:if test="label | title">
+			<xsl:apply-templates select="label | title"/>
+		</xsl:if>
+		<xsl:choose>
+			<xsl:when test="@list-type='simple' or list-item/label">
+				<ul style="list-style-type: none;">
+					<xsl:call-template name="nl-1"/>
+					<xsl:apply-templates select="list-item"/>
+					<xsl:call-template name="nl-1"/>
+				</ul>
+			</xsl:when>
+			<xsl:when test="@list-type='bullet'">
+				<xsl:call-template name="nl-1"/>
+				<ul>
+					<xsl:call-template name="nl-1"/>
+					<xsl:apply-templates select="list-item"/>
+					<xsl:call-template name="nl-1"/>
+				</ul>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:call-template name="nl-1"/>
+				<ol>
+					<xsl:call-template name="nl-1"/>
+					<xsl:apply-templates select="list-item"/>
+					<xsl:call-template name="nl-1"/>
+				</ol>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="list-item">
+		<xsl:call-template name="nl-1"/>
+		<li>
+			<xsl:apply-templates/>
+		</li>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  16. DISPLAY-QUOTE                                            -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="disp-quote">
+		<xsl:call-template name="nl-1"/>
+		<blockquote>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</blockquote>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  17. SPEECH and its internals                                 -->
+	<!-- ============================================================= -->
+
+	<!-- first p will pull in the speaker
+     in mode "show-it-here" -->
+	<xsl:template match="speech">
+		<blockquote>
+			<xsl:call-template name="make-id"/>
+			<xsl:call-template name="nl-1"/>
+			<xsl:apply-templates/>
+			<xsl:call-template name="nl-1"/>
+		</blockquote>
+	</xsl:template>
+
+	<xsl:template match="speaker" mode="show-it-here">
+		<b>
+			<xsl:apply-templates/>
+		</b>
+	</xsl:template>
+
+	<!-- in no mode -->
+	<xsl:template match="speaker"/>
+
+
+	<!-- ============================================================= -->
+	<!--  18. STATEMENT and its internals                              -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="statement">
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:call-template name="nl-1"/>
+			<xsl:apply-templates/>
+		</div>
+	</xsl:template>
+
+	<xsl:template match="statement/label | statement/title">
+		<xsl:call-template name="nl-1"/>
+		<p>
+			<b>
+				<xsl:apply-templates/>
+			</b>
+		</p>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  19. VERSE-GROUP and its internals                            -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="verse-group">
+		<xsl:call-template name="nl-1"/>
+		<blockquote>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</blockquote>
+	</xsl:template>
+
+	<xsl:template match="verse-line">
+		<xsl:call-template name="nl-1"/>
+		<xsl:apply-templates/>
+		<br/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  20. BOXED-TEXT                                               -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="boxed-text">
+
+		<xsl:call-template name="nl-1"/>
+
+		<div class="boxed-text">
+			<xsl:apply-templates/>
+		</div>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  21. PREFORMAT                                                -->
+	<!-- ============================================================= -->
+
+
+	<xsl:template match="preformat" name="format-as-line-for-line">
+		<pre><xsl:call-template name="make-id"/><xsl:apply-templates/></pre>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  22. SUPPLEMENTARY MATERIAL                                   -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="supplementary-material">
+		<xsl:apply-templates select="*[not(self::label)]"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  23. DISPLAY FORMULA, CHEM-STRUCT-WRAPPER                     -->
+	<!-- ============================================================= -->
+
+	<!-- both are grouping elements to keep parts together -->
+	<xsl:template match="disp-formula | chem-struct-wrapper">
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:call-template name="display-id"/>
+			<br/>
+			<xsl:apply-templates/>
+		</div>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  24. FORMATTING ELEMENTS                                      -->
+	<!-- ============================================================= -->
+	<xsl:template match="blockquote">
+		<blockquote>
+			<xsl:apply-templates/>
+		</blockquote>
+	</xsl:template>
+
+	<xsl:template match="bold">
+		<b>
+			<xsl:apply-templates/>
+		</b>
+	</xsl:template>
+
+	<xsl:template match="italic">
+		<i>
+			<xsl:apply-templates/>
+		</i>
+	</xsl:template>
+
+	<xsl:template match="monospace">
+		<span class="monospace">
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+
+	<xsl:template match="overline">
+		<span class="overline">
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+
+	<xsl:template match="sc">
+
+		<!-- handle any tags as usual, until
+       we're down to the text strings -->
+		<small>
+			<xsl:apply-templates/>
+		</small>
+	</xsl:template>
+
+	<xsl:template match="sc//text()">
+		<xsl:param name="str" select="."/>
+
+		<xsl:call-template name="capitalize">
+			<xsl:with-param name="str" select="$str"/>
+		</xsl:call-template>
+	</xsl:template>
+
+	<xsl:template match="strike">
+		<s>
+			<xsl:apply-templates/>
+		</s>
+	</xsl:template>
+
+	<xsl:template match="sub">
+		<sub>
+			<xsl:apply-templates/>
+		</sub>
+	</xsl:template>
+
+	<xsl:template match="sup">
+		<sup>
+			<xsl:apply-templates/>
+		</sup>
+	</xsl:template>
+
+	<xsl:template match="underline">
+		<u>
+			<xsl:apply-templates/>
+		</u>
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  25. SEMANTIC ELEMENTS                                        -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="abbrev">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="capture-id">
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="inline-graphic">
+		<xsl:call-template name="nl-1"/>
+		<img>
+			<xsl:call-template name="make-src"/>
+			<xsl:call-template name="make-id"/>
+		</img>
+	</xsl:template>
+
+	<xsl:template match="inline-formula">
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+
+	<!-- is meant be a link: we assume the xlink:href
+     attribute is used, although it is not
+     required by the DTD. -->
+	<xsl:template match="inline-supplementary-material">
+		<xsl:call-template name="nl-1"/>
+		<a>
+			<xsl:call-template name="make-href"/>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</a>
+	</xsl:template>
+
+	<xsl:template match="glyph-data">
+		<xsl:call-template name="nl-1"/>
+		<span class="take-note">
+			<xsl:call-template name="make-id"/>
+			<xsl:text>[glyph data here: ID=</xsl:text>
+			<xsl:value-of select="@id"/>
+			<xsl:text>]</xsl:text>
+		</span>
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  Named Content                                                -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="named-content">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<span class="gen">
+						<xsl:text>[</xsl:text>
+						<xsl:value-of select="@content-type"/>
+						<xsl:apply-templates/>
+						<xsl:text>]</xsl:text>
+					</span>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="capture-id">
+					<xsl:call-template name="make-id"/>
+					<span class="gen">
+						<xsl:text>[</xsl:text>
+						<xsl:value-of select="@content-type"/>
+						<xsl:text>: </xsl:text>
+					</span>
+					<xsl:apply-templates/>
+					<span class="gen">
+						<xsl:text>]</xsl:text>
+					</span>
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  26. BREAK AND HORIZONTAL RULE                                -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="break" name="make-break">
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="hr" name="make-rule">
+		<xsl:call-template name="nl-1"/>
+		<hr/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+
+	<!-- ============================================================= -->
+	<!--  27. CHEM-STRUCT                                              -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="chem-struct">
+
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:call-template name="display-id"/>
+
+			<xsl:choose>
+				<xsl:when test="@xlink:href">
+					<a>
+						<xsl:call-template name="make-href"/>
+						<xsl:apply-templates/>
+					</a>
+				</xsl:when>
+				<xsl:otherwise>
+					<xsl:apply-templates/>
+				</xsl:otherwise>
+			</xsl:choose>
+
+		</span>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  28. TEX-MATH and MML:MATH                                    -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="tex-math">
+		<span class="take-note">
+			<xsl:text>[</xsl:text>
+			<xsl:copy-of select="."/>
+			<xsl:text>]</xsl:text>
+		</span>
+	</xsl:template>
+
+
+	<!-- can presume this is meant to be inline -->
+	<xsl:template match="inline-formula//mml:math">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="capture-id">
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<!-- we don't -know- mml:math in general to be inline,
+     so treat it as block.
+     Put it in a table to get a pretty border. -->
+	<xsl:template match="mml:math">
+
+		<xsl:choose>
+
+			<xsl:when test="@xlink:href">
+				<table border="1">
+					<tr>
+						<td valign="top">
+							<a>
+								<xsl:call-template name="make-href"/>
+								<xsl:call-template name="make-id"/>
+								<xsl:apply-templates/>
+							</a>
+						</td>
+					</tr>
+				</table>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<table border="1">
+					<tr>
+						<td valign="top">
+							<span>
+								<xsl:call-template name="make-id"/>
+								<xsl:apply-templates/>
+							</span>
+						</td>
+					</tr>
+				</table>
+			</xsl:otherwise>
+		</xsl:choose>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  29. GRAPHIC and MEDIA                                        -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="graphic">
+		<a>
+			<xsl:call-template name="make-href"/>
+			<xsl:call-template name="make-id"/>
+			<xsl:text>view</xsl:text>
+		</a>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+
+	<xsl:template match="media">
+		<xsl:text>&#xA;</xsl:text>
+		<div class="figure">
+		<xsl:call-template name="make-id"/>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{@xlink:href}">
+
+			<img src="http://openmedicine.ca/images/figure.png" alt="{@label}" />
+		</a>
+		<span class="subTitle1">
+			<xsl:value-of select="label"/>
+			<xsl:text>. </xsl:text>
+		</span>
+		<xsl:value-of select="caption"/>
+		<xsl:text> [</xsl:text>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{@xlink:href}">view</a>
+		<xsl:text>]</xsl:text>
+		<xsl:call-template name="nl-1"/>
+		</div>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  30. ARRAY                                                    -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="array">
+		<hr width="40%" align="left" noshade="1"/>
+		<xsl:call-template name="nl-1"/>
+
+		<table>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+			<xsl:call-template name="nl-1"/>
+		</table>
+		<xsl:call-template name="nl-1"/>
+
+		<hr width="40%" align="left" noshade="1"/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  31. CAPTIONING                                               -->
+	<!-- ============================================================= -->
+
+	<!-- the chooses before and after the element content
+     tweak the display as appropriate -->
+
+	<xsl:template match="alt-text | attrib">
+
+		<!-- element-specific handling before content: -->
+		<xsl:choose>
+
+			<!-- alt-text gets a generated label-->
+			<xsl:when test="self::alt-text">
+				<xsl:if test="not(ancestor::fig)
+                  and not(ancestor::table)">
+					<br/>
+				</xsl:if>
+
+				<span class="gen">
+					<xsl:call-template name="make-id"/>
+					<xsl:text>Alternate Text: </xsl:text>
+				</span>
+			</xsl:when>
+
+			<!-- attrib is preceded by spaces plus em-dash -->
+			<xsl:when test="self::attrib">
+				<xsl:text>&#8194;&#8194;&#8212;</xsl:text>
+			</xsl:when>
+		</xsl:choose>
+
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+
+		<!-- element-specific handling after content: -->
+		<xsl:choose>
+
+			<!-- alt-text and long-desc get a break after -->
+			<xsl:when test="self::alt-text | self::long-desc">
+				<br/>
+			</xsl:when>
+
+		</xsl:choose>
+
+	</xsl:template>
+	
+	<xsl:template match="label">
+		<xsl:choose>
+			<xsl:when test="parent::author-notes | parent::corresp">
+				<span class="au-label">
+					<xsl:apply-templates/>
+				</span>
+			</xsl:when>
+			<xsl:when test="parent::fn">
+				<!-- class fn-label = class au-label -->
+				<span class="fn-label">
+					<xsl:apply-templates/>
+				</span>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="label">
+					<xsl:apply-templates/>&#xA0;
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>		
+	</xsl:template>
+	
+	<!-- These are handled inside ref -->
+	<xsl:template match="label" mode="none"/>
+	<xsl:template match="label" mode="nscitation"/>
+
+	<xsl:template match="caption">
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</span>
+		<br/>
+	</xsl:template>
+
+
+	<!-- mixed-content; used in figures, tables, etc. -->
+	<xsl:template match="long-desc">
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</span>
+		<br/>
+	</xsl:template>
+
+	<xsl:template match="object-id">
+		<xsl:choose>
+			<xsl:when test="@pub-id-type">
+				<xsl:value-of select="@pub-id-type"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="gen">
+					<xsl:text>Object ID</xsl:text>
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:text>: </xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+		<br/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  32. FIGURE, Normal MODE                                      -->
+	<!-- ============================================================= -->
+
+	<!-- each figure is a row -->
+	<xsl:template match="fig">
+
+		<!-- left column:  graphic
+         right column: captioning elements - label, caption, etc. -->
+
+<div class="figure">
+	<xsl:call-template name="make-id"/>
+	<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{@id}.png">
+		<img src="http://openmedicine.ca/images/figure.png" alt="{label}"/>
+	</a>
+	<span class="subTitle1">
+		<xsl:value-of select="label"/>
+		<xsl:text>. </xsl:text>
+	</span>
+		<xsl:value-of select="caption"/>
+		<xsl:text> [</xsl:text>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{@id}.png">view</a>
+		<xsl:text>]</xsl:text>
+	<xsl:call-template name="nl-1"/>
+</div>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  33. TABLE-WRAP, MODE PUT-AT-END                              -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="table-wrap" mode="put-at-end">
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates select="@id"/>
+			<xsl:apply-templates/>
+			<br/>
+		</div>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="table-wrap/@id">
+		<span class="gen">
+			<xsl:text>[TableWrap ID: </xsl:text>
+		</span>
+		<xsl:value-of select="."/>
+		<span class="gen">
+			<xsl:text>] </xsl:text>
+		</span>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<xsl:template match="table">
+		<table width="100%" class="bm">
+
+			<xsl:if test="@frame">
+				<xsl:attribute name="frame">
+					<xsl:value-of select="@frame"/>
+				</xsl:attribute>
+			</xsl:if>
+			<xsl:if test="@rules">
+				<xsl:attribute name="rules">
+					<xsl:value-of select="@rules"/>
+				</xsl:attribute>
+			</xsl:if>
+			<xsl:call-template name="nl-1"/>
+
+			<xsl:apply-templates/>
+			<xsl:call-template name="nl-1"/>
+		</table>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="thead">
+		<thead>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</thead>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="th">
+		<th>
+			<xsl:call-template name="make-id"/>
+			<xsl:for-each select="@*">
+				<xsl:attribute name="{name(.)}">
+					<xsl:value-of select="."/>
+				</xsl:attribute>
+			</xsl:for-each>
+			<xsl:apply-templates/>
+		</th>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="tr">
+		<tr>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</tr>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="td">
+		<td valign="top">
+			<xsl:call-template name="make-id"/>
+			<xsl:for-each select="@*">
+				<xsl:attribute name="{name(.)}">
+					<xsl:value-of select="."/>
+				</xsl:attribute>
+			</xsl:for-each>
+			<xsl:apply-templates/>
+		</td>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="tfoot | table-wrap-foot">
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</div>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+
+	<!-- ============================================================= -->
+	<!-- MODE front                                                    -->
+	<!-- ============================================================= -->
+
+	<!--
+<xsl:template match="journal-meta/journal-id
+                   | journal-meta/journal-title
+                   | journal-meta/journal-abbrev-title
+                   | journal-meta/publisher"/>
+-->
+
+	<!-- ============================================================= -->
+	<!--  34) JOURNAL-META (in order of appearance in output)          -->
+	<!-- ============================================================= -->
+
+	<!-- journal-id -->
+
+	<xsl:template match="journal-id[@journal-id-type]" mode="front">
+		<span class="gen">
+			<xsl:text>Journal ID (</xsl:text>
+		</span>
+		<xsl:value-of select="@journal-id-type"/>
+		<span class="gen">
+			<xsl:text>): </xsl:text>
+		</span>
+		<xsl:value-of select="."/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- abbrev-journal-title -->
+
+	<xsl:template match="abbrev-journal-title" mode="front">
+		<span class="gen">
+			<xsl:text>Journal Abbreviation: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- issn -->
+
+	<xsl:template match="issn" mode="front">
+		<span class="gen">
+			<xsl:text>ISSN: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- publisher -->
+	<!-- required name, optional location -->
+
+	<xsl:template match="publisher" mode="front">
+		<xsl:apply-templates mode="front"/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="publisher-name" mode="front">
+		<span class="gen">
+			<xsl:text>Publisher: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="publisher-loc" mode="front">
+		<!-- if present, follows a publisher-name, so produces a comma -->
+		<xsl:text>, </xsl:text>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<!-- notes -->
+
+	<xsl:template match="notes" mode="front">
+		<span class="gen">Notes: </span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  35) ARTICLE-META (in order of appearance in output)          -->
+	<!-- ============================================================= -->
+
+	<!-- ext-link -->
+
+	<xsl:template match="ext-link" mode="front">
+		<span class="gen">
+			<xsl:call-template name="make-id"/>
+			<xsl:text>Link: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- supplementary-material -->
+
+	<!-- Begins with:
+    Object Identifier <object-id>, zero or more
+    Label (Of a Figure, Reference, Etc.) <label>, zero or one
+    Caption of a Figure, Table, Etc. <caption>, zero or one
+    Any combination of:
+      All the accessibility elements:
+        Alternate Title Text (For a Figure, Etc.) <alt-text>
+        Long Description <long-desc>
+      All the address linking elements:
+        Email Address <email>
+        External Link <ext-link>
+        Uniform Resource Indicator (URI) <uri>
+
+  Then an ordinary combination of para-level elements
+
+  Ending with:
+    Any combination of:
+    Attribution <attrib>
+    Copyright Statement <copyright-statement>
+-->
+
+	<xsl:template match="supplementary-material" mode="front">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<!-- self-uri -->
+
+	<xsl:template match="self-uri" mode="front">
+		<span class="gen">
+			<xsl:text>Self URI: </xsl:text>
+		</span>
+		<a href="{@xlink:href}">
+			<xsl:choose>
+				<xsl:when test="*|text()">
+					<xsl:apply-templates/>
+				</xsl:when>
+				<xsl:otherwise>
+					<xsl:value-of select="@xlink:href"/>
+				</xsl:otherwise>
+			</xsl:choose>
+		</a>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- product -->
+	<!-- uses mode="product" within -->
+
+	<xsl:template match="product" mode="front">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<span class="gen">
+						<xsl:text>Product Information: </xsl:text>
+					</span>
+					<xsl:apply-templates mode="product"/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="gen">
+					<xsl:text>Product Information: </xsl:text>
+				</span>
+				<xsl:apply-templates mode="product"/>
+			</xsl:otherwise>
+		</xsl:choose>
+		<br/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- The product element allows a mixed-content model,
+     but perhaps sometimes only element nodes will be used.
+     Rough test:
+       - if the next sibling is another element,
+         add a space to make the content somewhat legible. -->
+	<xsl:template match="*" mode="product">
+
+		<xsl:apply-templates/>
+
+		<xsl:if test="generate-id(following-sibling::node()[1])
+                 =generate-id(following-sibling::*[1])">
+			<xsl:text> </xsl:text>
+		</xsl:if>
+
+	</xsl:template>
+
+	<!-- copyright-statement, copyright-year, copyright-holder -->
+
+	<xsl:template match="copyright-statement | copyright-year | copyright-holder" mode="front">
+		<xsl:apply-templates/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+	
+	<!-- license whether or not part of permissions -->
+	<xsl:template match="license" mode="front">
+		<br/>
+		<xsl:choose>
+			<xsl:when test="@license-type">
+				<span class="gen"><xsl:value-of select="@license-type"/>: </span>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="gen">License: </span>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:apply-templates select="p/* | p/text()"/>
+	</xsl:template>
+
+	<!-- history -->
+
+	<xsl:template match="history/date" mode="front">
+
+		<xsl:variable name="the-type">
+			<xsl:choose>
+				<xsl:when test="@date-type='accepted'">Accepted</xsl:when>
+				<xsl:when test="@date-type='received'">Received</xsl:when>
+				<xsl:when test="@date-type='rev-request'">Revision Requested</xsl:when>
+				<xsl:when test="@date-type='rev-recd'">Revision Received</xsl:when>
+			</xsl:choose>
+		</xsl:variable>
+
+		<xsl:if test="@date-type">
+			<span class="gen">
+				<xsl:value-of select="$the-type"/>
+				<xsl:text> </xsl:text>
+			</span>
+		</xsl:if>
+
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- pub-date -->
+
+	<xsl:template match="pub-date" mode="front">
+		<xsl:choose>
+			<xsl:when test="@pub-type='ppub'">
+				<span class="gen">Print </span>
+			</xsl:when>
+			<xsl:when test="@pub-type='epub'">
+				<span class="gen">Electronic </span>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="@pub-type"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<span class="gen">
+			<xsl:text> publication date: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- volume -->
+
+	<xsl:template match="volume" mode="front">
+		<span class="gen">
+			<xsl:text>Volume: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<xsl:if test="../issue">
+			<xsl:text> </xsl:text>
+		</xsl:if>
+	</xsl:template>
+
+	<!-- issue -->
+
+	<xsl:template match="issue" mode="front">
+		<span class="gen">
+			<xsl:text>Issue: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- elocation-id -->
+
+	<xsl:template match="elocation-id" mode="front">
+		<span class="gen">
+			<xsl:text>E-location ID: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- fpage, lpage -->
+
+	<xsl:template match="fpage" mode="front">
+		<span class="gen">
+			<xsl:text>First Page: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<xsl:choose>
+			<xsl:when test="../lpage">
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<br/>
+				<xsl:call-template name="nl-1"/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="lpage" mode="front">
+		<span class="gen">
+			<xsl:text>Last Page: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- article-id -->
+
+	<xsl:template match="article-id">
+		<xsl:choose>
+			<xsl:when test="@pub-id-type='coden'">
+				<span class="gen">
+					<xsl:text>Coden: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='doi'">
+				<span class="gen">
+					<xsl:text>DOI: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='medline'">
+				<span class="gen">
+					<xsl:text>Medline Id: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='pii'">
+				<span class="gen">
+					<xsl:text>Publisher Item Identifier: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='pmid'">
+				<span class="gen">
+					<xsl:text>PubMed Id: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='publisher-id'">
+				<span class="gen">
+					<xsl:text>Publisher Id: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='sici'">
+				<span class="gen">
+					<xsl:text>Serial Item and Contribution Identifier: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='doaj'">
+				<span class="gen">
+					<xsl:text>Directory of Open Access Journals</xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:when test="@pub-id-type='other'">
+				<span class="gen">
+					<xsl:text>Article Id: </xsl:text>
+				</span>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="gen">
+					<xsl:text>ID: </xsl:text>
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+
+	</xsl:template>
+
+	<!-- contract-num, contract-sponsor -->
+
+	<xsl:template match="contract-num | contract-sponsor" mode="front">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+					<br/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="capture-id">
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</span>
+				<br/>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- custom-meta-wrap -->
+	
+	<xsl:template match="custom-meta-wrap">
+		<xsl:for-each select="custom-meta">
+			<span class="gen">
+				<xsl:value-of select="meta-name"/>
+				<xsl:text>: </xsl:text>
+			</span>
+			<xsl:value-of select="meta-value"/>
+			<br/>
+		</xsl:for-each>
+	</xsl:template>
+	
+	
+
+
+
+	<!-- ============================================================= -->
+	<!--  36) TITLE-GROUP                                              -->
+	<!-- ============================================================= -->
+
+	<!-- title-group -->
+
+	<!-- Appears only in article-meta -->
+	<!-- The fn-group, if any, is output in the "back" of the
+     HTML page, together with any other fn-group. -->
+
+	<xsl:template match="title-group" mode="front">
+		<div id="MainTitle">
+			<xsl:apply-templates select="article-title" mode="front"/>
+		</div>
+			<xsl:apply-templates select="subtitle" mode="front"/>
+			<xsl:apply-templates select="trans-title | alt-title" mode="front"/>
+	</xsl:template>
+
+	<xsl:template match="article-title" mode="front">
+		<xsl:apply-templates/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- subtitle runs in with title -->
+	<xsl:template match="subtitle" mode="front">
+		<div id="SubTitle">
+			<xsl:apply-templates/>
+		</div>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="trans-title" mode="front">
+		<span class="tl-section-level">
+			<span class="gen">Translated title: </span>
+			<xsl:apply-templates/>
+		</span>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="alt-title" mode="front">
+		<span class="tl-default">
 			<xsl:choose>
-				<xsl:when test="contains($href, 'www.webcitation.org') or contains(., 'www.webcitation.org')">
-					<xsl:text>WebCite Cache</xsl:text>
+				<xsl:when test="@alt-title-type='right-running-head'">
+					<span class="gen">Title for RRH: </span>
 				</xsl:when>
 				<xsl:otherwise>
-					<xsl:text>Full Text</xsl:text>
+					<span class="gen">Alternate Title: </span>
 				</xsl:otherwise>
 			</xsl:choose>
+
+			<xsl:apply-templates/>
+		</span>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  37) PARTS OF CONTRIB                                         -->
+	<!-- ============================================================= -->
+
+	<!-- collab -->
+	<!-- A mixed-content model; process it as given -->
+
+	<xsl:template match="collab" mode="front">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- name -->
+	<!-- uses mode="contrib" within -->
+
+	<xsl:template match="name" mode="front">
+		<xsl:apply-templates select="prefix" mode="contrib"/>
+		<xsl:apply-templates select="given-names" mode="contrib"/>
+		<xsl:apply-templates select="surname" mode="contrib"/>
+		<xsl:apply-templates select="suffix" mode="contrib"/>
+	</xsl:template>
+
+	<xsl:template match="prefix | given-names" mode="contrib">
+		<xsl:apply-templates/>
+		<xsl:text> </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="surname" mode="contrib">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="suffix" mode="contrib">
+		<xsl:text>, </xsl:text>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="degrees" mode="contrib">
+		<xsl:text>, </xsl:text>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<!-- the formatting is sometimes in the source XML,
+     e.g., <sup><italic>a</italic></sup> -->
+	<xsl:template match="xref[@ref-type='author-notes']" mode="contrib">
+		<span class="au-label">			
+			<a href="#{@rid}">
+				<xsl:choose>
+					<xsl:when test="child::node()">
+						<xsl:apply-templates/>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:value-of select="@rid"/>
+					</xsl:otherwise>
+				</xsl:choose>
+			</a>
+		</span>
+	</xsl:template>
+
+	<!-- the formatting is sometimes in the source XML,
+     e.g., <sup><italic>a</italic></sup> -->
+	<xsl:template match="xref[@ref-type='aff']" mode="contrib">
+		<span class="au-label">			
+			<a href="#{@rid}">
+				<xsl:choose>
+					<xsl:when test="child::node()">
+						<xsl:apply-templates/>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:value-of select="@rid"/>
+					</xsl:otherwise>
+				</xsl:choose>
+			</a>
+		</span>
+	</xsl:template>
+
+	<!-- author-comment -->
+	<!-- optional title, one-or-more paras -->
+
+	<xsl:template match="author-comment" mode="front">
+
+		<xsl:variable name="the-title">
+			<xsl:choose>
+				<xsl:when test="title">
+					<xsl:apply-templates select="title" mode="front"/>
+				</xsl:when>
+				<xsl:when test="self::author-comment">
+					<xsl:text>Author Comment: </xsl:text>
+				</xsl:when>
+				<!-- no logical otherwise -->
+			</xsl:choose>
+		</xsl:variable>
+
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:value-of select="$the-title"/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:call-template name="make-id"/>
+				<xsl:value-of select="$the-title"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:apply-templates select="*[not(self::title)]" mode="front"/>
+	</xsl:template>
+
+	<xsl:template match="author-comment/title" mode="front">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="bio/title" mode="front">
+		<span class="author">
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+
+	<!-- author-comment/p and bio/p in HTML give too much vertical
+     space for the display situation; so we force them to produce
+     only breaks. -->
+	<xsl:template match="author-comment/p" mode="front">
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- Biography section -->
+	<xsl:template match="bio/p" mode="front">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<!-- parts of contrib: address -->
+
+	<xsl:template match="present-address" mode="front">
+		<div id="Correspondence">
+			<span class="subTitle2">
+				<xsl:text>Address: </xsl:text>
+			</span>
+
+		<xsl:apply-templates mode="front"/>
+		</div>
+	</xsl:template>
+
+	<xsl:template match="institution" mode="front">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:if test="following-sibling::*">
+			<xsl:text> </xsl:text>
+		</xsl:if>
+	</xsl:template>
+
+	<xsl:template match="address/*" mode="front">
+		<xsl:apply-templates/>
+		<xsl:if test="following-sibling::*">
+			<xsl:text> </xsl:text>
+		</xsl:if>
+	</xsl:template>
+
+	<!-- aff -->
+	<!-- These affs are inside a contrib element -->
+	<xsl:template match="aff" mode="front">
+		<span class="gen">
+			<xsl:call-template name="make-id"/>
+			<xsl:text>Affiliation: </xsl:text>
+		</span>
+
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- aff -->
+	<!-- These affs are NOT inside a contrib element -->
+	<xsl:template match="aff" mode="aff-outside-contrib">
+		<xsl:call-template name="make-id"/>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+
+	<!-- on-behalf-of -->
+
+	<xsl:template match="on-behalf-of" mode="front">
+		<span class="gen">
+			<xsl:text>On behalf of: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- role -->
+
+	<xsl:template match="role" mode="front"/>
+
+	<!-- email -->
+
+	<xsl:template match="email" mode="front">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-href"/>
+					<span class="gen">
+						<xsl:text>Email: </xsl:text>
+					</span>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="gen">
+					<xsl:text>Email: </xsl:text>
+				</span>
+				<xsl:apply-templates/>
+			</xsl:otherwise>
+		</xsl:choose>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- author-notes -->
+
+	<xsl:template match="author-notes" mode="front">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates mode="front"/>
+	</xsl:template>
+
+	<!-- author-notes/title -->
+
+	<xsl:template match="author-notes/title" mode="front">
+		<b>
+			<xsl:apply-templates/>
+		</b>
+		<br/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- author-notes/corresp -->
+	<!-- mixed-content; process it as given -->
+
+	<xsl:template match="author-notes/corresp" mode="front">
+		<div id="Correspondence">
+			<span class="subTitle2">
+				<xsl:text>Correspondence: </xsl:text>
+			</span>
+		<xsl:choose>
+			<xsl:when test="contains(., 'Correspondence: ')">
+				<xsl:value-of select="substring-after(.,': ')"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+
+		</div>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- author-notes/fn -->
+	<!-- optional label, one or more paras -->
+	<!-- unmoded (author-notes only appears in article-meta) -->
+
+	<xsl:template match="author-notes/fn" mode="front">
+		<div id="Correspondence">
+			<xsl:apply-templates/>
+			<xsl:call-template name="nl-1"/>
+		</div>
+	</xsl:template>
+
+	<!-- author-notes/fn/label -->
+
+	<xsl:template match="author-notes/fn/label">
+		<span class="subTitle2">
+			<xsl:apply-templates/>
+			<xsl:text>: </xsl:text>
+		</span>
+	</xsl:template>
+
+	<!-- author-notes/fn/p[1] -->
+
+	<xsl:template match="author-notes/fn/p[1]" priority="2">
+
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+
+			<xsl:choose>
+				<xsl:when test="preceding-sibling::label"/>
+				<xsl:when test="parent::fn/@symbol">
+					<sup>
+						<xsl:value-of select="parent::fn/@symbol"/>
+					</sup>
+					<xsl:text> </xsl:text>
+				</xsl:when>
+				<xsl:when test="parent::fn/@fn-type='com'">
+					<span class="gen">
+						<xsl:text>Communicated by footnote: </xsl:text>
+					</span>
+				</xsl:when>
+				<xsl:when test="parent::fn/@fn-type='con'">
+					<span class="gen">
+						<xsl:text>Contributed by footnote: </xsl:text>
+					</span>
+				</xsl:when>
+				<xsl:when test="parent::fn/@fn-type='cor'">
+					<span class="gen">
+						<xsl:text>Correspondence: </xsl:text>
+					</span>
+				</xsl:when>
+				<xsl:when test="parent::fn/@fn-type='financial-disclosure'">
+					<span class="gen">
+						<xsl:text>Financial Disclosure: </xsl:text>
+					</span>
+				</xsl:when>
+				<xsl:when test="parent::fn/@fn-type">
+					<span class="gen">
+						<xsl:text>[</xsl:text>
+						<xsl:value-of select="parent::fn/@fn-type"/>
+						<xsl:text>]</xsl:text>
+						<xsl:text> </xsl:text>
+					</span>
+				</xsl:when>
+			</xsl:choose>
+
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+
+	<!-- author-notes/fn/p processed as ordinary unmoded p-->
+
+	<!-- abstract and trans-abstract are handled entirely
+     within the make-front template -->
+
+
+	<!-- ============================================================= -->
+	<!-- BACK (unmoded templates)                                      -->
+	<!-- ============================================================= -->
+
+	<!-- ============================================================= -->
+	<!--  38. BACK MATTER: ACKNOWLEDGEMENTS                            -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="ack">
+
+		<xsl:call-template name="nl-1"/>
+		<xsl:if test="position()>1">
+			<hr class="section-rule"/>
+		</xsl:if>
+		<xsl:call-template name="nl-1"/>
+
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:if test="not(title)">
+				<div class="Title1">Acknowledgments</div>
+				<xsl:call-template name="nl-1"/>
+			</xsl:if>
+
+			<xsl:apply-templates/>
+
+		</div>
+
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  39. BACK-MATTER: APPENDIX                                    -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="app">
+
+
+	<xsl:if test="not(fig) and not(media)">
+	  <xsl:text>&#xA;</xsl:text>
+		<div class="figure">
+		<xsl:call-template name="make-id"/>
+		<xsl:apply-templates/>
+		<xsl:call-template name="nl-1"/>
+	  </div>
+	  </xsl:if>
+
+	<xsl:if test="media">
+		<xsl:text>&#xA;</xsl:text>
+		<div class="figure">
+		<xsl:call-template name="make-id"/>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{media/@xlink:href}">
+
+			<img src="http://openmedicine.ca/images/figure.png" alt="{@label}" />
 		</a>
-		<xsl:text>] </xsl:text>
+		<span class="subTitle1">
+			<xsl:value-of select="label"/>
+			<xsl:text>. </xsl:text>
+		</span>
+		<xsl:value-of select="media/caption"/>
+		<xsl:text> [</xsl:text>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{media/@xlink:href}">view</a>
+		<xsl:text>]</xsl:text>
+		<xsl:call-template name="nl-1"/>
+		</div>
+	</xsl:if>
+
+	<xsl:if test="fig">
+		<xsl:text>&#xA;</xsl:text>
+		<div class="figure">
+		<xsl:call-template name="make-id"/>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{@id}.png">
+
+			<img src="http://openmedicine.ca/images/figure.png" alt="{@label}" />
+		</a>
+		<span class="subTitle1">
+			<xsl:value-of select="label"/>
+			<xsl:text>. </xsl:text>
+		</span>
+		<xsl:value-of select="fig/caption"/>
+		<xsl:text> [</xsl:text>
+		<a href="/images/{/article/front/article-meta/volume}/{/article/front/article-meta/fpage}/{@id}.png">view</a>
+		<xsl:text>]</xsl:text>
+		<xsl:call-template name="nl-1"/>
+		</div>
+	</xsl:if>
+
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  40. BACK-MATTER: FOOTNOTE-GROUP and FN                       -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="fn-group">
+
+		<xsl:call-template name="nl-1"/>
+		<xsl:if test="position()>1">
+			<hr class="section-rule"/>
+		</xsl:if>
+		<xsl:call-template name="nl-1"/>
+
+		<xsl:apply-templates/>
+		<xsl:call-template name="nl-1"/>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  Footnote                                                     -->
+	<!-- ============================================================= -->
+
+	<!-- symbol or id is displayed by the first para within the fn     -->
+
+	<xsl:template match="fn">
+		<div>
+			<xsl:if test="@id">
+				<xsl:attribute name="id">
+					<xsl:value-of select="@id"/>
+				</xsl:attribute>
+			</xsl:if>
+			<xsl:apply-templates select="p"/>
+		</div>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  41. BACK-MATTER: NOTES                                       -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="notes">
+
+		<xsl:call-template name="nl-1"/>
+		<xsl:if test="position()>1">
+			<hr class="section-rule"/>
+		</xsl:if>
+		<xsl:call-template name="nl-1"/>
+
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:if test="not(title)">
+				<span class="tl-main-part">Notes</span>
+				<xsl:call-template name="nl-1"/>
+			</xsl:if>
+
+			<xsl:apply-templates/>
+			<xsl:call-template name="nl-1"/>
+		</div>
+
+	</xsl:template>
+
+	<xsl:template match="note">
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<small>
+				<xsl:apply-templates/>
+			</small>
+		</span>
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  42. BACK MATTER: GLOSSARY                                    -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="glossary">
+
+		<xsl:call-template name="nl-1"/>
+		<xsl:if test="position()>1">
+			<hr class="section-rule"/>
+		</xsl:if>
+		<xsl:call-template name="nl-1"/>
+
+		<div class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:if test="not(title)">
+				<span class="tl-main-part">
+					<xsl:call-template name="make-id"/>
+					<xsl:text>Glossary</xsl:text>
+				</span>
+				<xsl:call-template name="nl-1"/>
+			</xsl:if>
+
+			<xsl:apply-templates/>
+		</div>
+		<xsl:call-template name="nl-1"/>
+
+	</xsl:template>
+
+	<xsl:template match="gloss-group">
+
+		<xsl:call-template name="nl-1"/>
+		<xsl:if test="not(title)">
+			<span class="tl-main-part">Glossary</span>
+			<xsl:call-template name="nl-1"/>
+		</xsl:if>
+
+		<xsl:apply-templates/>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="def-list">
+		<xsl:call-template name="nl-1"/>
+		<xsl:call-template name="make-anchor"/>
+
+		<table width="60%" cellpadding="2" class="bm">
+			<xsl:call-template name="nl-1"/>
+
+			<xsl:call-template name="table-setup-l-wide"/>
+			<xsl:if test="title">
+				<tr>
+					<th colspan="2" align="left">
+						<b><xsl:apply-templates select="title"/></b>
+					</th>
+				</tr>
+			</xsl:if>
+			<xsl:if test="term-head|def-head">
+				<tr>
+					<td valign="top" align="right">
+						<i>
+							<xsl:apply-templates select="term-head"/>
+						</i>
+					</td>
+					<td valign="top">
+						<i>
+							<xsl:apply-templates select="def-head"/>
+						</i>
+					</td>
+				</tr>
+				<xsl:call-template name="nl-1"/>
+			</xsl:if>
+
+			<xsl:apply-templates select="def-item"/>
+
+			<xsl:call-template name="nl-1"/>
+			
+		</table>
+		
+		<xsl:if test="def-list">
+			<br/>
+			<xsl:apply-templates select="def-list"/>
+		</xsl:if>
+		
+		<xsl:call-template name="nl-1"/>
+
+	</xsl:template>
+
+
+	<xsl:template match="def-item">
+		<tr>
+			<xsl:call-template name="make-id"/>
+			<xsl:call-template name="nl-1"/>
+			<xsl:apply-templates/>
+		</tr>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="term">
+		<td valign="top" align="right">
+			<xsl:call-template name="make-id"/>
+			<b>
+				<xsl:apply-templates/>
+			</b>
+		</td>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="def">
+		<td valign="top">
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</td>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  43. TARGET OF A REFERENCE                                    -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="target">
+		<a>
+			<xsl:call-template name="make-id"/>
+			<xsl:apply-templates/>
+		</a>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  44. XREFS                                                    -->
+	<!-- ============================================================= -->
+
+	<!-- xref for fn, table-fn, or bibr becomes a superior number -->
+	<!-- Displays the @rid, not the element content (if any) -->
+
+	<xsl:template
+		match="xref[@ref-type='fn']
+                  | xref[@ref-type='table-fn']
+                  | xref[@ref-type='bibr']">
+		<span class="xref">
+			<xsl:call-template name="make-id"/>
+			<sup>
+				<!-- if immediately-preceding sibling was an xref, punctuate
+           (otherwise assume desired punctuation is in the source).-->
+				<xsl:if test="local-name(preceding-sibling::node()[1])='xref'">
+					<span class="gen">
+						<xsl:text>, </xsl:text>
+					</span>
+				</xsl:if>
+				<a href="#{@rid}">
+					<xsl:choose>
+						<xsl:when test="child::node()">
+							<xsl:apply-templates/>
+						</xsl:when>
+						<xsl:otherwise>
+							<xsl:value-of select="@rid"/>
+						</xsl:otherwise>
+					</xsl:choose>
+				</a>
+			</sup>
+		</span>
+	</xsl:template>
+
+	<xsl:template match="text()[normalize-space(.)='-']">
+		<xsl:choose>
+			<!-- if a hyphen is the only thing in a text node
+         and it's between two xrefs, we conclude that
+         it's expressing a range, and we superscript it -->
+			<xsl:when
+				test="local-name(following-sibling::node()[1])='xref'
+                and local-name(preceding-sibling::node()[1])='xref' and following-sibling::xref[@ref-type='bibr']">
+				<sup>-</sup>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="text()[normalize-space(.)=',']">
+		<xsl:choose>
+			<!-- if a comma is the only thing in a text node
+         and it's between two xrefs, we conclude that
+         it's expressing a range, and we superscript it -->
+			<xsl:when
+				test="local-name(following-sibling::node()[1])='xref'
+                and local-name(preceding-sibling::node()[1])='xref' and following-sibling::xref[@ref-type='bibr']">
+				<sup>,</sup>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="text()[normalize-space(.)='–']">
+		<xsl:choose>
+			<!-- if a dash is the only thing in a text node
+         and it's between two xrefs, we conclude that
+         it's expressing a range, and we superscript it -->
+			<xsl:when
+				test="local-name(following-sibling::node()[1])='xref'
+                and local-name(preceding-sibling::node()[1])='xref' and following-sibling::xref[@ref-type='bibr']">
+				<sup>,</sup>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<!-- In xref of type fig or of type table,
+     the element content is the figure/table number
+     and typically part of a sentence,
+     so -not- a superior number. -->
+	<xsl:template match="xref[@ref-type='fig'] | xref[@ref-type='table']">
+		<span class="xref">
+			<xsl:call-template name="make-id"/>
+			<a href="#{@rid}">
+				<xsl:choose>
+					<!-- if xref not empty -->
+					<xsl:when test="child::node()">
+						<xsl:apply-templates/>
+					</xsl:when>
+					<xsl:otherwise>
+						<!-- if empty -->
+						<xsl:value-of select="@rid"/>
+					</xsl:otherwise>
+				</xsl:choose>
+			</a>
+		</span>
+	</xsl:template>
+
+	<!-- default: if none of the above ref-types -->
+	<xsl:template match="xref">
+		<span class="xref">
+			<xsl:call-template name="make-id"/>
+			<a href="#{@rid}">
+				<xsl:choose>
+					<!-- if xref not empty -->
+					<xsl:when test="child::node()">
+						<xsl:apply-templates/>
+					</xsl:when>
+					<xsl:otherwise>
+						<!-- if empty -->
+						<xsl:value-of select="@rid"/>
+					</xsl:otherwise>
+				</xsl:choose>
+			</a>
+		</span>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  45. EXTERNAL LINKS                                           -->
+	<!-- ============================================================= -->
+
+	<!-- xlink:href attribute makes a link -->
+
+	<xsl:template match="ext-link | uri">
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a target="xrefwindow" >
+					<xsl:call-template name="make-href"/>
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<span class="capture-id">
+					<xsl:call-template name="make-id"/>
+					<xsl:apply-templates/>
+				</span>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- xlink:href attribute makes a link -->
+
+	<xsl:template match="mailto">
+
+		<xsl:choose>
+			<xsl:when test="@xlink:href">
+				<a>
+					<xsl:call-template name="make-email"/>
+					<xsl:apply-templates/>
+				</a>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  46. TITLES: MAIN ARTICLE DIVISIONS                           -->
+	<!-- ============================================================= -->
+
+	<!-- main or top-level divisions -->
+	<xsl:template match="abstract/sec/p">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="abstract/sec">
+		<xsl:call-template name="nl-1"/>
+		<p>
+		<xsl:apply-templates/>
+		</p>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template match="abstract/sec/title">
+		<span class="subTitle2">
+			<xsl:apply-templates/>
+		<xsl:text>:</xsl:text>
+		</span>
+		<xsl:text> </xsl:text>
+	</xsl:template>
+	<xsl:template
+		match="body/sec/title
+                   | back/title | app-group/title | app/title
+                   | glossary/title | ack/title
+                   | ref-list/title | back/notes/title">
+		<xsl:call-template name="nl-1"/>
+		<div class="Title1">
+			<xsl:apply-templates/>
+		</div>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<xsl:template
+		match="body/sec/sec/title">
+		<xsl:choose>
+			<xsl:when test="local-name(following-sibling::node()[1])='sec'">
+				<span class="subTitle1">
+					<xsl:apply-templates/>
+				</span>
+				<xsl:call-template name="nl-1"/>
+			</xsl:when>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template
+		match="body/sec/sec/sec/title">
+		<xsl:choose>
+			<xsl:when test="local-name(following-sibling::node()[1])='sec'">
+				<em>
+					<xsl:apply-templates/>
+				</em>
+				<xsl:call-template name="nl-1"/>
+			</xsl:when>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template
+		match="body/sec/sec/sec/sec/title">
+		<xsl:choose>
+			<xsl:when test="local-name(following-sibling::node()[1])='sec'">
+				<xsl:apply-templates/>
+				<xsl:call-template name="nl-1"/>
+			</xsl:when>
+		</xsl:choose>
+	</xsl:template>
+	
+	<xsl:template match="app-group">
+		<xsl:call-template name="nl-1"/>
+		<xsl:if test="not(title)">
+			<div class="Title1">
+				<xsl:text>Appendix</xsl:text>
+			</div>
+		</xsl:if>
+		<xsl:call-template name="nl-1"/>
+		<xsl:apply-templates/>
+	</xsl:template>
+	<!-- ============================================================= -->
+	<!--  47. TITLES: FIRST-LEVEL DIVISIONS AND DEFAULT                -->
+	<!-- ============================================================= -->
+
+	<!-- first-level divisions and default -->
+
+	<xsl:template
+		match="ack/sec/title | app/sec/title
+                   | boxed-text/title | gloss-group/title | notes/sec/title">
+		<xsl:call-template name="nl-1"/>
+		<span class="subTitle1">
+			<xsl:apply-templates/>
+		</span>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+	
+	<xsl:template match="list/title">
+		<span class="li-title">
+			<xsl:apply-templates/>
+		</span>
+	</xsl:template>
+	
+	<xsl:template match="def-list/title">
+		<b><xsl:apply-templates/></b>
+	</xsl:template>
+
+
+	<!-- default: any other titles found -->
+
+	<xsl:template match="title">
+		<xsl:call-template name="nl-1"/>
+		<span class="subTitle1">
+			<xsl:apply-templates/>
+		</span>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+	<!-- ============================================================= -->
+	<!--  49. UNMODED DATA ELEMENTS: MISCELLANEOUS                     -->
+	<!-- ============================================================= -->
+
+	<!-- epage -->
+
+	<xsl:template match="epage">
+		<span class="gen">
+			<xsl:text>Electronic Page: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<br/>
+	</xsl:template>
+
+	<!-- series -->
+
+	<xsl:template match="series">
+		<xsl:text> (</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>).</xsl:text>
+	</xsl:template>
+
+	<!-- comment -->
+
+	<xsl:template match="comment">
+		<xsl:if test="not(self::node()='.')">
+			<xsl:text> </xsl:text>
+			<xsl:apply-templates/>
+			<xsl:text>. </xsl:text>
+		</xsl:if>
+	</xsl:template>
+
+	<!-- annotation -->
+
+	<xsl:template match="annotation">
+		<br/>
+		<xsl:text> [</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>]</xsl:text>
+		<br/>
+	</xsl:template>
+
+
+	<!-- permissions -->
+
+	<xsl:template match="permissions">
+		<xsl:choose>
+			<xsl:when test="copyright-statement">
+				<xsl:apply-templates select="copyright-statement"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:if test="copyright-year">
+					<p>
+						<span class="gen">
+							<xsl:text>Copyright: </xsl:text>
+						</span>
+						<xsl:apply-templates select="copyright-year"/>
+						<xsl:apply-templates select="copyright-holder"/>
+					</p>
+				</xsl:if>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- copyright-statement whether or not part of permissions -->
+
+	<xsl:template match="copyright-statement">
+		<p>
+			<xsl:apply-templates/>
+		</p>
+	</xsl:template>
+	
+	<!-- license whether or not part of permissions -->
+	<xsl:template match="license">
+		<p>
+			<xsl:if test="@license-type">
+				<span class="gen">[<xsl:value-of select="@license-type"/>] </span>
+			</xsl:if>
+			<xsl:apply-templates select="p/* | p/text()"/>
+		</p>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  50. UNMODED DATA ELEMENTS: PARTS OF A DATE                   -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="day">
+		<span class="gen">
+			<xsl:text>Day: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<xsl:text> </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="month">
+		<span class="gen">
+			<xsl:text>Month: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<xsl:text> </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="season">
+		<span class="gen">
+			<xsl:text>Season: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+		<xsl:text> </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="year">
+		<xsl:apply-templates/>
+		<xsl:text>;</xsl:text>
+	</xsl:template>
+
+	<xsl:template match="stringdate">
+		<span class="gen">
+			<xsl:text>Stringdate: </xsl:text>
+		</span>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  51. UNMODED DATA ELEMENTS: PARTS OF A NAME                   -->
+	<!-- ============================================================= -->
+
+
+	<xsl:template match="name">
+
+	<xsl:variable name="nodetotal">
+		<xsl:choose>
+			<xsl:when test="count(../*) &lt; 7">
+				<xsl:value-of select="count(../*)" />
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="7" />
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:variable>
+
+		<xsl:variable name="position" select="position()"/>
+	<xsl:if test="position()=7">
+		<xsl:text>et al. </xsl:text>
+	</xsl:if>
+
+	<xsl:if test="position()&lt;7">
+		<xsl:choose>
+			<xsl:when test="given-names">
+
+				<xsl:apply-templates select="surname"/>
+				<xsl:text> </xsl:text>
+				<xsl:call-template name="initials">
+					<xsl:with-param name="name" select="given-names"/>
+				</xsl:call-template>
+				<xsl:if test="suffix">
+					<xsl:text> </xsl:text>
+					<xsl:apply-templates select="suffix"/>
+				</xsl:if>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<xsl:apply-templates select="surname"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:choose>
+			<xsl:when test="following-sibling::aff"/>
+			<xsl:when test="../following-sibling::collab and $nodetotal=$position">
+				<xsl:text>; </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:choose>
+					<xsl:when test="$nodetotal=$position">
+						<xsl:choose>
+							<xsl:when test="parent::person-group/@person-group-type">
+								<xsl:choose>
+									<xsl:when test="parent::person-group/@person-group-type='author'">
+										<xsl:text>. </xsl:text>
+									</xsl:when>
+									<xsl:otherwise>
+										<xsl:text>, </xsl:text>
+									</xsl:otherwise>
+								</xsl:choose>
+							</xsl:when>
+							<xsl:otherwise>
+								<xsl:text>. </xsl:text>
+							</xsl:otherwise>
+						</xsl:choose>
+					</xsl:when>
+					<xsl:otherwise>, </xsl:otherwise>
+				</xsl:choose>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:if>
+	</xsl:template>
+
+	<xsl:template match="aff">
+		<xsl:variable name="nodetotal" select="count(../*)"/>
+		<xsl:variable name="position" select="position()"/>
+
+		<span class="capture-id">
+			<xsl:call-template name="make-id"/>
+			<xsl:text> (</xsl:text>
+			<xsl:apply-templates/>
+			<xsl:text>)</xsl:text>
+		</span>
+
+		<xsl:choose>
+			<xsl:when test="$nodetotal=$position">. </xsl:when>
+			<xsl:otherwise>, </xsl:otherwise>
+		</xsl:choose>
+
+	</xsl:template>
+
+
+	<xsl:template match="etal">
+		<xsl:text>et al. </xsl:text>
+		<xsl:choose>
+
+			<xsl:when test="parent::person-group/@person-group-type">
+				<xsl:choose>
+					<xsl:when test="parent::person-group/@person-group-type='author'">
+						<xsl:text> </xsl:text>
+					</xsl:when>
+					<xsl:otherwise/>
+				</xsl:choose>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<xsl:text> </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  CITATION AND NLM-CITATION                                    -->
+	<!-- ============================================================= -->
+
+
+	<!-- NLM Archiving DTD:
+       - citation uses mode nscitation.
+
+     NLM Publishing DTD:
+       - nlm-citation uses several modes,
+         including book, edited-book, conf, and "none".
+-->
+
+
+	<!-- ============================================================= -->
+	<!--  52. BACK MATTER: REF-LIST                                    -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="ref-list">
+
+		<xsl:choose>
+			<xsl:when test="not(title)">
+				<div class="Title1">References</div>
+				<xsl:call-template name="nl-1"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates select="title"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<ol>
+			<xsl:apply-templates select="*[not(self::title)]"/>
+		</ol>
+
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+
+
+	<!-- suppress the ref-list title so it doesn't reappear -->
+	<xsl:template match="ref-list/title" mode="nscitation"/>
+
+
+
+	<!-- ============================================================= -->
+	<!--  53. REF                                                      -->
+	<!-- ============================================================= -->
+
+	<!-- If ref/label, ref is a table row;
+		If count(ref/citation) > 1, each citation is a table row -->
+	<xsl:template match="ref">
+		<li id="{@id}">
+			<xsl:apply-templates select="citation|nlm-citation"/>
+		</li>
+		<xsl:call-template name="nl-1"/>
+	</xsl:template>
+	
+	<!-- becomes content of table cell, column 1-->
+	<xsl:template match="ref/label | citation/label">
+		<b>
+			<i>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
+			</i>
+		</b>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  54. CITATION (for NLM Archiving DTD)                         -->
+	<!-- ============================================================= -->
+
+	<!-- The citation model is mixed-context, so it is processed
+     with an apply-templates (as for a paragraph)
+       -except-
+     if there is no PCDATA (only elements), spacing and punctuation
+     also must be supplied = mode nscitation. -->
+
+	<xsl:template match="ref/citation">
+		<xsl:choose>
+			<!-- if has no significant text content, presume that
+           punctuation is not supplied in the source XML
+           = transform will supply it. -->
+			<xsl:when test="not(text()[normalize-space()])">
+				<xsl:apply-templates mode="none"/>
+			</xsl:when>
+
+			<!-- mixed-content, processed as paragraph -->
+			<xsl:otherwise>
+				<xsl:apply-templates mode="nscitation"/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  55. NLM-CITATION (for NLM Publishing DTD)                    -->
+	<!-- ============================================================= -->
+
+	<!-- The nlm-citation model allows only element content, so
+     it takes a pull template and adds punctuation. -->
+
+	<!-- Processing of nlm-citation uses several modes, including
+     citation, book, edited-book, conf, inconf, and mode "none".   -->
+
+	<!-- Each citation-type is handled in its own template. -->
+
+
+	<!-- Book or thesis -->
+	<xsl:template
+		match="ref/nlm-citation[@citation-type='book']
+                   | ref/nlm-citation[@citation-type='thesis']
+                   | ref/citation[@citation-type='book']
+                   | ref/citation[@citation-type='thesis']">
+
+		<xsl:variable name="augroupcount" select="count(person-group) + count(collab)"/>
+
+		<xsl:choose>
+
+			<xsl:when
+				test="$augroupcount>1 and
+                    person-group[@person-group-type!='author'] and
+                    article-title ">
+				<xsl:apply-templates select="person-group[@person-group-type='author']" mode="book"/>
+				<xsl:apply-templates select="collab" mode="book"/>
+				<xsl:apply-templates select="article-title" mode="editedbook"/>
+				<xsl:text>In: </xsl:text>
+				<xsl:apply-templates
+					select="person-group[@person-group-type='editor']
+                                 | person-group[@person-group-type='allauthors']
+                                 | person-group[@person-group-type='translator']
+                                 | person-group[@person-group-type='transed'] "
+					mode="book"/>
+				<xsl:apply-templates select="source" mode="book"/>
+				<xsl:apply-templates select="edition" mode="book"/>
+				<xsl:apply-templates select="volume" mode="book"/>
+				<xsl:apply-templates select="trans-source" mode="book"/>
+				<xsl:apply-templates select="publisher-name | publisher-loc" mode="none"/>
+				<xsl:apply-templates select="year | time-stamp | season" mode="book"/>
+				<xsl:apply-templates select="fpage | lpage" mode="book"/>
+				<xsl:apply-templates select="access-date" mode="book"/>
+			</xsl:when>
+
+			<xsl:when
+				test="person-group[@person-group-type='author'] or
+                    person-group[@person-group-type='compiler']">
+				<xsl:apply-templates
+					select="person-group[@person-group-type='author']
+                                 | person-group[@person-group-type='compiler']"
+					mode="book"/>
+				<xsl:apply-templates select="collab" mode="book"/>
+				<xsl:apply-templates select="article-title" mode="book"/>
+				<xsl:apply-templates select="source" mode="book"/>
+				<xsl:apply-templates select="edition" mode="book"/>
+				<xsl:apply-templates
+					select="person-group[@person-group-type='editor']
+                                 | person-group[@person-group-type='translator']
+                                 | person-group[@person-group-type='transed'] "
+					mode="book"/>
+				<xsl:apply-templates select="volume" mode="book"/>
+				<xsl:apply-templates select="trans-source" mode="book"/>
+				<xsl:apply-templates select="publisher-name | publisher-loc" mode="none"/>
+				<xsl:apply-templates select="year | time-stamp | season" mode="book"/>
+				<xsl:apply-templates select="fpage | lpage" mode="book"/>
+				<xsl:apply-templates select="access-date" mode="book"/>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<xsl:apply-templates
+					select="person-group[@person-group-type='editor']
+                                 | person-group[@person-group-type='translator']
+                                 | person-group[@person-group-type='transed']
+                                 | person-group[@person-group-type='guest-editor']"
+					mode="book"/>
+				<xsl:apply-templates select="collab" mode="book"/>
+				<xsl:apply-templates select="source" mode="book"/>
+				<xsl:apply-templates select="edition" mode="book"/>
+				<xsl:apply-templates select="volume" mode="book"/>
+				<xsl:apply-templates select="trans-source" mode="book"/>
+				<xsl:apply-templates select="publisher-name | publisher-loc" mode="none"/>
+				<xsl:apply-templates select="year | month | time-stamp | season" mode="book"/>
+				<xsl:apply-templates select="article-title | fpage | lpage" mode="book"/>
+				<xsl:apply-templates select="access-date" mode="book"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:call-template name="citation-tag-ends"/>
+	</xsl:template>
+
+
+	<!-- Conference proceedings -->
+	<xsl:template match="ref/nlm-citation[@citation-type='confproc'] | ref/citation[@citation-type='confproc']">
+
+		<xsl:variable name="augroupcount" select="count(person-group) + count(collab)"/>
+
+		<xsl:choose>
+			<xsl:when test="$augroupcount>1 and person-group[@person-group-type!='author']">
+				<xsl:apply-templates select="person-group[@person-group-type='author']" mode="book"/>
+				<xsl:apply-templates select="collab"/>
+				<xsl:apply-templates select="article-title" mode="inconf"/>
+				<xsl:text>In: </xsl:text>
+				<xsl:apply-templates
+					select="person-group[@person-group-type='editor']
+                                 | person-group[@person-group-type='allauthors']
+                                 | person-group[@person-group-type='translator']
+                                 | person-group[@person-group-type='transed'] "
+					mode="book"/>
+				<xsl:apply-templates select="source" mode="conf"/>
+				<xsl:apply-templates select="conf-name | conf-date | conf-loc" mode="conf"/>
+				<xsl:apply-templates select="publisher-loc" mode="none"/>
+				<xsl:apply-templates select="publisher-name" mode="none"/>
+				<xsl:apply-templates select="year | time-stamp | season" mode="book"/>
+				<xsl:apply-templates select="fpage | lpage" mode="book"/>
+				<xsl:apply-templates select="access-date" mode="book"/>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<xsl:apply-templates select="person-group" mode="book"/>
+				<xsl:apply-templates select="collab" mode="book"/>
+				<xsl:apply-templates select="article-title" mode="conf"/>
+				<xsl:apply-templates select="source" mode="conf"/>
+				<xsl:apply-templates select="conf-name | conf-date | conf-loc" mode="conf"/>
+				<xsl:apply-templates select="publisher-loc" mode="none"/>
+				<xsl:apply-templates select="publisher-name" mode="none"/>
+				<xsl:apply-templates select="year | time-stamp | season" mode="book"/>
+				<xsl:apply-templates select="fpage | lpage" mode="book"/>
+				<xsl:apply-templates select="access-date" mode="book"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:call-template name="citation-tag-ends"/>
+	</xsl:template>
+
+
+	<!-- Government and other reports, other, web, and commun -->
+	<xsl:template
+		match="ref/nlm-citation[@citation-type='gov']
+                   | ref/nlm-citation[@citation-type='web']
+                   | ref/nlm-citation[@citation-type='commun']
+                   | ref/nlm-citation[@citation-type='other']
+                   | ref/citation[@citation-type='gov']
+                   | ref/citation[@citation-type='web']
+                   | ref/citation[@citation-type='commun']
+                   | ref/citation[@citation-type='other']">
+
+		<xsl:apply-templates select="person-group" mode="book"/>
+
+		<xsl:apply-templates select="collab"/>
+
+
+		<xsl:apply-templates select="article-title|gov" mode="book"/>
+		<xsl:apply-templates select="source" mode="book"/>
+		<xsl:apply-templates select="edition"/>
+		<xsl:apply-templates select="publisher-loc" mode="none"/>
+		<xsl:apply-templates select="publisher-name" mode="none"/>
+		<xsl:apply-templates select="year | month | time-stamp | season" mode="book"/>
+		<xsl:apply-templates select="fpage | lpage" mode="book"/>
+		<xsl:apply-templates select="access-date" mode="book"/>
+		<xsl:apply-templates select="uri"/>
+		<xsl:call-template name="citation-tag-ends"/>
+
+	</xsl:template>
+
+
+	<!-- Patents  -->
+	<xsl:template match="ref/nlm-citation[@citation-type='patent'] | ref/citation[@citation-type='patent']">
+
+		<xsl:apply-templates select="person-group" mode="book"/>
+		<xsl:apply-templates select="collab" mode="book"/>
+		<xsl:apply-templates select="article-title | trans-title" mode="none"/>
+		<xsl:apply-templates select="source" mode="none"/>
+		<xsl:apply-templates select="patent" mode="none"/>
+		<xsl:apply-templates select="year | time-stamp | season | access-date" mode="book"/>
+		<xsl:apply-templates select="fpage | lpage" mode="book"/>
+
+		<xsl:call-template name="citation-tag-ends"/>
+
+	</xsl:template>
+
+
+	<!-- Discussion  -->
+	<xsl:template match="ref/nlm-citation[@citation-type='discussion'] | ref/citation[@citation-type='discussion']">
+
+		<xsl:apply-templates select="person-group" mode="book"/>
+		<xsl:apply-templates select="collab"/>
+		<xsl:apply-templates select="article-title" mode="editedbook"/>
+		<xsl:text>In: </xsl:text>
+		<xsl:apply-templates select="source" mode="none"/>
+
+		<xsl:if test="publisher-name | publisher-loc">
+			<xsl:text> [</xsl:text>
+			<xsl:apply-templates select="publisher-loc" mode="none"/>
+			<xsl:value-of select="publisher-name"/>
+			<xsl:text>]; </xsl:text>
+		</xsl:if>
+
+		<xsl:apply-templates select="year | time-stamp | season | access-date" mode="book"/>
+		<xsl:apply-templates select="fpage | lpage" mode="book"/>
+
+		<xsl:call-template name="citation-tag-ends"/>
+	</xsl:template>
+
+
+	<!-- If none of the above citation-types applies,
+     use mode="none". This generates punctuation. -->
+	<!-- (e.g., citation-type="journal"              -->
+	<xsl:template match="nlm-citation | citation">
+
+		<xsl:apply-templates
+			select="*[not(self::annotation) and
+                                 not(self::edition) and
+                                 not(self::lpage) and
+                                 not(self::comment)]|text()"
+			mode="none"/>
+
+		<xsl:call-template name="citation-tag-ends"/>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!-- person-group, mode=book                                       -->
+	<!-- ============================================================= -->
+
+	<xsl:template match="person-group" mode="book">
+
+		<!-- XX needs fix, value is not a nodeset on the when -->
+		<!--
+  <xsl:choose>
+
+    <xsl:when test="@person-group-type='editor'
+                  | @person-group-type='assignee'
+                  | @person-group-type='translator'
+                  | @person-group-type='transed'
+                  | @person-group-type='guest-editor'
+                  | @person-group-type='compiler'
+                  | @person-group-type='inventor'
+                  | @person-group-type='allauthors'">
+
+      <xsl:call-template name="make-persons-in-mode"/>
+      <xsl:call-template name="choose-person-type-string"/>
+      <xsl:call-template name="choose-person-group-end-punct"/>
+
+    </xsl:when>
+
+    <xsl:otherwise>
+      <xsl:apply-templates mode="book"/>
+    </xsl:otherwise>
+
+  </xsl:choose>
+-->
+
+		<xsl:call-template name="make-persons-in-mode"/>
+		<xsl:call-template name="choose-person-type-string"/>
+		<xsl:call-template name="choose-person-group-end-punct"/>
+
+	</xsl:template>
+
+	<xsl:template name="make-persons-in-mode">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template name="choose-person-type-string">
+
+		<xsl:variable name="person-group-type">
+			<xsl:value-of select="@person-group-type"/>
+		</xsl:variable>
+
+		<xsl:choose>
+			<!-- allauthors is an exception to the usual choice pattern -->
+			<xsl:when test="$person-group-type='allauthors'"/>
+
+			<!-- the usual choice pattern: singular or plural? -->
+			<xsl:when test="count(name) > 1 or etal ">
+				<xsl:value-of select="($person-strings[@source=$person-group-type]/@plural)"/>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<xsl:value-of select="($person-strings[@source=$person-group-type]/@singular)"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+	</xsl:template>
+
+
+	<xsl:template name="choose-person-group-end-punct">
+
+		<xsl:choose>
+			<!-- compiler is an exception to the usual choice pattern -->
+			<xsl:when test="@person-group-type='compiler'">
+				<xsl:text>. </xsl:text>
+			</xsl:when>
+			<xsl:when test="@person-group-type='editor'">
+				<xsl:text>. </xsl:text>
+			</xsl:when>
+
+			<!-- the usual choice pattern: semi-colon or period? BROKEN!!
+			<xsl:when test="following-sibling::collab">
+				<xsl:text>; </xsl:text>
+			</xsl:when>
+-->
+			<xsl:otherwise/>
+		</xsl:choose>
+
+	</xsl:template>
+
+
+	<!-- ============================================================= -->
+	<!--  56. Citation subparts (mode "none" separately at end)        -->
+	<!-- ============================================================= -->
+
+	<!-- names -->
+
+	<xsl:template match="name" mode="nscitation">
+		<xsl:value-of select="surname"/>
+		<xsl:text>, </xsl:text>
+		<xsl:value-of select="given-names"/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+
+	<xsl:template match="name" mode="book">
+		<xsl:variable name="nodetotal" select="count(../*)"/>
+		<xsl:variable name="penult" select="count(../*)-1"/>
+		<xsl:variable name="position" select="position()"/>
+
+		<xsl:choose>
+
+			<!-- if given-names -->
+			<xsl:when test="given-names">
+				<xsl:apply-templates select="surname"/>
+				<xsl:text> </xsl:text>
+				<xsl:call-template name="firstnames">
+					<xsl:with-param name="nodetotal" select="$nodetotal"/>
+					<xsl:with-param name="position" select="$position"/>
+					<xsl:with-param name="names" select="given-names"/>
+					<xsl:with-param name="pgtype">
+						<xsl:choose>
+							<xsl:when test="parent::person-group[@person-group-type]">
+								<xsl:value-of select="parent::person-group/@person-group-type"/>
+							</xsl:when>
+							<xsl:otherwise>
+								<xsl:value-of select="'author'"/>
+							</xsl:otherwise>
+						</xsl:choose>
+					</xsl:with-param>
+				</xsl:call-template>
+
+				<xsl:if test="suffix">
+					<xsl:text>, </xsl:text>
+					<xsl:apply-templates select="suffix"/>
+				</xsl:if>
+			</xsl:when>
+
+			<!-- if no given-names -->
+			<xsl:otherwise>
+				<xsl:apply-templates select="surname"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:choose>
+			<!-- if have aff -->
+			<xsl:when test="following-sibling::aff"/>
+
+			<!-- if don't have aff -->
+			<xsl:otherwise>
+				<xsl:choose>
+
+					<!-- if part of person-group -->
+					<xsl:when test="parent::person-group/@person-group-type">
+						<xsl:choose>
+
+							<!-- if author -->
+							<xsl:when test="parent::person-group/@person-group-type='author'">
+								<xsl:choose>
+									<xsl:when test="$nodetotal=$position">. </xsl:when>
+									<xsl:when test="$penult=$position">
+										<xsl:choose>
+											<xsl:when test="following-sibling::etal">, </xsl:when>
+											<xsl:otherwise>, </xsl:otherwise>
+										</xsl:choose>
+									</xsl:when>
+									<xsl:otherwise>, </xsl:otherwise>
+								</xsl:choose>
+							</xsl:when>
+
+							<!-- if not author -->
+							<xsl:otherwise>
+								<xsl:choose>
+									<xsl:when test="$nodetotal=$position"/>
+									<xsl:when test="$penult=$position">
+										<xsl:choose>
+											<xsl:when test="following-sibling::etal">, </xsl:when>
+											<xsl:otherwise>, </xsl:otherwise>
+										</xsl:choose>
+									</xsl:when>
+									<xsl:otherwise>, </xsl:otherwise>
+								</xsl:choose>
+							</xsl:otherwise>
+						</xsl:choose>
+					</xsl:when>
+
+					<!-- if not part of person-group -->
+					<xsl:otherwise>
+						<xsl:choose>
+							<xsl:when test="$nodetotal=$position">. </xsl:when>
+							<xsl:when test="$penult=$position">
+								<xsl:choose>
+									<xsl:when test="following-sibling::etal">, </xsl:when>
+									<xsl:otherwise>, </xsl:otherwise>
+								</xsl:choose>
+							</xsl:when>
+							<xsl:otherwise>, </xsl:otherwise>
+						</xsl:choose>
+					</xsl:otherwise>
+				</xsl:choose>
+			</xsl:otherwise>
+
+		</xsl:choose>
+	</xsl:template>
+
+
+	<xsl:template match="collab" mode="book">
+		<xsl:apply-templates/>
+		<xsl:if test="@collab-type='compilers'">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
+		<xsl:if test="@collab-type='assignee'">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="etal" mode="book">
+		<xsl:text>et al. </xsl:text>
+		<xsl:choose>
+			<xsl:when test="parent::person-group/@person-group-type">
+				<xsl:choose>
+					<xsl:when test="parent::person-group/@person-group-type='author'">
+						<xsl:text> </xsl:text>
+					</xsl:when>
+					<xsl:otherwise/>
+				</xsl:choose>
+			</xsl:when>
+
+			<xsl:otherwise>
+				<xsl:text> </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<!-- affiliations -->
+
+	<xsl:template match="aff" mode="book">
+		<xsl:variable name="nodetotal" select="count(../*)"/>
+		<xsl:variable name="position" select="position()"/>
+
+		<xsl:text> (</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>)</xsl:text>
+
+		<xsl:choose>
+			<xsl:when test="$nodetotal=$position">. </xsl:when>
+			<xsl:otherwise>, </xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+
+	<!-- publication info -->
+
+	<xsl:template match="article-title" mode="nscitation">
+		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+		<xsl:choose>
+			<xsl:when test="../fpage or ../lpage">
+				<xsl:apply-templates/>
+				<xsl:text>; </xsl:text>
+			</xsl:when>
+			<xsl:when test="contains('?', $last-char) or contains('!', $last-char)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:when test="../access-date and not(../year) and not(../publisher-loc) and not(../publisher-name) and not(../source) and not(../fpage) and not(../lpage)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="article-title" mode="book">
+		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+		<xsl:choose>
+			<xsl:when test="../fpage or ../lpage">
+				<xsl:apply-templates/>
+				<xsl:text>; </xsl:text>
+			</xsl:when>
+			<xsl:when test="contains('?', $last-char) or contains('!', $last-char)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:when test="../access-date and not(../year) and not(../publisher-loc) and not(../publisher-name) and not(../source) and not(../fpage) and not(../lpage)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="article-title" mode="editedbook">
+		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+		<xsl:choose>
+<!--
+Caused wrong punctuation before editor list.
+			<xsl:when test="../fpage or ../lpage">
+				<xsl:apply-templates/>
+				<xsl:text>; </xsl:text>
+			</xsl:when>
+-->
+			<xsl:when test="contains('?', $last-char) or contains('!', $last-char)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:when test="../access-date and not(../year) and not(../publisher-loc) and not(../publisher-name) and not(../source) and not(../fpage) and not(../lpage)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="article-title" mode="conf">
+		<xsl:apply-templates/>
+		<xsl:choose>
+			<xsl:when test="../conf-name">
+				<xsl:text>. </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:text>; </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="article-title" mode="inconf">
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+
+
+	<xsl:template match="source" mode="nscitation">
+		<i>
+			<xsl:apply-templates/>
+		</i>
+	</xsl:template>
+
+	<xsl:template match="source" mode="book">
+		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+		<xsl:choose>
+
+			<xsl:when test="../trans-source">
+				<i><xsl:apply-templates/></i>
+				<xsl:choose>
+					<xsl:when test="../volume | ../edition">
+						<xsl:text>. </xsl:text>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:text> </xsl:text>
+					</xsl:otherwise>
+				</xsl:choose>
+			</xsl:when>
+
+			<xsl:when test="contains('?', $last-char) or contains('!', $last-char) or contains(';', $last-char)">
+				<i><xsl:apply-templates/></i>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<i><xsl:apply-templates/></i>
+				<xsl:choose>
+					<xsl:when test="following-sibling::access-date and not(../publisher-name) and not(../publisher-loc)">
+						<xsl:text> </xsl:text>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:text>. </xsl:text>
+					</xsl:otherwise>
+				</xsl:choose>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="source" mode="conf">
+		<i><xsl:apply-templates/></i>
+		<xsl:text>; </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="trans-source" mode="book">
+		<xsl:text> [</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>]. </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="volume" mode="nscitation">
+		<xsl:text> </xsl:text>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="volume | edition" mode="book">
+		<xsl:apply-templates/>
+		<xsl:if test="@collab-type='compilers'">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
+		<xsl:if test="@collab-type='assignee'">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+	<!-- dates -->
+
+	<xsl:template match="month" mode="nscitation"/>
+
+	<xsl:template match="month"/>
+
+	<xsl:template match="month" mode="none"/>
+
+
+
+	<xsl:template match="month" mode="book">
+		<xsl:variable name="month" select="."/>
+		<xsl:choose>
+			<xsl:when test="$month='01' or $month='1' or $month='January'">Jan</xsl:when>
+			<xsl:when test="$month='02' or $month='2' or $month='February'">Feb</xsl:when>
+			<xsl:when test="$month='03' or $month='3' or $month='March'">Mar</xsl:when>
+			<xsl:when test="$month='04' or $month='4' or $month='April'">Apr</xsl:when>
+			<xsl:when test="$month='05' or $month='5' or $month='May'">May</xsl:when>
+			<xsl:when test="$month='06' or $month='6' or $month='June'">Jun</xsl:when>
+			<xsl:when test="$month='07' or $month='7' or $month='July'">Jul</xsl:when>
+			<xsl:when test="$month='08' or $month='8' or $month='August'">Aug</xsl:when>
+			<xsl:when test="$month='09' or $month='9' or $month='September'">Sept</xsl:when>
+			<xsl:when test="$month='10' or $month='October'">Oct</xsl:when>
+			<xsl:when test="$month='11' or $month='November'">Nov</xsl:when>
+			<xsl:when test="$month='12' or $month='December'">Dec</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="$month"/>
+			</xsl:otherwise>
+		</xsl:choose>
+
+		<xsl:if test="../day">
+			<xsl:text> </xsl:text>
+			<xsl:value-of select="../day"/>
+		</xsl:if>
+
+		<xsl:choose>
+			<xsl:when test="../time-stamp">
+				<xsl:text>, </xsl:text>
+				<xsl:value-of select="../time-stamp"/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:when test="../access-date"/>
+			<xsl:otherwise>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+
+	<xsl:template match="day" mode="nscitation">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+
+	<xsl:template match="year" mode="nscitation">
+		<xsl:text> </xsl:text>
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="year" mode="book">
+		<xsl:choose>
+			<xsl:when test="../season or ../month">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:when test="../access-date and not(../lpage) and not(../fpage)">
+				<xsl:apply-templates/>
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
 
+
+
+	<xsl:template match="time-stamp" mode="nscitation">
+		<xsl:apply-templates/>
 	</xsl:template>
 
-	<!-- TODO: improved but still imperfect rendering for book names -->
-	<xsl:template match="given-names">
-		<xsl:call-template name="initials">
-			<xsl:with-param name="name" select="."/>
-		</xsl:call-template>
+	<xsl:template match="time-stamp" mode="book"/>
+
+
+	<xsl:template match="access-date" mode="nscitation">
+		<xsl:apply-templates/>
 	</xsl:template>
 
-	<xsl:template match="name" mode="nscitation">
-	  <xsl:value-of select="surname"/>
-	  <xsl:text>, </xsl:text>
-      <xsl:call-template name="initials">
-		<xsl:with-param name="name" select="given-names"/>
-	  </xsl:call-template>
-	  <xsl:text>. </xsl:text>
+	<xsl:template match="access-date" mode="book">
+		<xsl:text> (</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>). </xsl:text>
 	</xsl:template>
 
-	<xsl:template match="surname">
+
+
+	<xsl:template match="season" mode="book">
 		<xsl:apply-templates/>
+		<xsl:if test="@collab-type='compilers'">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
+		<xsl:if test="@collab-type='assignee'">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
+		<xsl:text>. </xsl:text>
 	</xsl:template>
 
-	<!-- fix for the broken preview template -->
-	<xsl:template match="person-group" mode="book">
-	  <xsl:choose>
 
-	    <xsl:when test="@person-group-type='editor'
-	                  or @person-group-type='assignee'
-	                  or @person-group-type='translator'
-	                  or @person-group-type='transed'
-	                  or @person-group-type='guest-editor'
-	                  or @person-group-type='compiler'
-	                  or @person-group-type='inventor'
-	                  or @person-group-type='allauthors'">
 
-	      <xsl:call-template name="make-persons-in-mode"/>
-	      <xsl:call-template name="choose-person-type-string"/>
-	      <xsl:call-template name="choose-person-group-end-punct"/>
+	<!-- pages -->
+
+	<xsl:template match="fpage" mode="nscitation">
+		<xsl:apply-templates/>
+	</xsl:template>
+
+	<xsl:template match="fpage" mode="book">
+
+		<xsl:text>p. </xsl:text>
+		<xsl:apply-templates/>
+	<xsl:choose>
+		<xsl:when test="../lpage or ../access-date"/>
+		<xsl:otherwise>
+			<xsl:text>. </xsl:text>
+		</xsl:otherwise>
+	</xsl:choose>
+	</xsl:template>
 
-	    </xsl:when>
 
-	    <xsl:otherwise>
-	      <xsl:apply-templates mode="book"/>
-	    </xsl:otherwise>
+	<xsl:template match="lpage" mode="book">
+		<xsl:choose>
+			<xsl:when test="../fpage">
+				<xsl:text>–</xsl:text>
+				<xsl:apply-templates/>
+				<xsl:if test="not(../access-date)">
+					<xsl:text>. </xsl:text>
+				</xsl:if>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+				<xsl:text> p.</xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
 
-	  </xsl:choose>
+	<xsl:template match="lpage" mode="nscitation">
+		<xsl:apply-templates/>
 	</xsl:template>
 
-	<!-- this is an improved citation rendering block 
-		 based on:  match="pub-id[@pub-id-type='pmid']" mode="nscitation"
-		 unlike the preview XSL, it will suppress unrecognized pub-id-types -->
+	<!-- misc stuff -->
 
 	<xsl:template match="pub-id" mode="nscitation">
-		<xsl:apply-templates select="." mode="none"/>
+	<xsl:apply-templates select="." mode="none"/>	<xsl:text> [</xsl:text>
+		<xsl:value-of select="@pub-id-type"/>
+		<xsl:text>: </xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>]</xsl:text>
 	</xsl:template>
 
 	<xsl:template match="pub-id" mode="none">
@@ -891,11 +4710,6 @@
 				<xsl:when test="@pub-id-type='medline' or @pub-id-type='pmid'">
 					<xsl:value-of select="'http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=abstract&amp;list_uids='"/>
 				</xsl:when>
-				<!--
-				<xsl:when test="@pub-id-type='pmid'">
-					<xsl:value-of select="'http://www.pubmedcentral.nih.gov/articlerender.fcgi?tool=pubmed&amp;pubmedid='"/>
-				</xsl:when>
-				-->
 				<xsl:when test="@pub-id-type='doi'">
 					<xsl:value-of select="'http://dx.doi.org/'"/>
 				</xsl:when>
@@ -908,19 +4722,11 @@
 				<xsl:attribute name="href">
 					<xsl:value-of select="concat($href,$pub-id)"/>
 				</xsl:attribute>
-				<xsl:attribute name="target">
-					<xsl:text>_new</xsl:text>
-				</xsl:attribute>
 
 				<xsl:choose>
 					<xsl:when test="@pub-id-type='medline' or @pub-id-type='pmid'">
 						<xsl:text>PubMed</xsl:text>
 					</xsl:when>
-					<!--
-					<xsl:when test="@pub-id-type='pmid'">
-						<xsl:text>PubMed Central</xsl:text>
-					</xsl:when>
-					-->
 					<xsl:when test="@pub-id-type='doi'">
 						<xsl:text>CrossRef</xsl:text>
 					</xsl:when>
@@ -930,159 +4736,501 @@
 		</xsl:if>
 	</xsl:template>
 
-	<!-- overloaded ref-list and ref matching; TODO: remove table? -->
-	<xsl:template match="ref-list">
+	<xsl:template match="annotation" mode="nscitation">
+		<blockquote>
+			<xsl:apply-templates/>
+		</blockquote>
+	</xsl:template>
+
+	<xsl:template match="comment" mode="nscitation">
+		<xsl:if test="not(self::node()='.')">
+			<br/>
+			<small>
+				<xsl:apply-templates/>
+			</small>
+		</xsl:if>
+	</xsl:template>
 
-	  <xsl:if test="position()>1">
-	    <hr class="section-rule"/>
-	  </xsl:if>
 
-	  <xsl:choose>
-	    <xsl:when test="not(title)">
-	      <span class="tl-main-part">References</span>
-	      <xsl:call-template name="nl-1"/>
-	    </xsl:when>
-	    <xsl:otherwise>
-	      <xsl:apply-templates select="title"/>
-	    </xsl:otherwise>
-	  </xsl:choose>
+	<xsl:template match="conf-name | conf-date" mode="conf">
+		<xsl:apply-templates/>
+		<xsl:text>; </xsl:text>
+	</xsl:template>
 
-	  <table width="100%" class="bm">
-		<xsl:call-template name="table-setup-l-narrow"/>
+	<xsl:template match="conf-loc" mode="conf">
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
 
-	    <xsl:apply-templates select="*[name()!='title']"/>
-	  </table>
 
-	  <xsl:call-template name="nl-1"/>
+	<!-- All formatting elements in citations processed normally -->
+	<xsl:template match="bold | monospace | overline | sc | strike | sub |sup | underline" mode="nscitation">
+		<xsl:apply-templates select="."/>
+	</xsl:template>
+	
+	<xsl:template match="bold | monospace | overline | sc | strike | sub |sup | underline" mode="none">
+		<xsl:apply-templates select="."/>
 	</xsl:template>
+	
 
-	<xsl:template match="ref">
-	  <tr>
-	    <xsl:call-template name="nl-1"/>
+	<!-- ============================================================= -->
+	<!--  "firstnames"                                                 -->
+	<!-- ============================================================= -->
+
+	<!-- called by match="name" in book mode,
+     as part of citation handling
+     when given-names is not all-caps -->
+
+	<xsl:template name="firstnames">
+		<xsl:param name="nodetotal"/>
+		<xsl:param name="position"/>
+		<xsl:param name="names"/>
+		<xsl:param name="pgtype"/>
+
+
+
+		<xsl:variable name="length" select="string-length($names)-1"/>
+		<xsl:variable name="gnm" select="substring($names,$length,2)"/>
+		<xsl:variable name="GNM">
+			<xsl:call-template name="capitalize">
+				<xsl:with-param name="str" select="substring($names,$length,2)"/>
+			</xsl:call-template>
+		</xsl:variable>
 
-	    <td id="{@id}" valign="top" align="right">
+		<!--
+<xsl:text>Value of $names = [</xsl:text><xsl:value-of select="$names"/><xsl:text>]</xsl:text>
+<xsl:text>Value of $length = [</xsl:text><xsl:value-of select="$length"/><xsl:text>]</xsl:text>
+<xsl:text>Value of $gnm = [</xsl:text><xsl:value-of select="$gnm"/><xsl:text>]</xsl:text>
+<xsl:text>Value of $GNM = [</xsl:text><xsl:value-of select="$GNM"/><xsl:text>]</xsl:text>
+-->
+
+		<xsl:if test="$names">
 			<xsl:choose>
-				<xsl:when test="not(label)">
-				    <strong><em><xsl:value-of select="position()"/><xsl:text>. </xsl:text></em></strong>
+
+				<xsl:when test="$gnm=$GNM">
+				<xsl:call-template name="initials">
+					<xsl:with-param name="name" select="$names"/>
+				</xsl:call-template>
+<!-- Tarek Mods
+					<xsl:apply-templates select="$names"/>
+					<xsl:choose>
+						<xsl:when test="$nodetotal!=$position">
+							<xsl:text>.</xsl:text>
+						</xsl:when>
+						<xsl:when test="$pgtype!='author'">
+							<xsl:text>.</xsl:text>
+						</xsl:when>
+					</xsl:choose>
+-->
 				</xsl:when>
+
 				<xsl:otherwise>
-					<xsl:apply-templates select="label"/>
+					<xsl:call-template name="initials">
+						<xsl:with-param name="name" select="$names"/>
+					</xsl:call-template>
 				</xsl:otherwise>
+
 			</xsl:choose>
-	    </td>
-	    <xsl:call-template name="nl-1"/>
+		</xsl:if>
+
+	</xsl:template>
+	<!-- strip superfluous . from article-title and source elements -->
+<!--	<xsl:template match="text()[parent::article-title or parent::source]">
+		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+
+		<xsl:choose>
+			<xsl:when test="contains('.', $last-char)">
+				<xsl:value-of select="substring(normalize-space(.), 1, string-length(.)-1)"/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:value-of select="."/>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+-->
+
+	<!-- ============================================================= -->
+	<!-- mode=none                                                     -->
+	<!-- ============================================================= -->
+
+	<!-- This mode assumes no punctuation is provided in the XML.
+     It is used, among other things, for the citation/ref
+     when there is no significant text node inside the ref.        -->
+
+	<xsl:template match="name" mode="none">
+		<xsl:value-of select="surname"/>
+		<xsl:text>, </xsl:text>
+		<xsl:value-of select="given-names"/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="article-title" mode="none">
+		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+		<xsl:choose>
+			<xsl:when test="contains('?', $last-char) or contains('!', $last-char)">
+				<xsl:apply-templates/>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
+
+	<xsl:template match="volume" mode="none">
+		<xsl:apply-templates/>
+	</xsl:template>
 
-	    <td valign="top">
-	      <xsl:apply-templates select="citation|nlm-citation"/>
-	    </td>
-	    <xsl:call-template name="nl-1"/>
-	  </tr>
-	  <xsl:call-template name="nl-1"/>
+	<xsl:template match="edition" mode="none">
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
 	</xsl:template>
 
-	<xsl:template match="ref/label">
-	    <strong><em><xsl:apply-templates/><xsl:text>. </xsl:text></em></strong>
+	<xsl:template match="supplement" mode="none">
+		<xsl:text> </xsl:text>
+		<xsl:apply-templates/>
 	</xsl:template>
 
+	<xsl:template match="issue" mode="none">
+		<xsl:text>(</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>)</xsl:text>
+
+	<xsl:choose>
+		<xsl:when test="../fpage"/>
+		<xsl:otherwise>
+			<xsl:if test="../access-date">
+				<xsl:text> (</xsl:text>
+				<xsl:value-of select="../access-date"/>
+				<xsl:text>) </xsl:text>
+			</xsl:if>
+		</xsl:otherwise>
+	</xsl:choose>
+	</xsl:template>
 
-	<!-- journal citation rendering based on JMIR -->
+	<xsl:template match="publisher-loc" mode="none">
+		<xsl:apply-templates/>
+		<xsl:text>: </xsl:text>
+	</xsl:template>
 
-	<!-- books: display edition; check numbering (1st, 2nd, etc) -->
-	<!-- books/confproc: display publisher name/location; consider "presented at:" -->
+	<xsl:template match="publisher-name" mode="none">
+		<xsl:apply-templates/>
+		<xsl:choose>
+			<xsl:when test="../access-date and not(../year)">
+				<xsl:text> </xsl:text>
+			</xsl:when>
+			<xsl:otherwise>
+				<xsl:text>; </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
 
-	<xsl:template match="ref/nlm-citation[@citation-type='journal']" name="journal-citation">
+	<xsl:template match="person-group" mode="none">
+		<xsl:apply-templates/>
+	</xsl:template>
 
-		<!-- TODO: do we need this for journal articles? -->
-		<!--  <xsl:variable name="augroupcount" select="count(person-group) + count(collab)"/>  -->
+	<xsl:template match="collab" mode="none">
+		<xsl:variable name="nodetotal">
+			<xsl:choose>
+				<xsl:when test="count(../person-group/*) &lt; 7">
+					<xsl:value-of select="count(../person-group/*)" />
+				</xsl:when>
+				<xsl:otherwise>
+					<xsl:value-of select="7" />
+				</xsl:otherwise>
+			</xsl:choose>
+		</xsl:variable>
+		<xsl:if test="$nodetotal &lt; 7">
+			<xsl:apply-templates/>
+			<xsl:if test="@collab-type">
+				<xsl:text>, </xsl:text>
+				<xsl:value-of select="@collab-type"/>
+			</xsl:if>
+			<xsl:choose>
+				<xsl:when test="following-sibling::collab">
+					<xsl:text>; </xsl:text>
+				</xsl:when>
+				<xsl:otherwise>
+					<xsl:text>. </xsl:text>
+				</xsl:otherwise>
+			</xsl:choose>
+		</xsl:if>
+	</xsl:template>
 
-		<!-- TODO: convert to initials, include etal for >6 authors -->
-		<xsl:apply-templates select="person-group[@person-group-type='author']"
-		                     mode="nscitation"/>
+	<xsl:template match="collab">
+		<xsl:apply-templates/>
+		<xsl:if test="@collab-type">
+			<xsl:text>, </xsl:text>
+			<xsl:value-of select="@collab-type"/>
+		</xsl:if>
 
-		<xsl:apply-templates select="collab" mode="none"/>
+		<xsl:choose>
+			<xsl:when test="following-sibling::collab">
+				<xsl:text>; </xsl:text>
+			</xsl:when>
 
-		<!-- TODO: check last character is punctuation -->
-		<xsl:apply-templates select="article-title"
-		                     mode="nscitation"/>
+			<xsl:otherwise>
+				<xsl:text>. </xsl:text>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
 
-		<xsl:apply-templates select="source"
-		                     mode="nscitation"/>
+	<xsl:template match="source" mode="none">
+		<xsl:text> </xsl:text>
+		<i><xsl:apply-templates/></i>
 
-		<xsl:apply-templates select="year"
-                     		 mode="nscitation"/>
-		<xsl:apply-templates select="month | time-stamp | season | access-date"
-		                     mode="book"/>
+		<xsl:choose>
+			<xsl:when test="../volume | ../fpage">
+				<xsl:if test="../edition">
+					<xsl:text> (</xsl:text>
+					<xsl:apply-templates select="../edition" mode="plain"/>
+					<xsl:text>)</xsl:text>
+				</xsl:if>
+				<xsl:text> </xsl:text>
+			</xsl:when>
 
-		<xsl:apply-templates select="volume | issue"
-		                     mode="none"/>
+			<xsl:otherwise>
+				<xsl:if test="../edition">
+					<xsl:text> (</xsl:text>
+					<xsl:apply-templates select="../edition" mode="plain"/>
+					<xsl:text>)</xsl:text>
+				</xsl:if>
+				<xsl:choose>
+					<xsl:when test="following-sibling::access-date">
+						<xsl:text> </xsl:text>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:text>. </xsl:text>
+					</xsl:otherwise>
+				</xsl:choose>
+			</xsl:otherwise>
+		</xsl:choose>
+	</xsl:template>
 
-		<xsl:apply-templates select="fpage"
-		                     mode="none"/>
+	<xsl:template match="trans-title" mode="none">
+		<xsl:text> [</xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>]. </xsl:text>
+	</xsl:template>
 
-		<xsl:apply-templates select="comment" mode="journal"/>
+	<xsl:template match="day" mode="none"/>
 
-		<xsl:apply-templates select="pub-id" mode="none"/>
+	<xsl:template match="year" mode="none">
+		<xsl:apply-templates mode="none"/>
+		<xsl:if test="../volume or ../issue">
+			<xsl:text>;</xsl:text>
+		</xsl:if>
 	</xsl:template>
 
-	<xsl:template match="comment" mode="journal">
-		<xsl:apply-templates select="." mode="citation"/>
+	<xsl:template match="season" mode="none">
+		<xsl:apply-templates/>
+		<xsl:text>;</xsl:text>
 	</xsl:template>
 
-	<xsl:template match="comment" mode="citation">
-		<!-- only output a period if there is text in the comment -->
+	<xsl:template match="fpage" mode="none">
+		<xsl:variable name="fpgct" select="count(../fpage)"/>
+		<xsl:variable name="lpgct" select="count(../lpage)"/>
+		<xsl:variable name="hermano" select="name(following-sibling::node())"/>		
 		<xsl:choose>
-			<xsl:when test="not(self::node()='.') and self::text()">
-			    <xsl:text> </xsl:text>
-			    <xsl:apply-templates/>
-			    <xsl:text>. </xsl:text>
-			</xsl:when>
-			<xsl:when test="not(self::node()='.')">
-			    <xsl:text> </xsl:text>
-			    <xsl:apply-templates/>
+			<xsl:when test="preceding-sibling::fpage">
+				<xsl:choose>
+					<xsl:when test="following-sibling::fpage">
+						<xsl:text> </xsl:text>
+						<xsl:apply-templates/>
+
+						<xsl:if test="$hermano='lpage'">
+							<xsl:text>&#8211;</xsl:text>
+							<xsl:apply-templates select="following-sibling::lpage[1]" mode="none"/>
+						</xsl:if>
+						<xsl:text>,</xsl:text>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:text> </xsl:text>
+						<xsl:apply-templates/>
+						<xsl:if test="$hermano='lpage'">
+							<xsl:text>&#8211;</xsl:text>
+							<xsl:apply-templates select="following-sibling::lpage[1]" mode="none"/>
+						</xsl:if>
+						<xsl:text>.</xsl:text>
+					</xsl:otherwise>
+				</xsl:choose>
 			</xsl:when>
+			<xsl:otherwise>
+				<xsl:text>:</xsl:text>
+				<xsl:apply-templates/>
+				<xsl:choose>
+					<xsl:when test="$hermano='lpage'">
+						<xsl:text>&#8211;</xsl:text>
+						<xsl:apply-templates select="following-sibling::lpage[1]" mode="write"/>
+						<xsl:text>.</xsl:text>
+					</xsl:when>
+					<xsl:when test="$hermano='fpage'">
+						<xsl:text>,</xsl:text>
+					</xsl:when>
+					<xsl:otherwise>
+						<xsl:text>.</xsl:text>
+					</xsl:otherwise>
+				</xsl:choose>
+			</xsl:otherwise>
 		</xsl:choose>
+
+		<xsl:if test="../access-date">
+			<xsl:text> (</xsl:text>
+			<xsl:value-of select="../access-date"/>
+			<xsl:text>) </xsl:text>
+		</xsl:if>
 	</xsl:template>
 
-	<!-- strip superfluous . from article-title and source elements -->
-	<xsl:template match="text()[parent::article-title or parent::source]">
-		<xsl:variable name="last-char" select="normalize-space(substring(., string-length(.), 1))"/>
+	<xsl:template match="lpage" mode="none"/>
+	
+	<xsl:template match="lpage" mode="write">
+		<xsl:apply-templates/>
+	</xsl:template>
 
+	<xsl:template match="gov" mode="none">
 		<xsl:choose>
-			<xsl:when test="contains('.', $last-char)">
-				<xsl:value-of select="substring(normalize-space(.), 1, string-length(.)-1)"/>
+			<xsl:when test="../trans-title">
+				<xsl:apply-templates/>
 			</xsl:when>
+
 			<xsl:otherwise>
-				<xsl:value-of select="."/>
+				<xsl:apply-templates/>
+				<xsl:text>. </xsl:text>
 			</xsl:otherwise>
 		</xsl:choose>
 	</xsl:template>
 
+	<xsl:template match="patent" mode="none">
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+	<xsl:template match="access-date" mode="none"/>
+	
+	<!-- special handling for citation links -->
+	<xsl:template match="issn" mode="none"/>
+
+	<xsl:template match="issn" mode="nscitation"/>
+
+	<xsl:template match="issn" mode="citation"/>
+
+	<xsl:template match="issn"/>
+
+
+	<xsl:template match="comment" mode="none">
+		<xsl:text> </xsl:text>
+		<xsl:apply-templates/>
+		<xsl:text>. </xsl:text>
+	</xsl:template>
+
+
+	<xsl:template match="comment/ext-link | uri" mode="none">
+		<xsl:apply-templates select="."/>
+	</xsl:template>
+
+	<xsl:template match="comment/ext-link | uri" mode="nscitation">
+		<xsl:apply-templates select="."/>
+	</xsl:template>
+
+	<xsl:template match="comment/ext-link | uri" mode="citation">
+		<xsl:apply-templates select="."/>
+	</xsl:template>
+	
+	<xsl:template match="comment/ext-link">
+
+		<xsl:variable name="href">
+			<xsl:value-of select="@xlink:href"/>
+		</xsl:variable>
+
+		<xsl:text> [</xsl:text>
+		<!-- NB: target is deprecated in XHTML 1.0S -->
+		<a>
+			<xsl:call-template name="make-id"/>
+			<xsl:attribute name="href">
+				<xsl:value-of select="$href"/>
+			</xsl:attribute>
+			<xsl:choose>
+				<xsl:when test="contains($href, 'www.webcitation.org') or contains(., 'www.webcitation.org')">
+					<xsl:text>WebCite Cache</xsl:text>
+				</xsl:when>
+				<xsl:otherwise>
+					<xsl:text>Full Text</xsl:text>
+				</xsl:otherwise>
+			</xsl:choose>
+		</a>
+		<xsl:text>] </xsl:text>
+
+	</xsl:template>
+
+	<xsl:template match="uri">
+
+		<xsl:text> [</xsl:text>
+		<!-- NB: target is deprecated in XHTML 1.0S -->
+		<a>
+			<xsl:call-template name="make-id"/>
+			<xsl:attribute name="href">
+				<xsl:value-of select="."/>
+			</xsl:attribute>
+			<xsl:text>Full Text</xsl:text>
+		</a>
+		<xsl:text>] </xsl:text>
+
+	</xsl:template>
+
 
 	<!-- ============================================================= -->
-	<!-- DEFAULT TEMPLATE - OUTPUT NODES THAT AREN'T MATCHED ELSEWHERE -->
+	<!--  57. "CITATION-TAG-ENDS"                                      -->
 	<!-- ============================================================= -->
 
-	<xsl:template match="*">
-		<!--
-	    <xsl:message>
-	        <xsl:value-of select="name(.)"/>
-	        <xsl:text> encountered</xsl:text>
-	        <xsl:if test="parent::*">
-	            <xsl:text> in </xsl:text>
-	            <xsl:value-of select="name(parent::*)"/>
-	        </xsl:if>
-	        <xsl:text>, but no template matches.</xsl:text>
-	    </xsl:message>
-		-->
-	    <div style="color:red">
-	        <xsl:text>&lt;</xsl:text>
-	        <xsl:value-of select="name(.)"/>
-	        <xsl:text>&gt;</xsl:text>
-	        <xsl:apply-templates/>
-	        <xsl:text>&lt;/</xsl:text>
-	        <xsl:value-of select="name(.)"/>
-	        <xsl:text>&gt;</xsl:text>
-	    </div>
+
+	<xsl:template name="citation-tag-ends">
+
+		<xsl:apply-templates select="series" mode="citation"/>
+
+		<!-- If language is not English -->
+		<!-- XX review logic -->
+		<xsl:if test="article-title[@xml:lang!='en']
+               or article-title[@xml:lang!='EN']">
+
+			<xsl:call-template name="language">
+				<xsl:with-param name="lang" select="article-title/@xml:lang"/>
+			</xsl:call-template>
+		</xsl:if>
+
+		<xsl:if test="source[@xml:lang!='en']
+              or source[@xml:lang!='EN']">
+
+			<xsl:call-template name="language">
+				<xsl:with-param name="lang" select="source/@xml:lang"/>
+			</xsl:call-template>
+		</xsl:if>
+
+		<xsl:apply-templates select="comment" mode="citation"/>
+
+		<xsl:apply-templates select="annotation" mode="citation"/>
+
 	</xsl:template>
 
+
+		<!--    template to generate initials from names     -->
+		<xsl:template name="initials">
+		    <xsl:param name="name"/>
+		    <xsl:choose>
+		        <xsl:when test="contains($name,' ')">
+		            <xsl:call-template name="initials">
+		                <xsl:with-param name="name" select="substring-before($name,' ')"/>
+		            </xsl:call-template>
+		            <xsl:call-template name="initials">
+		                <xsl:with-param name="name" select="substring-after($name,' ')"/>
+		            </xsl:call-template>
+		        </xsl:when>
+		        <xsl:when test="string-length($name)&lt;3">
+		            <xsl:value-of select="$name"/>
+		        </xsl:when>
+		        <xsl:otherwise>
+		            <xsl:value-of select="substring($name,1,1)"/>
+		        </xsl:otherwise>
+		    </xsl:choose>
+		</xsl:template>
+
 </xsl:transform>
diff --git a/styles/articleView.css b/styles/articleView.css
old mode 100644
new mode 100755
index f4d6dd8..ab21248
--- a/styles/articleView.css
+++ b/styles/articleView.css
@@ -1,32 +1,24 @@
 /**
  * articleView.css
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Article view stylesheet.
  *
- * $Id$
+ * $Id$
  */
 
 #body {
-	width: 95%;
+	width: 100%;
 	margin: 0 auto;
 }
 
-#container {
-	min-width: 150px !important;
-}
-
 #main {
 	width: 95%;
 	margin: 0;
 }
 
-#main h2 {
-	font-size: 1.0em;
-}
-
 #main h5 {
 	margin: 0em 1em 0.5em 0em;
 	padding-top: 0em;
@@ -47,53 +39,6 @@
 	border: none;
 }
 
-#content img.accessLogo {
-	display: inline;
-	vertical-align: middle;
-	margin: 0;
-	padding: 0;
-}
-
-#topBar {
-	width: 100%;
-	padding-top: 1em;
-	padding-bottom: 2.5em;
-}
-
-#articleFontSize {
-	float: right;
-}
-
-#articleFontSize img {
-	display: inline;
-	vertical-align: middle;
-	margin: 0;
-	padding: 0;
-}
-
-#accessKey {
-	float: left;
-}
-
-#accessKey img {
-	display: inline;
-	vertical-align: middle;
-	margin: 0;
-	padding: 0;
-}
-
-#articleCoverImage {
-	width: 100%;
-	padding-top: 1em;
-	padding-bottom: 1em;
-	clear: left;
-}
-
-#articleCoverImage img {
-	display: block;
-	border: 0;
-}
-
 div.rtSeparator {
 	width: 100%;
 	padding: 0;
@@ -152,14 +97,3 @@ table.bm {
 .tl-default, .tl-main-part {
 	font-weight: bold;
 }
-
-dt {
-	display: inline;
-	float: left;
-	margin-left: 20px;
-	width: 80px;
-}
-
-dd {
-	margin-left: 100px;
-}
diff --git a/styles/common.css b/styles/common.css
index 02595a3..8a23bf1 100644
--- a/styles/common.css
+++ b/styles/common.css
@@ -1,25 +1,25 @@
 /**
  * common.css
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Site-wide shared stylesheet.
  *
- * $Id$
+ * $Id$
  */
 
 /**
  * Common HTML elements
  */
-
 body {
-	margin: 0;
-	padding: 0;
 	background-color: #FBFBF3;
 	color: #111;
-	font-family: Verdana,Arial,Helvetica,sans-serif;
-	text-align: center;
+/*	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif; */
+	font-family: Georgia, Garamond, Caslon, 'Times New Roman', Times, serif;
+	font-size: 1em;
+	padding: 0;
+	margin: 0;
 }
 
 div {
@@ -37,25 +37,24 @@ form {
 	margin: 0;
 }
 
+p {
+/*	clear: left; */
+}
 a {
-	text-decoration: underline;
 }
 
-a:link {
-	color: #375;
+a:link, a:visited {
+	color: #1a63ba;
+	text-decoration: none;
 }
 
 a:active {
-	color: #253;
-}
-
-a:visited {
-	color: #375;
+	color: #1a63ba;
 }
 
 a:hover {
-	color: #253;
-	background: #CDC;
+	color: #1a63ba;
+	text-decoration: underline;
 }
 
 a.plain {
@@ -108,74 +107,107 @@ input.defaultButton {
  */
 
 #container {
-	width:100% !important;
-	min-width: 730px !important;
-	margin: 0px auto;
+	width: 100%;
+	min-width: 500px;
+	padding: 0;
+	margin: 0;
+	text-align: left;
+	background-color: #FFFFFF;
 	line-height: 125%;
 	text-align: center;
 }
 
 #header {
-	width:100%;
-	background-color: #ABA;
+	padding: 0;
+	margin: 0 auto;
 	text-align: center;
 }
 
 #headerTitle {
-	text-align: left !important;
+	text-align: left;
 	margin: 0 auto;
 	padding: 0;
-	width: 100%;
+        width: 900px;
 }
 
 #header h1 {
 	margin: 0 auto;
-	padding: 0.5em 0 0.25em 10%;
-	font-family: Georgia,'Times New Roman',Times,serif;
+	padding: 0.5em 0 0.5em 0;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
 	font-weight: normal;
-	line-height: 130%;
+}
+
+#body {
+        width: 100%;
+        min-width: 500px;
+	clear: left;
+	border-top: 1px solid #ccc;
 }
 
 #footer {
 	width: 100%;
-	min-height: 50px;
-	position: static;
+	position: relative;
 	clear: both;
-	background-color: #ABA;
+	background-color: #1a63ba;
 	text-align: center;
 }
 
 #footerContent {
-	width: 100%;
-	margin: 0 auto;
-	padding-left: 10%;
+	width: 900px;
+	text-align: center;
+	color: #fff;
+}
+
+#footerContent a {
+	width: 900px;
+	color: #fff;
+	text-decoration: none;
+}
+
+#footerContent a:hover {
+	width: 900px;
+	background-color: #1a63ba;
+	color: #fff;
+	text-decoration: underline;
+}
+
+.sidebar {
+	float: left;
+	width: 200px;
+	margin: 0;
+	padding: 1em 0em 1em 0em;
+	font-size: 0.80em;
+}
+
+#right {
+	float: right;
 }
 
 #main {
-	padding: 0.5em 0em 2em 0em;
-	width: 80%;
-	margin: 0 auto;
+	min-width: 610px;
+	width: 70%;
+	margin: 0.5em;
+	padding: 0.5em;
 }
 
 #main h2 {
 	margin: 0em 1em 0.5em 0em;
 	padding-top: 0.5em;
-	font-family: Georgia,'Times New Roman',Times,serif;
+	font-family: Georgia, Garamond, Caslon, 'Times New Roman', Times, serif;
 	font-weight: normal;
-	line-height: 130%;
 }
 
 #main h3 {
 	margin: 0em 1em 0.5em 0em;
 	padding-top: 0em;
-	font-family: Georgia,'Times New Roman',Times,serif;
+	font-family: Georgia, Garamond, Caslon, 'Times New Roman', Times, serif;
 	font-weight: normal;
 }
 
 #navbar {
 	margin-right: 0;
+	margin-top: -30px;
 	padding-bottom: 0.5em;
-	border-bottom: 2px dotted #000;
 }
 
 #breadcrumb {
@@ -184,25 +216,26 @@ input.defaultButton {
 }
 
 #content {
-	margin: 0;
+/*	margin: 0;
 	padding: 0;
 	padding-top: 0.5em;
-	font-size: 0.7em;
+	font-size: 1em;
 	border-top: 2px dotted #000;
-}
+*/}
 
 #content h3 {
 	margin: 0em 1em 0.25em 0em;
 	padding-top: 0.75em;
-	font-family: Georgia,'Times New Roman',Times,serif;
+	font-family: Georgia, Garamond, Caslon, 'Times New Roman', Times, serif;
 	font-weight: normal;
 	font-size: 1.8em;
 	line-height: 1.35em;
 }
 
 #content h4 {
-	margin: .75em 1em 0.25em 0em;
-	font-family: Georgia,'Times New Roman',Times,serif;
+	margin: 0em 1em 0.25em 0em;
+	padding-top: 0.75em;
+	font-family: Georgia, Garamond, Caslon, 'Times New Roman', Times, serif;
 	font-weight: normal;
 	font-size: 1.5em;
 }
@@ -216,26 +249,6 @@ input.defaultButton {
 
 
 /**
- * Access icons and key
- */
-#accessKey {
-	margin-bottom: 2em;
-}
-
-#accessKey img {
-	vertical-align: middle;
-	margin: 0;
-	padding: 0;
-}
-
-#content img.accessLogo {
-	vertical-align: middle;
-	margin: 0;
-	padding: 0;
-}
-
-
-/**
  * Navigation bar
  */
 
@@ -258,206 +271,69 @@ input.defaultButton {
 
 
 /**
- * Breadcrumbs
+ * Sidebar
  */
 
-#breadcrumb a {
-	text-decoration: none;
-}
-
-#breadcrumb a.current {
-	font-weight: bold;
-}
-
-
-/**
- * Announcements
- */
-
-#announcementsHome {
-	width: 100%;
-	margin: 2em 0 2em 0;	
-}
-
-#announcementsHome h3 {
-	text-align: center;
-}
-
-#announcements {
-	width: 100%;
-}
-
-#announcements h3 {
-	text-align: center;
-}
-
-table.announcements {
-	width: 100%;
-}
-
-table.announcements td {
-	padding: 0.25em 0.5em 0.25em 0.5em;
-}
-
-table.announcements td.nodata {
-	text-align: center;
-	font-style: italic;
-}
-
-table.announcements td.headseparator {
-	border-top: 1px dotted #000;
-	font-size: 0.1em;
-	line-height: 1%;
-}
-
-table.announcements td.endseparator {
-	border-top: 1px dotted #000;
-	font-size: 0.25em;
-	line-height: 10%;
-}
-
-table.announcements td.separator {
-	border-top: 1px dotted #DDDDD0;
-	font-size: 0.1em;
-	line-height: 1%;
-}
-
-table.announcements tr.intro {
-}
-
-table.announcements td.intro {
-}
-
-table.announcements tr.title {
-	vertical-align: top; 
-}
-
-table.announcements td.title {
-	width: 85%;
-}
-
-table.announcements td.title h4 {
-}
-
-table.announcements tr.description {
-	vertical-align: top;
-}
-
-table.announcements td.description {
-	width: 85%;
-}
-
-table.announcements tr.details {
-	vertical-align: bottom;
-}
-
-table.announcements td.posted {
-	padding-top: 1em;
-	font-style: italic;
-}
-
-table.announcements td.more {
-	width: 15%;
-	text-align: right;
-}
-
-table.announcementsMore {
-	width: 100%;
-}
-
-table.announcementsMore td {
-	padding-top: 1.5em;
-	text-align: right;
-}
-
-
-/**
- * Table of contents
- */
-
-h4.tocSectionTitle {
-}
-
-table.tocArticle {
-	width: 100%;
+#developedBy {
+	text-transform: uppercase;
+	font-size: 0.95em;
 }
 
-table.tocArticle td.tocTitle {
-	width: 70%;
-	height: 100%;
+.sidebar div.block {
+	font-size: 1.1em;
+	padding-bottom: 1.5em;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
 }
 
-table.tocArticle td.tocGalleys {
-	width: 30%;
-	text-align: right;
+.sidebar div.block a {
+	font-size: 1em;
+	padding-bottom: 1.5em;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	color: #000;
 }
 
-table.tocArticle td.tocAuthors {
-	padding-left: 30px;
-	font-style: italic;
-	vertical-align: top;
+.sidebar div.block span.blockTitle {
+	display: block;
+	padding: 0.5em 0 0.5em 0;
+	font-size: 1.2em;
+//	letter-spacing: 0.1em;
+//	text-transform: uppercase;
+	color: #870000;
+	font-weight: bold;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
 }
 
-table.tocArticle td.tocPages {
-	text-align: right;
-	vertical-align: top;
+#quicklinks {
+	font-size: 0.75em;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
 }
 
-.tocArticleCoverImage img {
-	border: 0;
-	float: left;
-	width: 100px;
-	margin: 0 1em 1em 0;
+#quicklinks span.blockTitle {
+	padding: 0.5em 0.75 0.5em 0;
+	color: #870000;
+	font-weight: bold;
 }
 
-
-/**
- * Homepage image
- */
-
-#homepageImage img {
+.sidebar div.block span.blockSubtitle {
 	display: block;
-	margin: 0 auto;
-	border: 0;
-	text-align: center;
+	padding: 0;
 }
 
-.homepageImage img {
-	margin: 0 auto;
-	border: 0;
-	float: left;
-	width: 100px;
-	margin: 1em 1em 1em 0;
-	text-align: center;
+.sidebar input.textField, .sidebar select.selectMenu, .sidebar input.button {
+	font-size: 1em;
 }
 
 
 /**
- * Issue cover image
+ * Breadcrumbs
  */
 
-#issueCoverImage img {
-	display: block;
-	border: 0;
-}
-
-.issueCoverImage img {
-	border: 0;
-	float: left;
-	width: 100px;
-	margin: 1em 1em 1em 0;
-}
-
-#issueCoverImage a:link, .issueCoverImage a:link {
-}
-
-#issueCoverImage a:active, .issueCoverImage a:active {
-}
-
-#issueCoverImage a:visited, .issueCoverImage a:visited {
+#breadcrumb a {
+	text-decoration: none;
 }
 
-#issueCoverImage a:hover, .issueCoverImage a:hover {
+#breadcrumb a.current {
+	font-weight: bold;
 }
 
 
@@ -487,10 +363,6 @@ a.icon {
 	text-decoration: none;
 }
 
-a.icon img {
-	border: 0;
-}
-
 a.icon:hover {
 	background: none;
 }
@@ -538,12 +410,8 @@ table.info td {
 table.listing {
 }
 
-table.listing tr.highlight {
-	background: yellow;
-}
-
 table.listing td {
-	padding: 0.25em 1.5em 0.25em 0.5em;
+	padding: 0.25em 0.5em 0.25em 0.5em;
 }
 
 table.listing tr.heading td, table.listing td.heading, table.info td.heading {
@@ -551,11 +419,7 @@ table.listing tr.heading td, table.listing td.heading, table.info td.heading {
 	text-transform: uppercase;
 	font-weight: normal;
 	line-height: 120%;
-	padding: 0.75em 1.5em 1em 0.5em;
-}
-
-table.listing tr.fastTracked {
-	background-color: #ABA;
+	padding: 0.75em 0.5em 1em 0.5em;
 }
 
 table.info td.heading {
@@ -638,7 +502,6 @@ ul.formErrorList {
 	color: #900;
 }
 
-
 /**
  * Other organizational elements
  */
@@ -652,7 +515,7 @@ ul.menu li {
 	margin: 0;
 	padding: 0;
 	padding-right: 1.5em;
-	display: inline;
+//	display: inline;
 }
 
 ul.menu li.current {
@@ -680,6 +543,13 @@ ul.steplist li {
 	text-transform: uppercase;
 }
 
+.item-list ul li{
+	margin: 0;
+	padding: 5px;
+	font-size: 0.85em;
+	display: inline;
+}
+
 ul.steplist li.current {
 	font-weight: bold;
 }
@@ -693,17 +563,6 @@ ul.plain {
 	padding-left: 1.5em;
 }
 
-ul.filter {
-	margin: 0;
-	padding: 1.5em 0 1.5em 0;
-	list-style-type: none;
-}
-
-ul.filter li {
-	padding-right: 1.5em;
-	display: inline;
-}
-
 div.separator {
 	width: 100%;
 	margin-top: 1em;
@@ -721,3 +580,600 @@ div.progressbar {
 	width: 505px;
 	z-index:1;
 }
+
+
+/* Login box */
+#login_box {
+	font-weight: normal;
+	float: right;
+	background-color: #fff;
+	position: absolute;
+
+}
+
+#login_box h3 {
+	border-bottom-width: 0;
+	font-size: 135%;
+	font-weight: normal;
+	margin: 5px 0;
+	padding: 0;
+}
+
+/* Article Elements */
+#Category {
+	font-size: 1.5em;
+	color: #875700;
+	text-transform: uppercase;
+	padding-bottom: 1em;
+}
+
+#MainTitle {
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	color: #870000;
+	font-size: 2.5em;
+	padding-bottom: 0.5em;
+}
+
+#SubTitle {
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	font-size: 1.5em;
+	padding-bottom: 0.5em;
+}
+
+#Byline {
+	text-transform: uppercase;
+	font-size: 1.2em;
+	padding-bottom: 0.5em;
+	color: #875700;
+}
+
+#authors {
+	padding-bottom: 1em;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	font-size: 85%;
+}
+
+#authors b {
+	color: #875700;
+	padding-bottom: 1em;
+}
+
+.author {
+	color: #875700;
+	padding-bottom: 1em;
+}
+
+.citation {
+	font-size: smaller;
+	vertical-align: baseline;
+	position: relative;
+	bottom: 0.33em;
+}
+
+#References h2 {
+	font-size: 1.5em;
+	padding-top: 1em;
+	padding-bottom: 0.5em;
+}
+
+.refAuthor {
+}
+
+.refTitle {
+}
+
+.refJournal {
+	font-style: italic;
+}
+
+.JournalTitle {
+	font-style: italic;
+}
+
+.BookTitle {
+	font-style: italic;
+}
+
+.ArticleSection {
+}
+
+.Abstract {
+	text-align: center;
+	text-transform: uppercase;
+}
+
+.Title1 {
+	padding-top: 2em;
+	font-size: 1.25em;
+	border-bottom: 1px solid #000;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	color: #870000;
+	font-weight: bold;
+}
+
+.subTitle1 {
+	font-size: 1.1em;
+	font-weight: bold;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+}
+
+.subTitle2 {
+	font-weight: bold;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	color: #870000;
+}
+
+.subTitle3 {
+	font-style: italic;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+}
+
+#CompetingInterests {
+	text-align: center;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	font-size: 1.25em;
+	background: #ffe5cc;
+	padding: 30px;
+	border: 1px solid #870000;
+	margin-left: 50px;
+	margin-right: 50px;
+	margin-bottom: 1em;
+	margin-top: 1em;
+}
+
+#Correspondence {
+	padding-bottom: 1em;
+	font-family: verdana, sans;
+	font-size: 85%;
+}
+.latin {
+	font-style: italic;
+}
+
+a img {
+	border: 0;
+}
+
+.figure {
+	background: #eee;
+	border: 1px solid #777;
+	margin-top: 1em;
+	margin-bottom: 0.5em;
+	padding: 0.5em;
+	min-height: 75px;
+}
+
+.figure img {
+	float: left;
+}
+
+
+
+/* Drupal elements */
+
+/* Form Items */
+.form-item input.error, .form-item textarea.error, .form-item select.error {
+  border: 2px solid red;
+}
+.form-item .description {
+  font-size: 0.85em;
+}
+.form-item label {
+  display: block;
+  font-weight: bold;
+}
+.form-item label.option {
+  display: inline;
+  font-weight: normal;
+}
+.form-checkboxes, .form-radios {
+  margin: 1em 0;
+}
+.form-checkboxes .form-item, .form-radios .form-item {
+  margin-top: 0.4em;
+  margin-bottom: 0.4em;
+}
+.marker, .form-required {
+  color: #f00;
+}
+
+/* Collapsible forms */
+html.js fieldset.collapsed {
+  border-bottom-width: 0;
+  border-left-width: 0;
+  border-right-width: 0;
+  margin-bottom: 0;
+  height: 1em;
+}
+html.js fieldset.collapsed * {
+  display: none;
+}
+html.js fieldset.collapsed legend {
+  display: block;
+}
+html.js fieldset.collapsible legend a {
+  padding-left: 15px;
+  background: url(/misc/menu-expanded.png) 5px 75% no-repeat;
+}
+html.js fieldset.collapsed legend a {
+  background-image: url(/misc/menu-collapsed.png);
+  background-position: 5px 50%;
+}
+/* Note: IE-only fix due to '* html' (breaks Konqueror otherwise). */
+* html.js fieldset.collapsed legend,
+* html.js fieldset.collapsed legend *,
+* html.js fieldset.collapsed table * {
+  display: inline;
+}
+html.js fieldset.collapsible legend a {
+  display: block;
+}
+/* Avoid jumping around due to margins collapsing into collapsible fieldset border */
+html.js fieldset.collapsible .fieldset-wrapper {
+  overflow: auto;
+}
+
+/*
+** Resizable text areas
+*/
+.resizable-textarea {
+  width: 95%;
+}
+.resizable-textarea .grippie {
+  height: 9px;
+  overflow: hidden;
+  background: #eee url(../../misc/grippie.png) no-repeat center 2px;
+  border: 1px solid #ddd;
+  border-top-width: 0;
+  cursor: s-resize;
+}
+html.js .resizable-textarea textarea {
+  margin-bottom: 0;
+  width: 100%;
+  display: block;
+}
+
+ul.links li, ul.inline li {
+  margin-left: 0;
+  margin-right: 0;
+  padding-left: 0;
+  padding-right: 1em;
+}
+
+.node .links, .comment .links {
+  text-align: left;
+}
+
+.node .links ul.links li, .comment .links ul.links li {}
+.terms ul.links li {
+  margin-left: 0;
+  margin-right: 0;
+  padding-right: 0;
+  padding-left: 1em;
+}
+ul.links {
+  margin: 0;
+  padding: 0;
+}
+ul.links.inline {
+  display: inline;
+}
+ul.links li {
+  display: inline;
+  list-style-type: none;
+  padding: 0 0.5em;
+}
+/**
+ * Autocomplete.
+ */
+#autocomplete li {
+  cursor: default;
+  padding: 2px;
+  margin: 0;
+}
+#autocomplete li.selected {
+  background: #027ac6;
+  color: #fff;
+}
+/*
+** Autocomplete styles
+*/
+/* Suggestion list */
+#autocomplete {
+  position: absolute;
+  border: 1px solid;
+  overflow: hidden;
+  z-index: 100;
+}
+#autocomplete ul {
+  margin: 0;
+  padding: 0;
+  list-style: none;
+}
+#autocomplete li {
+  background: #fff;
+  color: #000;
+  white-space: pre;
+  cursor: default;
+}
+#autocomplete li.selected {
+  background: #0072b9;
+  color: #fff;
+}
+/* Animated throbber */
+html.js input.form-autocomplete {
+  background-image: url(http://blog.openmedicine.ca/misc/throbber.gif);
+  background-repeat: no-repeat;
+  background-position: 100% 2px;
+}
+html.js input.throbbing {
+  background-position: 100% -18px;
+}
+
+/* Tab navigation */
+ul.primary {
+  border-collapse: collapse;
+  padding: 0 0 0 1em;
+  white-space: nowrap;
+  list-style: none;
+  margin: 5px;
+  height: auto;
+  line-height: normal;
+  border-bottom: 1px solid #bbb;
+}
+ul.primary li {
+  display: inline;
+}
+ul.primary li a {
+  background-color: #ddd;
+  border-color: #bbb;
+  border-width: 1px;
+  border-style: solid solid none solid;
+  height: auto;
+  margin-right: 0.5em;
+  padding: 0 1em;
+  text-decoration: none;
+}
+ul.primary li.active a {
+  background-color: #fff;
+  border: 1px solid #bbb;
+  border-bottom: #fff 1px solid;
+}
+ul.primary li a:hover {
+  background-color: #eee;
+  border-color: #ccc;
+  border-bottom-color: #eee;
+}
+ul.secondary {
+  border-bottom: 1px solid #bbb;
+  padding: 0.5em 1em 0.5em 1em;
+  margin: 5px;
+}
+ul.secondary li {
+  display: inline;
+  padding: 0 1em;
+  border-right: 1px solid #ccc;
+}
+ul.secondary a {
+  padding: 0;
+  text-decoration: none;
+}
+ul.secondary a.active {
+  border-bottom: 4px solid #999;
+}
+
+/* Blog-specific */
+.chronodata {
+	padding: 2px 0 2px 20px ;
+	background: url('http://openmedicine.ca/images/time.png') left center no-repeat;
+	color: #888;
+	font-size: 75%;
+}
+.comment_add a, .comment_comments a {
+	background: url('http://openmedicine.ca/images/comment.png') no-repeat left center;
+	padding-left: 15px;
+	font-size: 75%;
+	text-align: right;
+}
+
+ul.links {
+  float: right;
+}
+
+.submitted {
+font-size: 75%;
+}
+
+.post-footer {
+	clear: both;
+	border-bottom: 1px solid #aaa;
+	width: 100%;
+	padding-bottom: 0;
+	margin-bottom: 20px;
+}
+
+.even {
+	background: #fafafa;
+}
+cite, cite a, cite a:visited {
+	font-weight: bold;
+	font-style: normal;
+	font-size: 1.2 em;
+	color: #CC6600;
+}
+
+/* End blog-specific */
+
+.block ul {
+padding: 0;
+margin: 0;
+}
+.block ul li, .block ul.menu li, .block li.leaf, li.leaf {
+  padding: 0 0 .2em 1.5em;
+  margin: 0;
+  list-style-type: none;
+  list-style-image: none;
+  background: transparent url(/images/menu-leaf.gif) no-repeat 1px .35em;
+}
+.item-list ul li {
+  list-style-type: none;
+  list-style-image: none;
+}
+
+/* Specific to new TOC */
+
+.toc-Title1 {
+	padding-top: 0.65em;
+	font-size: 1.25em;
+	border-bottom: 1px solid #000;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	color: #870000;
+	font-weight: bold;
+}
+
+.toc-Title2 {
+	padding-top: 0.5em;
+	font-size: 1.25em;
+	border-bottom: 1px solid #000;
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	color: #870000;
+	font-weight: bold;
+}
+
+.toc-title {
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	font-weight: bold;
+	padding-top: 10px;
+}
+
+.toc-date {
+	color: #888;
+	font-size: 75%;
+}
+
+.toc-byline {
+	font-size: 85%;
+	font-style: italic;
+}
+
+.toc-links {
+	margin-bottom: 10px;
+}
+
+
+.toc-thumb-title {
+	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bitstream Vera Sans", verdana, lucida, arial, helvetica, sans-serif;
+	padding-top: 2px;
+	line-height: 110%;
+	font-size: 75%;
+}
+
+.toc-thumb-date {
+	color: #888;
+	font-size: 60%;
+}
+
+.toc-thumb-byline {
+	font-size: 65%;
+	font-style: italic;
+}
+
+.toc-links {
+	margin-bottom: 10px;
+}
+
+#whatsnew {
+	margin-bottom: 20px;
+}
+
+#whatsnew img {
+		border: 2px solid #a6a6a6;
+}
+
+#whatsnew-1 {
+	margin-bottom: 20px;
+}
+
+#whatsnew-1-thumb {
+	text-align:right;
+	float:right;
+	font-size:60%;
+	margin: 0;
+	padding-left:5px;
+	width:402px;
+}
+
+.whatsnew-2 {
+	float: left;
+	width: 50%;
+	margin: 0;
+	padding: 0;
+	min-width: 313px;
+	min-height:125px;
+}
+
+.whatsnew-2-thumb {
+	float:left;
+	font-size:80%;
+	margin:1px;
+	padding-right:5px;
+	width:102px;
+}
+
+.whatsnew-2-meta {
+	margin: 0;
+	padding: 0;
+	background-color: #eee;
+	min-height:125px;
+}
+
+/* Add purty Block quotes */
+blockquote {
+	background: url(/images/quote.png) 0 0 no-repeat;
+	margin: 30px 10px 0 0;
+	padding: 6px 0 2px 28px;
+	line-height: 1.1em;
+	font-style: italic;
+	font-family: Georgia, "Bitstream Vera Serif", serif;
+	font-size: 0.9em;
+	font-weight: normal;
+	min-height: 30px;
+}
+.boxed-text {
+	background-color: #eee;
+	border: 1px solid #ccc;
+	margin: auto;
+	width: 50%;
+	padding: 5px;
+	line-height: 100%;
+	font-style: italic;
+	font-family: Georgia, "Bitstream Vera Serif", serif;
+	font-size: 0.9em;
+	font-weight: normal;
+}
+
+/* RSS feed box */
+.FeedTitle {
+	font-family: "Palatino","Georgia","Baskerville",serif;
+	font-size: 1.5em;
+	line-height: 100%;
+	padding-top: 15px;
+	color: #333;
+}
+
+.FeedTitle a {
+	color: #333;
+}
+
+.FeedAuthor {
+	color: #777;
+}
+
+.blockTitleFeed {
+	font-size: 2em;
+       	display: block;
+        padding: 0.5em 0 0.5em 0;
+       	color: #870000;
+        font-weight: bold;
+       	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bi";
+}
diff --git a/styles/help.css b/styles/help.css
old mode 100644
new mode 100755
index 5a55d0e..fec439c
--- a/styles/help.css
+++ b/styles/help.css
@@ -1,12 +1,12 @@
 /**
  * help.css
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Stylesheet for help pages.
  *
- * $Id$
+ * $Id$
  */
 
 /**
@@ -14,39 +14,21 @@
  */
 
 #header h1 {
-	width: 100%;
+	width: 500px;
 }
 
 #container {
-	width: 100%;
-}
-
-#sidebar {
-	float: right;
-	width: 20%;
-	padding: 1em 0em 1em 0em;
-	font-size: 0.65em;
-	height: 100%;
-	margin-right: 5%;
+	width: 680px;
 }
 
 #body {
-	width: 100%;
+	width: 660px;
 }
 
 #main {
-	float: left;
-	width:58%;
-	height: 100%;
-	margin-left: 5%;
+	width: 480px;
 }
 
-/* hack to set width for non-IE browsers to to a percentage 
-   width of container (like it should be), not the window */
-html>body #main {
-	width: 68%;
-} 
-
 #main h4 {
 	margin: 0em 1em 0.5em 0em;
 	padding-top: 0.5em;
@@ -86,6 +68,10 @@ span.blockTitle {
  * Sidebar
  */
 
+#sidebar {
+	width: 165px;
+}
+
 #sidebar div.block span.blockTitle {
 	font-family: Georgia,'Times New Roman',Times,serif;
 }
diff --git a/styles/rightSidebar.css b/styles/rightSidebar.css
index 01eeaf2..7d7b024 100644
--- a/styles/rightSidebar.css
+++ b/styles/rightSidebar.css
@@ -1,12 +1,12 @@
 /**
  * rightSidebar.css
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Site-wide shared elements for pages including a right-hand sidebar.
  *
- * $Id$
+ * $Id$
  */
 
 /**
@@ -24,21 +24,20 @@
 }
 
 #rightSidebar {
-	float: right;
-	width: 14%;
-	padding: 1em 0em 1em 0em;
+	float: left;
+	width: 250px;
+	padding: 1em 0em 1em 1em;
 	font-size: 0.65em;
+	margin:left: 10px;
 	height: 100%;
-	margin-right: 10%;
-	margin-left: 2%;
+	overflow: hidden;
+	border-left: 2px dotted #D8D8D8;
 }
 
-* html #rightSidebar { margin-right: 5%; }
+* html #rightSidebar { margin-right: 0; }
 
 #main {
 	float: left;
-	width: 63%;
-	margin-left: 10%;
 	display: inline;
-	overflow: hidden;
+	//overflow: hidden;
 }
diff --git a/styles/sidebar.css b/styles/sidebar.css
index d33da1c..bf4d96b 100644
--- a/styles/sidebar.css
+++ b/styles/sidebar.css
@@ -1,12 +1,12 @@
 /**
  * sidebar.css
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Site-wide shared elements for pages including sidebar(s).
  *
- * $Id$
+ * $Id$
  */
 
 /**
@@ -23,14 +23,19 @@
 	padding-bottom: 1.5em;
 }
 
-#sidebar div.block span.blockTitle {
-	display: block;
-	padding: 0.5em 0 0.5em 0;
-	font-size: 1em;
-	letter-spacing: 0.1em;
-	text-transform: uppercase;
+div.block span.blockTitle {
+       	display: block;
+        padding: 0.5em 0 0.5em 0;
+       	font-size: 1.2em;
+//      letter-spacing: 0.1em;
+//     	text-transform: uppercase;
+       	color: #870000;
+        font-weight: bold;
+       	font-family: Myriad, "Gill Sans", "Century Gothic", "Trebuchet MS", "Bi";
 }
 
+
+
 #sidebar div.block span.blockSubtitle {
 	display: block;
 	padding: 0;
diff --git a/templates/article/article.tpl b/templates/article/article.tpl
index cd37f9b..f8c077c 100644
--- a/templates/article/article.tpl
+++ b/templates/article/article.tpl
@@ -1,12 +1,12 @@
 {**
  * article.tpl
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Article View.
  *
- * $Id$
+ * $Id$
  *}
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
@@ -25,7 +25,7 @@
 
 	<link rel="stylesheet" href="{$baseUrl}/styles/common.css" type="text/css" />
 	<link rel="stylesheet" href="{$baseUrl}/styles/articleView.css" type="text/css" />
-
+	<link rel="stylesheet" href="{$baseUrl}/styles/header-default.css" type="text/css" />
 	{foreach from=$stylesheets item=cssUrl}
 		<link rel="stylesheet" href="{$cssUrl}" type="text/css" />
 	{/foreach}
@@ -36,62 +36,29 @@
 <body>
 
 <div id="container">
-
+<div id="header">
+<table id="header_table" width="100%">
+ <tr>
+  <td><h2>Open Medicine</h2>A peer-reviewed, independent, open-access 
+journal.</td>
+  </tr>
+</table>
+</div><!--Header-->
 <div id="body">
-
 <div id="main">
 
-<h2>{$siteTitle|escape}{if $issue},&nbsp;{$issue->getIssueIdentification(false,true)|strip_unsafe_html|nl2br}{/if}</h2>
-
-<div id="navbar">
-	<ul class="menu">
-		<li><a href="{url page="index"}" target="_parent">{translate key="navigation.home"}</a></li>
-		<li><a href="{url page="about"}" target="_parent">{translate key="navigation.about"}</a></li>
-
-		{if $isUserLoggedIn}
-			<li><a href="{url page="user"}" target="_parent">{translate key="navigation.userHome"}</a></li>
-		{else}
-			<li><a href="{url page="login"}" target="_parent">{translate key="navigation.login"}</a></li>
-			<li><a href="{url page="user" op="register"}" target="_parent">{translate key="navigation.register"}</a></li>
-		{/if}{* $isUserLoggedIn *}
-
-		<li><a href="{url page="search"}" target="_parent">{translate key="navigation.search"}</a></li>
+<h2>{$siteTitle|escape}{if $issue},&nbsp;{$issue->getIssueIdentification(false,true)|escape}{/if}</h2>
 
-		{if $currentJournal}
-			<li><a href="{url page="issue" op="current"}" target="_parent">{translate key="navigation.current"}</a></li>
-			<li><a href="{url page="issue" op="archive"}" target="_parent">{translate key="navigation.archives"}</a></li>
-		{/if}{* $currentJournal *}
-
-		{if $enableAnnouncements}
-			<li><a href="{url page="announcement"}" target="_parent">{translate key="announcement.announcements"}</a></li>
-		{/if}{* $enableAnnouncements *}
-
-		{call_hook name="Templates::Common::Header::Navbar::CurrentJournal"}
-
-		{foreach from=$navMenuItems item=navItem}
-			{if $navItem.url != '' && $navItem.name != ''}
-				<li><a href="{if $navItem.isAbsolute}{$navItem.url|escape}{else}{url page=$requestedPage}{$navItem.url|escape}{/if}" target="_parent">{if $navItem.isLiteral}{$navItem.name|escape}{else}{translate key=$navItem.name}{/if}</a></li>
-			{/if}
-		{/foreach}
-	</ul>
-</div>
 <div id="breadcrumb">
 	<a href="{url page="index"}" target="_parent">{translate key="navigation.home"}</a> &gt;
-	{if $issue}<a href="{url page="issue" op="view" path=$issue->getBestIssueId($currentJournal)}" target="_parent">{$issue->getIssueIdentification(false,true)|strip_unsafe_html|nl2br}</a> &gt;{/if}
+	{if $issue}<a href="{url page="issue" op="view" path=$issue->getBestIssueId($currentJournal)}" target="_parent">{$issue->getIssueIdentification(false,true)|escape}</a> &gt;{/if}
 	<a href="{url page="article" op="view" path=$articleId|to_array:$galleyId}" class="current" target="_parent">{$article->getFirstAuthor(true)|escape}</a>
 </div>
 
 <div id="content">
 {if $galley}
 	{if $galley->isHTMLGalley()}
-		<div id="topBar">
-			<div id="articleFontSize">
-				{translate key="article.fontSize"}:&nbsp;
-				<a href="#" onclick="setFontSize('{translate|escape:"jsparam" key="article.fontSize.small.altText"}');" class="icon">{icon path="templates/images/icons/" name="font_small"}</a>&nbsp;
-				<a href="#" onclick="setFontSize('{translate|escape:"jsparam" key="article.fontSize.medium.altText"}');" class="icon">{icon path="templates/images/icons/" name="font_medium"}</a>&nbsp;
-				<a href="#" onclick="setFontSize('{translate|escape:"jsparam" key="article.fontSize.large.altText"}');" class="icon">{icon path="templates/images/icons/" name="font_large"}</a>
-			</div>
-		</div>
+		<div id="topBar"/>
 		{$galley->getHTMLContents()}
 	{/if}
 {else}
@@ -109,19 +76,13 @@
 				{/if}
 			</div>
 		{/if}
-		<div id="articleFontSize">
-				{translate key="article.fontSize"}:&nbsp;
-			<a href="#" onclick="setFontSize('{translate|escape:"jsparam" key="article.fontSize.small.altText"}');" class="icon">{icon path="templates/images/icons/" name="font_small"}</a>&nbsp;
-			<a href="#" onclick="setFontSize('{translate|escape:"jsparam" key="article.fontSize.medium.altText"}');" class="icon">{icon path="templates/images/icons/" name="font_medium"}</a>&nbsp;
-			<a href="#" onclick="setFontSize('{translate|escape:"jsparam" key="article.fontSize.large.altText"}');" class="icon">{icon path="templates/images/icons/" name="font_large"}</a>
-		</div>
 	</div>
 	{if $coverPagePath}
 		<div id="articleCoverImage"><img src="{$coverPagePath|escape}{$coverPageFileName|escape}"{if $coverPageAltText != ''} alt="{$coverPageAltText|escape}"{else} alt="{translate key="article.coverPage.altText"}"{/if}{if $width} width="{$width|escape}"{/if}{if $height} height="{$height|escape}"{/if}/>
 		</div>
 	{/if}
-	<h3>{$article->getArticleTitle()|strip_unsafe_html}</h3>
-	<div><em>{$article->getAuthorString()|escape}</em></div>
+	<div id="MainTitle">{$article->getArticleTitle()|strip_unsafe_html}</div>
+	<div id="Byline">{$article->getAuthorString()|escape}</div>
 	<br />
 	{if $article->getArticleAbstract()}
 		<h4>{translate key="article.abstract"}</h4>
diff --git a/templates/article/interstitial.tpl b/templates/article/interstitial.tpl
index 99825e0..ca6f4d0 100644
--- a/templates/article/interstitial.tpl
+++ b/templates/article/interstitial.tpl
@@ -1,13 +1,13 @@
 {**
  * interstitial.tpl
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Interstitial page used to display a note
  * before downloading a file
  *
- * $Id$
+ * $Id$
  *}
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
@@ -48,5 +48,24 @@
 </div>
 </div>
 </div>
+{literal}
+<!-- Piwik -->
+<script type="text/javascript">
+var pkBaseURL = (("https:" == document.location.protocol) ? 
+"https://analytics.openmedicine.ca/" : 
+"http://analytics.openmedicine.ca/");
+document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' 
+type='text/javascript'%3E%3C/script%3E"));
+</script><script type="text/javascript">
+try {
+var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 3);
+piwikTracker.trackPageView();
+piwikTracker.enableLinkTracking();
+} catch( err ) {}
+</script><noscript><p><img 
+src="http://analytics.openmedicine.ca/piwik.php?idsite=3" 
+style="border:0" alt="" /></p></noscript>
+<!-- End Piwik Tracking Tag -->
+{/literal}
 </body>
 </html>
diff --git a/templates/article/pdfInterstitial.tpl b/templates/article/pdfInterstitial.tpl
index 5e32942..fbc2d07 100644
--- a/templates/article/pdfInterstitial.tpl
+++ b/templates/article/pdfInterstitial.tpl
@@ -1,13 +1,13 @@
 {**
  * pdfInterstitial.tpl
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Interstitial page used to display a note about plugins
  * before sending browser directly to the PDF file
  *
- * $Id$
+ * $Id$
  *}
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
@@ -50,5 +50,24 @@
 </div>
 </div>
 </div>
+{literal}
+<!-- Piwik -->
+<script type="text/javascript">
+var pkBaseURL = (("https:" == document.location.protocol) ? 
+"https://analytics.openmedicine.ca/" : 
+"http://analytics.openmedicine.ca/");
+document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' 
+type='text/javascript'%3E%3C/script%3E"));
+</script><script type="text/javascript">
+try {
+var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 3);
+piwikTracker.trackPageView();
+piwikTracker.enableLinkTracking();
+} catch( err ) {}
+</script><noscript><p><img 
+src="http://analytics.openmedicine.ca/piwik.php?idsite=3" 
+style="border:0" alt="" /></p></noscript>
+<!-- End Piwik Tracking Tag -->
+{/literal}
 </body>
 </html>
diff --git a/templates/article/view.tpl b/templates/article/view.tpl
index c9efdf5..112ebbb 100644
--- a/templates/article/view.tpl
+++ b/templates/article/view.tpl
@@ -15,7 +15,7 @@
 
 <head>
 	<meta http-equiv="Content-Type" content="text/html; charset={$defaultCharset|escape}" />
-	<title>{$article->getFirstAuthor(true)|escape}</title>
+	<title>{$article->getArticleTitle()|escape} | {$article->getFirstAuthor(true)|escape} | {$currentJournal->getTitle()|escape}</title>
 
 	<link rel="stylesheet" href="{$baseUrl}/styles/common.css" type="text/css" />
 	<link rel="stylesheet" href="{$baseUrl}/styles/articleView.css" type="text/css" />
@@ -54,6 +54,25 @@
 			</td>
 		</tr>
 	</table>
+{literal}
+<!-- Piwik -->
+<script type="text/javascript">
+var pkBaseURL = (("https:" == document.location.protocol) ? 
+"https://analytics.openmedicine.ca/" : 
+"http://analytics.openmedicine.ca/");
+document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' 
+type='text/javascript'%3E%3C/script%3E"));
+</script><script type="text/javascript">
+try {
+var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 3);
+piwikTracker.trackPageView();
+piwikTracker.enableLinkTracking();
+} catch( err ) {}
+</script><noscript><p><img 
+src="http://analytics.openmedicine.ca/piwik.php?idsite=3" 
+style="border:0" alt="" /></p></noscript>
+<!-- End Piwik Tracking Tag -->
+{/literal}
 </body>
 </noframes>
 </frameset>
diff --git a/templates/common/footer.tpl b/templates/common/footer.tpl
index 2972b8a..6c7bcf7 100644
--- a/templates/common/footer.tpl
+++ b/templates/common/footer.tpl
@@ -24,8 +24,21 @@
 	{/if}
 {/strip}{/if}
 {call_hook name="Templates::Common::Footer::PageFooter"}
+{call_hook|assign:"leftSidebarCode" name="Templates::Common::LeftSidebar"}
+{call_hook|assign:"rightSidebarCode" name="Templates::Common::RightSidebar"}
+
 </div><!-- content -->
 </div><!-- main -->
+
+{if $rightSidebarCode}
+	<div id="sidebar">
+		<div id="rightSidebar">
+			{$rightSidebarCode}
+		</div>
+	</div>
+{/if}
+
+
 </div><!-- body -->
 
 {get_debug_info}
@@ -48,5 +61,19 @@
 {/if}
 
 </div><!-- container -->
+{literal}
+<!-- Piwik -->
+<script type="text/javascript">
+var pkBaseURL = (("https:" == document.location.protocol) ? "https://analytics.openmedicine.ca/" : "http://analytics.openmedicine.ca/");
+document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
+</script><script type="text/javascript">
+try {
+var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
+piwikTracker.trackPageView();
+piwikTracker.enableLinkTracking();
+} catch( err ) {}
+</script><noscript><p><img src="http://analytics.openmedicine.ca/piwik.php?idsite=1" style="border:0" alt="" /></p></noscript>
+<!-- End Piwik Tracking Tag -->
+{/literal}
 </body>
 </html>
diff --git a/templates/common/header.tpl b/templates/common/header.tpl
index 0e3fca4..0e0acaa 100644
--- a/templates/common/header.tpl
+++ b/templates/common/header.tpl
@@ -23,6 +23,8 @@
 	{$metaCustomHeaders}
 
 	<link rel="stylesheet" href="{$baseUrl}/styles/common.css" type="text/css" />
+	<link rel="stylesheet" href="{$baseUrl}/styles/menu.css" type="text/css" />
+	<link rel="stylesheet" href="{$baseUrl}/styles/header-default.css" type="text/css" />
 
 	{call_hook|assign:"leftSidebarCode" name="Templates::Common::LeftSidebar"}
 	{call_hook|assign:"rightSidebarCode" name="Templates::Common::RightSidebar"}
@@ -36,92 +38,96 @@
 	{/foreach}
 
 	<script type="text/javascript" src="{$baseUrl}/js/general.js"></script>
+	<script src="http://www.openmedicine.ca/js/jquery.js" type="text/javascript"></script>
+	<script src="http://www.openmedicine.ca/js/jquery.dropdownPlain.js" type="text/javascript"></script>
 	{$additionalHeadData}
 </head>
 <body>
 <div id="container">
 
 <div id="header">
-<div id="headerTitle">
-<h1>
-{if $displayPageHeaderLogo && is_array($displayPageHeaderLogo)}
-	<img src="{$publicFilesDir}/{$displayPageHeaderLogo.uploadName|escape:"url"}" width="{$displayPageHeaderLogo.width|escape}" height="{$displayPageHeaderLogo.height|escape}" {if $displayPageHeaderLogo.altText != ''}alt="{$displayPageHeaderLogo.altText|escape}"{else}alt="{translate key="common.pageHeaderLogo.altText"}"{/if} />
-{/if}
-{if $displayPageHeaderTitle && is_array($displayPageHeaderTitle)}
-	<img src="{$publicFilesDir}/{$displayPageHeaderTitle.uploadName|escape:"url"}" width="{$displayPageHeaderTitle.width|escape}" height="{$displayPageHeaderTitle.height|escape}" {if $displayPageHeaderTitle.altText != ''}alt="{$displayPageHeaderTitle.altText|escape}"{else}alt="{translate key="common.pageHeader.altText"}"{/if} />
-{elseif $displayPageHeaderTitle}
-	{$displayPageHeaderTitle}
-{elseif $alternatePageHeader}
-	{$alternatePageHeader}
-{elseif $siteTitle}
-	{$siteTitle}
-{else}
-	{translate key="common.openJournalSystems"}
-{/if}
-</h1>
-</div>
+     <div id="diminuitive_bar">
+	{if $isUserLoggedIn}
+		<a href="{url journal="index" page="user"}"><img src="/images/icons/login.png" alt="Sign in" align="left" />&nbsp;{$loggedInUsername|escape}</a>
+		| <a href="{url page="user" op="profile"}">{translate key="plugins.block.user.myProfile"}</a>
+	 	| <a href="{url page="login" op="signOut"}">{translate key="plugins.block.user.logout"}</a>
+		{if $userSession->getSessionVar('signedInAs')}
+			| <a href="{url page="manager" op="signOutAsUser"}">{translate key="plugins.block.user.signOutAsUser"}</a>
+		{/if}
+
+
+	{else}
+		<a href="http://www.openmedicine.ca/login"><img src="/images/icons/login.png" alt="Sign in" align="left" />&nbsp;Sign in</a>
+ | <a href="http://www.openmedicine.ca/user/register?source=">Register</a>
+	{/if}
+	</div>
+     <div id="journalname"><h2>Open Medicine</h2>A peer-reviewed, independent, open-access journal.</div>
+
+     <div class="navcontainer">
+      <ul class="dropdown">
+	<li><a href="/">Home</a></li>
+	<li><a href="{url page="issue" op="archive"}">Issues</a></li>
+	<li><a href="http://blog.openmedicine.ca">Blogs</a></li>
+	<li><a href="{url page="cms" op="view" path="resources"}">Resources<!--[if IE 7]><!--></a><!--<![endif]--><!--[if lte IE 6]><table><tr><td><![endif]-->
+		<ul>
+			<li><a href="{url page="information" op="authors"}">Authors</a></li>
+			<li><a href="{url page="cms" op="view" path="informationforreviewers"}">Reviewers</a></li>
+			<li><a href="{url page="cms" op="view" path="informationforadvertisers"}">Advertisers</a></li>
+			<li><a href="{url page="information" op="librarians"}">Librarians</a></li>
+			<li><a href="{url page="cms" op="view" path="informationformedia"}">Media</a></li>
+		</ul>
+	<!--[if lte IE 6]></td></tr></table></a><![endif]-->
+	</li>
+	<li><a href="{url page="about"}">About OM<!--[if IE 7]><!--></a><!--<![endif]--><!--[if lte IE 6]><table><tr><td><![endif]-->
+		<ul>
+			<li><a href="{url page="cms" op="view" path="mission"}">Mission</a></li>
+			<li><a href="{url page="about" op="editorialTeam"}">Editorial team</a></li>
+			<li><a href="{url page="about" op="displayMembership" path="8"}">Editorial board</a></li>
+			<li><a href="{url page="about" op="displayMembership" path="12"}">Board of directors</a></li>
+			<li><a href="{url page="about" op="editorialPolicies"}">Policies</a></li>
+			<li><a href="{url page="cms" op="view" path="inthenews"}">OM in the News</a></li>
+			<li><a href="{url page="about" op="aboutThisPublishingSystem"}">Open Journal Systems</a></li>
+			<li><a href="{url page="about" op="contact"}">Contact us</a></li>
+		</ul>
+	<!--[if lte IE 6]></td></tr></table></a><![endif]-->
+	</li>
+	<li><a href="{url page="search"}">Search</a><!--[if IE 7]><!--></a><!--<![endif]--><!--[if lte IE 6]><table><tr><td><![endif]-->
+		<ul>
+			<li><a href="{url page="search"}">Search articles</a></li>
+			<li><a href="http://news.google.com/news?&amp;q=%22open+medicine%22">Search OM in the News</a></li>
+			<li><a href="http://technorati.com/search/%22open+medicine%22">Search OM in Blogs</a></li>
+		</ul>
+	<!--[if lte IE 6]></td></tr></table></a><![endif]-->
+	</li>
+	<li><a href="{url page="cms" op="view" path="supportom"}">Donate to OM<!--[if IE 7]><!--></a><!--<![endif]--><!--[if lte IE 6]><table><tr><td><![endif]-->
+		<ul>
+			<li><a href="{url page="cms" op="view" path="donate"}">Donate</a></li>
+			<li><a href="{url page="cms" op="view" path="supportersofopenmedicine"}">Be a supporter</a></li>
+			<li><a href="{url page="cms" op="view" path="sponsorshipofopenmedicine"}">Be a sponsor</a></li>
+			<li><a href="{url page="cms" op="view" path="partnersandsponsors"}">Partners and Sponsors</a></li>
+		</ul>
+	<!--[if lte IE 6]></td></tr></table></a><![endif]-->
+	</li>
+      </ul>
+     </div> <!--Nav Container-->
+     <div id="blueline">&nbsp;</div>
 </div>
 
 <div id="body">
 
-{if $leftSidebarCode || $rightSidebarCode}
+{if $leftSidebarCode}
 	<div id="sidebar">
-		{if $leftSidebarCode}
-			<div id="leftSidebar">
-				{$leftSidebarCode}
-			</div>
-		{/if}
-		{if $rightSidebarCode}
-			<div id="rightSidebar">
-				{$rightSidebarCode}
-			</div>
-		{/if}
+		<div id="leftSidebar">
+			{$leftSidebarCode}
+		</div>
 	</div>
 {/if}
 
 <div id="main">
-<div id="navbar">
-	<ul class="menu">
-		<li><a href="{url page="index"}">{translate key="navigation.home"}</a></li>
-		<li><a href="{url page="about"}">{translate key="navigation.about"}</a></li>
-
-		{if $isUserLoggedIn}
-			<li><a href="{url page="user"}">{translate key="navigation.userHome"}</a></li>
-		{else}
-			<li><a href="{url page="login"}">{translate key="navigation.login"}</a></li>
-			<li><a href="{url page="user" op="register"}">{translate key="navigation.register"}</a></li>
-		{/if}{* $isUserLoggedIn *}
-
-		<li><a href="{url page="search"}">{translate key="navigation.search"}</a></li>
-
-		{if $currentJournal}
-			<li><a href="{url page="issue" op="current"}">{translate key="navigation.current"}</a></li>
-			<li><a href="{url page="issue" op="archive"}">{translate key="navigation.archives"}</a></li>
-		{/if}{* $currentJournal *}
-
-		{if $enableAnnouncements}
-			<li><a href="{url page="announcement"}">{translate key="announcement.announcements"}</a></li>
-		{/if}{* enableAnnouncements *}
-
-		{call_hook name="Templates::Common::Header::Navbar::CurrentJournal"}
-
-		{foreach from=$navMenuItems item=navItem}
-			{if $navItem.url != '' && $navItem.name != ''}
-				<li><a href="{if $navItem.isAbsolute}{$navItem.url|escape}{else}{$navItem.url|escape}{/if}">{if $navItem.isLiteral}{$navItem.name|escape}{else}{translate key=$navItem.name}{/if}</a></li>
-			{/if}
-		{/foreach}
-	</ul>
-</div>
-
-<div id="breadcrumb">
-	<a href="{url page="index"}">{translate key="navigation.home"}</a> &gt;
-	{foreach from=$pageHierarchy item=hierarchyLink}
-		<a href="{$hierarchyLink[0]|escape}" class="hierarchyLink">{if not $hierarchyLink[2]}{translate key=$hierarchyLink[1]}{else}{$hierarchyLink[1]|escape}{/if}</a> &gt;
-	{/foreach}
-	<a href="{$currentUrl|escape}" class="current">{$pageCrumbTitleTranslated}</a>
-</div>
-
+{if $pageTitleTranslated == "Open Medicine"}
+{else}
 <h2>{$pageTitleTranslated}</h2>
+{/if}
 
 {if $pageSubtitle && !$pageSubtitleTranslated}{translate|assign:"pageSubtitleTranslated" key=$pageSubtitle}{/if}
 {if $pageSubtitleTranslated}
diff --git a/templates/index/journal.tpl b/templates/index/journal.tpl
index aa91c69..4da9f03 100644
--- a/templates/index/journal.tpl
+++ b/templates/index/journal.tpl
@@ -41,8 +41,7 @@
 {if $issue}
 	{* Display the table of contents or cover page of the current issue. *}
 	<br />
-	<h3>{$issue->getIssueIdentification()|strip_unsafe_html|nl2br}</h3>
-	{include file="issue/view.tpl"}
+	{include file="issue/customissue.tpl"}
 {/if}
 
 {include file="common/footer.tpl"}
diff --git a/templates/issue/issue.tpl b/templates/issue/issue.tpl
index a76182d..ed323e5 100644
--- a/templates/issue/issue.tpl
+++ b/templates/issue/issue.tpl
@@ -1,81 +1,50 @@
 {**
  * issue.tpl
  *
- * Copyright (c) 2003-2010 John Willinsky
+ * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Issue
  *
- * $Id$
+ * $Id$
  *} 
+
 {foreach name=sections from=$publishedArticles item=section key=sectionId}
-{if $section.title}<h4 class="tocSectionTitle">{$section.title|escape}</h4>{/if}
+	{if $section.title}<div class="toc-Title2">{$section.title|escape}</div>{/if}
 
-{foreach from=$section.articles item=article}
-	{assign var=articlePath value=$article->getBestArticleId($currentJournal)}
+	{foreach from=$section.articles item=article}
+		{assign var=issue2 value=$issueDao->getIssueById($article->getIssueId())}
+		{assign var=articlePath value=$article->getBestArticleId($currentJournal)}
+		{assign var=articleId value=$article->getArticleId()}
 	
-<table class="tocArticle" width="100%">
-<tr valign="top">
-	{if $article->getFileName($locale) && $article->getShowCoverPage($locale) && !$article->getHideCoverPageToc($locale)}
-	<td rowspan="2">
-		<div class="tocArticleCoverImage">
-		<a href="{url page="article" op="view" path=$articlePath}" class="file">
-		<img src="{$coverPagePath|escape}{$article->getFileName($locale)|escape}"{if $article->getCoverPageAltText($locale) != ''} alt="{$article->getCoverPageAltText($locale)|escape}"{else} alt="{translate key="article.coverPage.altText"}"{/if}/></a></div>
-	</td>
-	{/if}
-
-	{if $article->getArticleAbstract() == ""}
-		{assign var=hasAbstract value=0}
-	{else}
-		{assign var=hasAbstract value=1}
-	{/if}
-
-	{assign var=articleId value=$article->getArticleId()}
-	{if (!$subscriptionRequired || $article->getAccessStatus() || $subscribedUser || $subscribedDomain || ($subscriptionExpiryPartial && $articleExpiryPartial.$articleId))}
-		{assign var=hasAccess value=1}
-	{else}
-		{assign var=hasAccess value=0}
-	{/if}
+		<div class="toc-title">{$article->getArticleTitle()|strip_unsafe_html}</div>
+		<div class="toc-date">{$article->getDatePublished()|date_format:"%B %e, %Y"}. Vol. {$issue2->getVolume()}({$issue2->getNumber()}){if $article->getPages()|escape}, pp.{$article->getPages()|escape}{/if}</div>
 
-	<td class="tocTitle">{if !$hasAccess || $hasAbstract}<a href="{url page="article" op="view" path=$articlePath}">{$article->getArticleTitle()|strip_unsafe_html}</a>{else}{$article->getArticleTitle()|strip_unsafe_html}{/if}</td>
-	<td class="tocGalleys">
-		{if $hasAccess || ($subscriptionRequired && $showGalleyLinks)}
+		<div class="toc-byline">
+			{if (!$section.hideAuthor && $article->getHideAuthor() == 0) || $article->getHideAuthor() == 2}
+				{foreach from=$article->getAuthors() item=author name=authorList}
+					{$author->getFullName()|escape}{if !$smarty.foreach.authorList.last},{/if}
+				{/foreach}
+			{else}
+				&nbsp;
+			{/if}
+		</div>
+		<div class="toc-links">
 			{foreach from=$article->getLocalizedGalleys() item=galley name=galleyList}
 				<a href="{url page="article" op="view" path=$articlePath|to_array:$galley->getBestGalleyId($currentJournal)}" class="file">{$galley->getGalleyLabel()|escape}</a>
-				{if $subscriptionRequired && $showGalleyLinks && $restrictOnlyPdf}
-					{if $article->getAccessStatus() || !$galley->isPdfGalley()}	
-						<img class="accessLogo" src="{$baseUrl}/templates/images/icons/fulltext_open_medium.gif" alt="{translate key="article.accessLogoOpen.altText"}" />
-					{else}
-						<img class="accessLogo" src="{$baseUrl}/templates/images/icons/fulltext_restricted_medium.gif" alt="{translate key="article.accessLogoRestricted.altText"}" />
-					{/if}
-				{/if}
 			{/foreach}
-			{if $subscriptionRequired && $showGalleyLinks && !$restrictOnlyPdf}
-				{if $article->getAccessStatus()}
-					<img class="accessLogo" src="{$baseUrl}/templates/images/icons/fulltext_open_medium.gif" alt="{translate key="article.accessLogoOpen.altText"}" />
+			{if $CommentDAO->attributedCommentsExistForArticle($article->getArticleId())}
+				{if $CommentDAO->attributedCommentsExistForArticle($article->getArticleId()) == 1}
+					<a href="{$baseUrl}/comment/view/{$article->getArticleId()}/0" class="file">Comment ({$CommentDAO->attributedCommentsExistForArticle($article->getArticleId())})</a>
 				{else}
-					<img class="accessLogo" src="{$baseUrl}/templates/images/icons/fulltext_restricted_medium.gif" alt="{translate key="article.accessLogoRestricted.altText"}" />
+					<a href="{$baseUrl}/comment/view/{$article->getArticleId()}/0" class="file">Comments ({$CommentDAO->attributedCommentsExistForArticle($article->getArticleId())})</a>
 				{/if}
-			{/if}				
-		{/if}
-	</td>
-</tr>
-<tr>
-	<td class="tocAuthors">
-		{if (!$section.hideAuthor && $article->getHideAuthor() == 0) || $article->getHideAuthor() == 2}
-			{foreach from=$article->getAuthors() item=author name=authorList}
-				{$author->getFullName()|escape}{if !$smarty.foreach.authorList.last},{/if}
-			{/foreach}
-		{else}
-			&nbsp;
-		{/if}
-	</td>
-	<td class="tocPages">{$article->getPages()|escape}</td>
-</tr>
-</table>
-{/foreach}
+			{else}
+				<a href="{$baseUrl}/comment/view/{$article->getArticleId()}/0" class="file">Add a comment</a>
+			{/if}
+		</div>
+	{/foreach}
 
 {if !$smarty.foreach.sections.last}
-<div class="separator"></div>
 {/if}
 {/foreach}